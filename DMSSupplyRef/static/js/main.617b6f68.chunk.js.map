{"version":3,"sources":["services/httpService.js","config.js","metiers/Profile/Profiles.js","services/profileServices.js","templates/template1/component/Layout/Slider.js","templates/template1/component/Header/Theme.js","templates/template1/component/Header/Backgraund.js","templates/template1/component/Header/Setting.js","DjangoService/httpService.js","templates/template1/component/content/pages/TabFormulaire/TabTable.js","DjangoService/authnService.js","templates/template1/component/Header/Compte.js","templates/template1/component/Header/menuUser.js","templates/template1/component/Header/Notification.js","templates/template1/component/Header/Message.js","templates/template1/component/Header/Header.js","templates/template1/component/content/TabsHeader.js","templates/template1/component/content/pages/Searche.js","templates/template1/component/content/pages/Results.js","templates/template1/component/content/pages/Formulaire.js","metiers/Profile/pages/Results.js","templates/template1/component/content/Content.js","templates/template1/component/Layout/Layout.js","metiers/Profile/pages/Searche.js","metiers/Profile/pages/TreeAppMenu.js","DjangoService/profileService.js","metiers/Profile/pages/Formulaire.js","metiers/User/pages/formulaireComponents/EditableTable.js","templates/template1/Pages/Error404.js","templates/template1/Pages/Error403.js","templates/template1/Pages/Error500.js","metiers/Profile/Route.js","metiers/User/pages/Searche.js","metiers/User/pages/formulaireComponents/AvatarUpdate.js","DjangoService/userService.js","metiers/User/pages/formulaireComponents/TabInput.js","metiers/User/pages/Results.js","metiers/User/pages/Formulaire.js","metiers/User/Route.js","Constante.js","DjangoService/ProduitService.js","metiers/Produit/pages/Searche.js","metiers/Produit/pages/formulaireComponents/AvatarUpdate.js","metiers/Produit/pages/formulaireComponents/StructureMarchandiseDrawer.js","metiers/Produit/pages/formulaireComponents/TabInput.js","metiers/Produit/pages/formulaireComponents/VarianteVenteTable.js","metiers/Produit/pages/formulaireComponents/VarianteVenteDrawer.js","metiers/Produit/pages/formulaireComponents/TitleCustomize.js","metiers/Produit/pages/formulaireComponents/FileUpload.js","metiers/Produit/pages/formulaireComponents/LogistiqueDrawer.js","metiers/Produit/pages/formulaireComponents/LogistiqueTable.js","metiers/Produit/pages/formulaireComponents/UnitéLogistiqueTable.js","metiers/Produit/pages/formulaireComponents/AssortimentVendable.js","metiers/Produit/pages/formulaireComponents/AssortimentCommandable.js","DjangoService/SiteService.js","metiers/Produit/pages/Results.js","DjangoService/FournisseurService.js","metiers/Produit/pages/Formulaire.js","metiers/Produit/Route.js","metiers/Site/pages/Searche.js","metiers/Site/pages/Results.js","metiers/Site/pages/formulaireComponents/TabInput.js","metiers/Site/pages/Formulaire.js","metiers/Site/pages/formulaireComponents/TitleCustomize.js","metiers/Site/Route.js","metiers/Fournisseur/pages/Searche.js","metiers/Fournisseur/pages/formulaireComponents/AvatarUpdate.js","metiers/Fournisseur/pages/formulaireComponents/StructureMarchandiseDrawer.js","metiers/Fournisseur/pages/formulaireComponents/TabInput.js","metiers/Fournisseur/pages/formulaireComponents/AdresseTable.js","metiers/Fournisseur/pages/formulaireComponents/AdresseDrawer.js","metiers/Fournisseur/pages/formulaireComponents/TitleCustomize.js","metiers/Fournisseur/pages/formulaireComponents/FileUpload.js","metiers/Fournisseur/pages/formulaireComponents/LogistiqueDrawer.js","metiers/Fournisseur/pages/formulaireComponents/LogistiqueTable.js","metiers/Fournisseur/pages/formulaireComponents/UnitéLogistiqueTable.js","metiers/Fournisseur/pages/formulaireComponents/AssortimentVendable.js","metiers/Fournisseur/pages/formulaireComponents/Calendrierfournisseur.js","metiers/Fournisseur/pages/formulaireComponents/ContactTable.js","metiers/Fournisseur/pages/formulaireComponents/ContactDrawer.js","metiers/Fournisseur/pages/Results.js","metiers/Fournisseur/pages/Formulaire.js","metiers/Fournisseur/Route.js","App.js","reportWebVitals.js","index.js"],"names":["Axios","interceptors","response","use","error","status","toast","toastId","position","autoClose","Promise","reject","get","post","put","patch","delete","domaine","process","authApp","userCreationPath","userAdvancedSearchPath","userHomeSearchPath","userUpdatePath","profileApiEndPoint","profileColumn","title","dataIndex","formulaire","type","max","spann","tabs","column","titre","Inputs","serviceProfile","result","getColumn","getDatas","a","axiosInstance","headers","Authorization","accept","then","res","console","log","data","setState","datas","getformulaire","gettabs","token","getAllProfiles","http","Sider","Layout","DMSSlider","this","props","collapsed","nouvelOnglet","menu","breakpoint","onBreakpoint","broken","trigger","collapsible","style","height","zIndex","left","gutter","justify","align","textAlign","span","minHeight","maxHeight","className","mode","defaultSelectedKeys","map","item","subMenu","Item","margin","display","justifyContent","icon","width","flexDirection","alignItems","fontSize","padding","fontWeight","onClick","content","key","services","service","composant","SubMenu","subItem","Component","fakeDataUrl","results","gender","name","first","last","email","nat","Theme","state","initLoading","loading","list","getData","callback","onLoadMore","concat","Array","window","dispatchEvent","Event","loadMore","marginTop","lineHeight","itemLayout","dataSource","renderItem","marginBottom","document","body","setProperty","backgroundColor","React","src","Setting","visible","onClose","Title","level","SettingTwoTone","twoToneColor","placement","closable","color","dashed","border","borderRadius","marginRight","labelInValue","defaultValue","value","Option","checkedChildren","unCheckedChildren","GetUserAuth","verifyToken","connexion","refresh_token","logout","host_storage","refresh","verify","RefrechToken","set","access","remove","descr","ContactsTwoTone","ContainerTwoTone","ScheduleTwoTone","ReconciliationTwoTone","alert","date","WarningTwoTone","bckColor","CheckCircleTwoTone","CloseCircleTwoTone","InfoCircleTwoTone","userDatas","profil","goto","Text","wrap","flex","user","MUTPHOTOS","objectFit","ellipsis","first_name","last_name","Paragraph","MUTPROFID","MPRLIBCOUR","localStorage","removeItem","bordered","Meta","avatar","href","description","alerte","see","Notification","overflowY","borderBottom","alignContent","message","Message","offset","preview","userPhoto","size","whiteSpace","overflow","text","MessageTwoTone","DMSHeader","settingRef","createRef","compteRef","drawarSetting","onSearch","ref","valeur","Drawervisible","hostStorage","link","Header","paddingRight","version","xmlns","viewBox","fill","d","prefix","SearchOutlined","placeholder","enterButton","SettingOutlined","current","showDrawer","count","MessageOutlined","BellTwoTone","BellOutlined","paddingLeft","username","UserOutlined","target","rel","confirm","Modal","TabsHeader","onChange","dateString","dateFinDesactiver","index","length","onOk","onCancel","history","goBack","goForward","push","location","validerformulaire","disableFValiditer","onReset","onSubmit","activerUpdate","disabelEditButton","removeElem","route","overlay","LeftOutlined","disabled","showConfirm","ExclamationCircleOutlined","HomeOutlined","goTo","search","RightOutlined","CheckOutlined","CloseOutlined","ReloadOutlined","duration","FileSearchOutlined","PrinterOutlined","FileAddOutlined","create","EditOutlined","DeleteOutlined","direction","showTime","suffix","AudioOutlined","Searche","paddingTop","offsetTop","top","shape","PlusOutlined","alt","Search","withRouter","i","US_EMAIL","US_NOMUSR","US_PRNUSR","US_TYPUSR","expandable","expandedRowRender","record","pagination","vueSysteme","check","vuesPersonnalises","TabTable","columns","sorter","b","age","filters","onFilter","address","indexOf","render","_","InfoOutlined","showHeader","rowSelection","scroll","undefined","hasData","tableLayout","bottom","xScroll","yScroll","y","x","tableColumns","fixed","vues","TabPane","Tabs","delay","ms","setTimeout","typeTemplate","validateMessages","required","default","enum","whitespace","format","parse","invalid","types","string","method","array","object","number","boolean","integer","float","regexp","url","hex","len","min","range","pattern","mismatch","WrappedComponent","InnerComponentWithRef","forwardRef","rest","ComponentWithRouter","withRef","withRouterAndRef","formRef","onGenderChange","setFieldsValue","note","onFinish","values","onFormulaireChange","success","info","submit","resetFields","changecome","onFill","handleInputChange","event","CleanInputChange","form","match","params","id","spinning","orientation","marginLeft","borderWidth","borderStyle","input","label","rules","tab","PF_PRFINT","PF_LIBPRF","PF_APPLI","PF_LANGUE","PF_NIVACC","Results","showTitle","datass","Content","DMSContent","enClose","activeKey","onEdit","targetKey","action","add","contenu","panes","some","el","routeRef","refHeader","lastIndex","newActiveKey","forEach","pane","newPanes","filter","newTabIndex","refs","hideAdd","e","Route","update","loadingFormulaire","datefin","overflowX","getContainer","closeDrawer","setDrawerState","DMSLayout","toggle","refTabs","logo","minLogo","isChecked","selectedKeys","eventKey","generateTree","treeNodes","checkedKeys","children","includes","TreeAppMenu","targetKeys","restProps","useImperativeHandle","gettargetKeys","transferDataSource","flatten","showSelectAll","onItemSelect","checkable","defaultExpandAll","autoExpandParent","treeData","onCheck","node","onSelect","insertProfile","profileObjet","deleteProfile","GetMenus","treeRef","keys","menuprofile","MPMMENUID","profile","Object","assign","menusprofile","notification","open","getToken","getMenusByApp","getDataById","isLoading","MPRLIBLONG","MPRPRFEXT","MPRNIVACC","apps","bind","Datas","menuSelected","menus","ID_ROWID","appss","all","index1","APPLIBLONG","Menus_per_applications","index2","AMNLIB","initialValues","hasFeedback","initialValue","getRefrechToken","Refrech","handleDelete","model","slice","split","centered","Error404","subTitle","extra","Error403","Error500","DMSRoute","useHistory","refFormulaire","refHistory","initialEntries","initialIndex","exact","path","from","to","AvatarUpdate","useState","uid","fileList","setFileList","useEffect","onPreview","file","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","image","Image","write","outerHTML","listType","newFileList","setImage","readOnly","insertUser","api","userObjet","photo","updateUser","userApiEndPoint","ctc_id","ctcObject","FormData","adresse","adressToPost","MADCNTID","ActiveDesactiveUser","TabInput","loadingOnsubmit","user_id","userData","contact","labelComposant","Icon","Profiles","addonBefore","GlobalOutlined","updateCtc","PhoneOutlined","MailOutlined","ContactsOutlined","Group","compact","allowClear","selectedRowKeys","selectedRows","selected","onSelectAll","changeRows","EditableContext","createContext","EditableRow","Form","useForm","component","Provider","EditableCell","editable","handleSave","editing","setEditing","inputRef","useRef","useContext","focus","toggleEdit","save","validateFields","childNode","onPressEnter","onBlur","EditableTable","handleAdd","newData","MADLIBLONG","MADADRES1","MADADRES2","MADBATIM","MADETAGE","MADCODEP","MADVILLE","MADPAYS","row","findIndex","splice","updateAdress","showSorterTooltip","onConfirm","datasource","components","cell","col","onCell","rowClassName","formContactRef","adressRef","rangeTimeValue","photos","append","entries","pair","MUTDDEB","MUTDFIN","getDataSource","setUser","getProfileApp","img","dateFin","activate","pk","moment","Password","LockOutlined","iconRender","EyeTwoTone","EyeInvisibleOutlined","dependencies","getFieldValue","validator","Error","RangePicker","Adresses","DescriptionItem","MUTETAT","cursor","toUpperCase","EnvironmentFilled","MinusOutlined","reload","fr","Pays","AF","ZA","AL","DZ","DE","AD","AO","AI","AQ","AG","AN","SA","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BA","BW","BR","BN","BG","BF","BI","KH","CM","CA","CV","EA","CL","CN","CY","CO","KM","CG","KP","KR","CR","CI","HR","CU","DK","DG","DJ","DM","EG","SV","AE","EC","ER","ES","EE","VA","FM","US","ET","FJ","FI","FR","GA","GM","GE","GS","GH","GI","GR","GD","GL","GP","GU","GT","GG","GN","GQ","GW","GY","GF","HT","HN","HU","BV","CX","CP","AC","IM","NF","AX","KY","IC","CC","CK","FO","HM","FK","MP","MH","UM","SB","TC","VG","VI","IN","ID","IQ","IR","IE","IS","IL","IT","JM","JP","JE","JO","KZ","KE","KG","KI","KW","LA","LS","LV","LB","LR","LY","LI","LT","LU","MK","MG","MY","MW","MV","ML","MT","MA","MQ","MU","MR","YT","MX","MD","MC","MN","ME","MS","MZ","MM","NA","NR","NP","NI","NE","NG","NU","NO","NC","NZ","OM","UG","UZ","PK","PW","PA","PG","PY","NL","PE","PH","PN","PL","PF","PR","PT","QA","HK","MO","QO","CF","CD","DO","CZ","RE","RO","GB","RU","RW","EH","BL","KN","SM","MF","PM","VC","SH","LC","WS","AS","ST","SN","RS","CS","SC","SL","SG","SK","SI","SO","SD","LK","SE","CH","SR","SJ","SZ","SY","TJ","TW","TZ","TD","TF","IO","PS","TH","TL","TG","TK","TO","TT","TA","TN","TM","TR","TV","UA","EU","UY","VU","VE","VN","WF","YE","ZM","ZW","getAllProduits","produitApiEndPoint","getAllSM","getUlByPrd","idPrd","getProduitByID","insertProduit","produit","photoPrd","VL","files","New","dataSM","LienSM","RLRDDEB","RLRCINSMM","RLRINSMM","RLRCINSMF","PRD","dataVL","RPLLCINPRD","ResVl","ASC","dataASC","RACCINVL","UL","dataUL","RPULCINVL","ResUl","VV","dataVV","VVToSend","RPVVCEXT","RPVVLIBL","RPVVLIBC","RPVVPUVC","RPVVPHOTO","ResVV","ASV","dataASV","RAVCINVV","RPVPRIX","RPVCINVV","PRCDDEB","PRCCODE","PRCDFIN","RPCINUV","File","RPTFILE","RPTNAMFIL","RPTTYPDOC","updateProduit","prd_id","prdToSend","RPRCEXT","RPRLIBL","RPRLIBC","RPRLANGUE","RPRDSC","RPRTYPE","RPRETAT","RPRCINSM","RPRUSTOCK","RPRIGARANTI","RPRIDAnger","RPRPHOTO","RPVVCINUL","RPVVETAT","makeTree","nodes","parentId","mere","reduce","tree","RRSMLIBL","getSM","filtre","TreeSM","okText","layout","dropdownStyle","showSearch","flexWrap","valuePropName","FilterOutlined","StructureMarchandiseDrawer","setNewSM","ClearOutlined","SMListes","prevProps","AllSM","setSiseForm","AppstoreAddOutlined","VarianteVenteDrawer","VLUL","imageUrl","setNewVV","addVV","handleChange","addEventListener","getBase64","loadingPhoto","ListAllUL","ListUL","Vl","indexVl","Ul","indexUl","RPLLCEXT","RPULTYPUL","uploadButton","LoadingOutlined","showUploadList","getUlType","cextVl","addonAfter","TitleCustomize","minWidth","plain","indes","PushpinOutlined","Divider","MoreOutlined","preventDefault","SyncOutlined","DownloadOutlined","enAdd","setUpdateVV","Uls","optionFilterProp","VarianteVenteTable","keyy","setDeleteVV","showModal","showModalUL","RPULCEXT","RPULPOID","RPULLANG","RPULLARG","RPULCOEF","RPULHAUT","RPULDSC","handleOk","modalText","confirmLoading","handleCancel","BarcodeOutlined","CodeCaise","setNewVL","Dragger","Upload","multiple","onDrop","dataTransfer","FileUpload","listData","pop","extension","setNewFiles","deleteFiles","ext","ListFiles","itemm","setDeleteFiles","CloudUploadOutlined","page","pageSize","actions","pathname","download","SelectOutlined","cancelText","getfileimage","getTypeDoc","LogistiqueDrawer","onTypeChange","typeUniteL","active","UL0","setListeAllUl","addVL","RPULETAT","titel","TextArea","rows","List","fields","fieldKey","restField","MinusCircleOutlined","block","UnitéLogistiqueTable","existDeja","ToUpdate","onDelete","ToDelete","deleteUL","VL_key","UpdateUL","NewUL","setNewUL","setUpdateUL","setDeleteUL","shouldUpdate","prevValues","curValues","messageVariables","another","VL_Id","setUpdateVL","LogistiqueTable","ULRef","setDeleteVL","CodeSandboxOutlined","Sites","site","RSSITE","vv","AssortimentVendable","AllSites","RAVSITE","AllVV","indexsite","indexvv","tmp","CEXTSITE","CEXTVV","RAVETAT","RAVDDEBUT","setNewASV","RAVDFIN","TarifVente","dateDebut","id_site","RTVMARGE","RTVTVA","DollarCircleOutlined","getAllSites","insertSite","siteApiEndPoint","CalSite","RSCINCAL","Site","updateSite","site_id","cal_id","AssortimentCommandable","RACSITE","AllFour","RACCINFR","AllTVA","RACCINTVA","AllVL","indexfournisseur","indexvl","indextva","CEXTFOUR","RFRCEXT","CEXTVL","CEXTVA","RTVACODE","RTVATAUX","RACMAXCMD","RACMINCMD","RACPRIXB","RACDDEBUT","destroyOnClose","getAllfournissuers","insertFournisseur","fournisseurApiEndPoint","fournisseur","photoFour","Adresse","Contact","FOUR","dataAdresse","RFACINFR","dataContact","RFCCINFR","updateFournisseur","four_id","fourToSend","RFRLIBL","RFRLIBC","RFRETAT","RFRTYPE","RFRDEVISE","RFRPAYS","RFRLOGO","dataToSend","getSites","getFournisseurs","getTva","getUL","enCheckVenduCahnge","tabPointDeVente","checked","enCheckCommandeCahnge","tabCommendable","drawerVisible","TVAApiEndPoint","ASSVEN","vendable","borderTop","ULs","NewVL","VLIndex","deleteNewVL","updateVL","updateNewVL","NewVV","deleteNewVV","updateVV","updateNewVV","Files","deleteNewFile","structure","getUniteStockPrd","SnippetsOutlined","getTypePrd","publier","SplitCellsOutlined","MergeCellsOutlined","etat","RSLIBL","RSLIBC","RSZGEO","RSAdress","RCSHEUREO","RCSHEUREF","RCSINFSAM","RCSINFDIM","RCSINFLUN","RCSINFMAR","RCSINFMER","RCSINFMJEU","RCSINFJEU","RCSINFMJVEN","RCSINFVEN","FilterTwoTone","defaultOpenValue","jourF","Calendrier","labelSelectComposant","time","EnvironmentTwoTone","jour","ClockCircleTwoTone","cal","setNewAdresse","activeAdd","setUpdateAdresse","AdresseTable","setDeleteAdresse","Calendrierfournisseur","plugins","dayGridPlugin","initialView","ContactDrawer","setNewContact","setUpdateContact","ContactTable","setDeleteContact","deleteNewAdresse","updateAdresse","updateNewAdresse","deleteVV","EnvironmentOutlined","getDevise","getTypefour","footer","require","createGuest","App","setMenus","setloading","getObjectMenu","constent","DMSSiteRoute","ShopOutlined","DMSProfileRoute","DMSProduitRoute","ShoppingCartOutlined","DMSFournisseurRoute","TeamOutlined","DMSUserRoute","onFocus","App_id","setItem","getItem","userAuth","Menus","AMNMENUID","AMNURL","MenuGetByKey","find","obj","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.617b6f68.chunk.js","sourcesContent":["import Axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nAxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n  if (!expectedError) {\r\n    // Log the error\r\n    toast.error('An Unexpected error occurred (Network Error)', {\r\n      toastId: 'unexpectedErrors',\r\n      // containerId: 'unexpectedErrors',\r\n      position: 'bottom-center',\r\n      autoClose: 5000,\r\n    });\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n  get: Axios.get,\r\n  post: Axios.post,\r\n  put: Axios.put,\r\n  patch: Axios.patch,\r\n  delete: Axios.delete,\r\n};\r\n","// django services\r\nexport const domaine =\r\n  process.env.REACT_APP_DOMAINE + \":\" + process.env.REACT_APP_PORT + \"/\";\r\n// \"http://localhost:8000/\";\r\nexport const authApp = process.env.REACT_APP_DOMAINE + \":3000/\";\r\n//\r\n// process.env.REACT_APP_APIENDPOINT;\r\n// \"http://10.0.0.253:8001/\";\r\n//User api end point\r\nexport const userApiEndPoint = \"DMERP/v1/registration/\";\r\nexport const userCreationPath = \"userCreationPath\";\r\nexport const userAdvancedSearchPath = \"userAdvancedSearchPath\";\r\nexport const userHomeSearchPath = \"userHomeSearchPath\";\r\nexport const userUpdatePath = \"userUpdatePath/\";\r\n// export conts\r\n//profile api end point\r\nexport const profileApiEndPoint = \"/DMERP/v1/profiles/\";\r\nexport const profileCreationPath = \"CreationPath\";\r\nexport const profileAdvancedSearchPath = \"AdvancedSearchPath\";\r\nexport const profileHomeSearchPath = \"HomeSearchPath\";\r\nexport const profileUpdatePath = \"UpdatePath/\";\r\n\r\n//authantifcation\r\nexport const loginApiEndPoint = \"DMERP/v1/auth/login/\";\r\nexport const logoutApiEndPoint = \"DMERP/v1/auth/logout/\";\r\n//user authentifier\r\nexport const userAuthApiEndPoint = \"DMERP/v1/auth/user/\";\r\n","import axiosInstance from \"../../DjangoService/AuthService\";\r\nimport { getAllProfiles } from \"../../services/profileServices\";\r\nconst profileColumn = [\r\n  {\r\n    title: \"Libellé\",\r\n    dataIndex: \"PF_LIBPRF\",\r\n  },\r\n  {\r\n    title: \"Application\",\r\n    dataIndex: \"PF_APPLI\",\r\n  },\r\n  {\r\n    title: \"Langue\",\r\n    dataIndex: \"PF_LANGUE\",\r\n  },\r\n  {\r\n    title: \"Niveau d'acces\",\r\n    dataIndex: \"PF_NIVACC\",\r\n  },\r\n];\r\nconst formulaire = [\r\n  {\r\n    title: \"Libellé\",\r\n    dataIndex: \"PF_LIBPRF\",\r\n    type: \"string\",\r\n    max: 45,\r\n    spann: 24,\r\n  },\r\n  {\r\n    title: \"Application\",\r\n    dataIndex: \"PF_APPLI\",\r\n    type: \"string\",\r\n    max: 45,\r\n    spann: 8,\r\n  },\r\n  {\r\n    title: \"Langue\",\r\n    dataIndex: \"PF_LANGUE\",\r\n    type: \"string\",\r\n    max: 45,\r\n    spann: 8,\r\n  },\r\n  {\r\n    title: \"Niveau d'acces\",\r\n    dataIndex: \"PF_NIVACC\",\r\n    type: \"number\",\r\n    max: 4,\r\n    spann: 8,\r\n  },\r\n];\r\nconst tabs = [\r\n  {\r\n    type: \"table\",\r\n    column: [\r\n      {\r\n        title: \"name\",\r\n        dataIndex: \"PF_LIBPRF\",\r\n      },\r\n      {\r\n        title: \"email\",\r\n        dataIndex: \"PF_APPLI\",\r\n      },\r\n      {\r\n        title: \"type\",\r\n        dataIndex: \"PF_LANGUE\",\r\n      },\r\n      {\r\n        title: \"description\",\r\n        dataIndex: \"PF_NIVACC\",\r\n      },\r\n    ],\r\n    titre: \"Utilisateur\",\r\n  },\r\n  {\r\n    type: \"formulaire\",\r\n    Inputs: [\r\n      {\r\n        title: \"Libellé\",\r\n        dataIndex: \"PF_LIBPRF\",\r\n        type: \"string\",\r\n        max: 45,\r\n      },\r\n      {\r\n        title: \"Application\",\r\n        dataIndex: \"PF_APPLI\",\r\n        type: \"string\",\r\n        max: 45,\r\n      },\r\n      {\r\n        title: \"Langue\",\r\n        dataIndex: \"PF_LANGUE\",\r\n        type: \"string\",\r\n        max: 45,\r\n      },\r\n      {\r\n        title: \"Niveau d'acces\",\r\n        dataIndex: \"PF_NIVACC\",\r\n        type: \"number\",\r\n        max: 4,\r\n      },\r\n    ],\r\n    titre: \"contact\",\r\n  },\r\n];\r\n\r\nexport const serviceProfile = {\r\n  result: {\r\n    getColumn: () => {\r\n      return profileColumn;\r\n    },\r\n    getDatas: async () => {\r\n      try {\r\n        await axiosInstance\r\n          .get(`http://10.0.0.253:8000/DMERP/v1/profiles/`, {\r\n            headers: {\r\n              Authorization: `Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjIyNzg0OTI2LCJqdGkiOiIxYzUxMmM5OWM4MzQ0ZTk2OWUzZDdjNWYzM2Q1NmQ0NiIsInVzZXJfaWQiOjIzLCJNVVRQUk9GSUQiOnsiSURfUk9XSUQiOjEsIkRDUkUiOiIyMDIxLTA2LTAyVDE2OjU2OjA0WiIsIkRNQUoiOiIyMDIxLTA2LTAyVDE2OjU2OjA4WiIsIk1QUlBSRkVYVCI6IkFVVEgwMDEiLCJNUFJMSUJMT05HIjoiQVVUSEFETUlOIiwiTVBSTElCQ09VUiI6ImFkbSIsIk1QUk5JVkFDQyI6MSwiVVRJTCI6bnVsbH19.1WRR0F3GSTLPhyV0LK82ev0UT7h5NAbwNbOeAjE3c0g`, //  localStorage.getItem(\"access_token\")\r\n              //  ? `Bearer ${localStorage.getItem(\"access_token\")}`\r\n              //  : null,\r\n\r\n              // ? \"JWT \" + localStorage.getItem(\"access_token\")\r\n              // : null,\r\n              \"Content-Type\": \"application/json\",\r\n              accept: \"application/json\",\r\n            },\r\n          })\r\n          .then((res) => {\r\n            console.log(\"app    =>   : \", res.data);\r\n            this.setState({ datas: res.data });\r\n            //console.log(res);\r\n            //console.log(res.data);\r\n          });\r\n      } catch (error) {\r\n        console.log(\"error :\", error);\r\n      }\r\n    },\r\n  },\r\n  formulaire: {\r\n    getformulaire: () => {\r\n      return formulaire;\r\n    },\r\n    gettabs: () => {\r\n      return tabs;\r\n    },\r\n    getDatas: async () => {\r\n      try {\r\n        const { data } = await getAllProfiles();\r\n        return data;\r\n      } catch (error) {\r\n        console.log(\"error :\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n","import http from './httpService';\r\nimport { profileApiEndPoint } from '../config';\r\n\r\nexport const getAllProfiles = (token) => {\r\n  console.log('bbb getAllProfiles');\r\n  return http.get(profileApiEndPoint, {\r\n    headers: {\r\n      Authorization: `Bearer  ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const insertProfile = (profileObjet) => {\r\n  return http.post(profileApiEndPoint, profileObjet, {\r\n    headers: {\r\n      Authorization: `Bearer`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const getProfileByID = (id) => {\r\n  return http.get(`${profileApiEndPoint}/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const updateProfile = (id, profileObjet) => {\r\n  return http.patch(`${profileApiEndPoint}/${id}`, profileObjet, {\r\n    headers: {\r\n      Authorization: `Bearer`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteProfile = (id) => {\r\n  return http.delete(`${profileApiEndPoint}/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer`,\r\n    },\r\n  });\r\n};\r\n","import { Layout, Col, Menu, Row } from \"antd\";\r\nimport React, { Component } from \"react\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport default class DMSSlider extends Component {\r\n  render() {\r\n    const { collapsed, nouvelOnglet, menu } = this.props;\r\n    return (\r\n      <Sider\r\n        breakpoint=\"lg\"\r\n        onBreakpoint={(broken) => {\r\n          console.log(broken);\r\n        }}\r\n        trigger={null}\r\n        collapsible\r\n        collapsed={collapsed}\r\n        style={{\r\n          // overflow: 'auto',\r\n          height: \"100vh\",\r\n          position: \"fixed\",\r\n          zIndex: 2,\r\n          left: 0,\r\n        }}\r\n      >\r\n        <Row\r\n          gutter={[25, 0]}\r\n          justify=\"start\"\r\n          align=\"middle\"\r\n          style={{ textAlign: \"center\" }}\r\n        >\r\n          {\" \"}\r\n          {/* <Col span={this.state.collapsed ? 24 : 4}>\r\n              <Button\r\n                type='link'\r\n                icon={\r\n                  this.state.collapsed ? (\r\n                    <MenuUnfoldOutlined style={{ color: '#fff' }} />\r\n                  ) : (\r\n                    <MenuFoldOutlined style={{ color: '#fff' }} />\r\n                  )\r\n                }\r\n                size={'large'}\r\n                className='trigger'\r\n                onClick={this.toggle}\r\n              />\r\n            </Col> */}\r\n          <Col span={24} style={{ minHeight: \"48px\", maxHeight: \"48px\" }}>\r\n            {/* <Image\r\n              preview={false}\r\n              style={{ minHeight: '64px', maxHeight: '64px' }}\r\n              src={collapsed ? minLogo : logo}\r\n            /> */}\r\n          </Col>\r\n          <Col span={24}>\r\n            <Menu\r\n              className=\"template-menu-principale\"\r\n              mode=\"inline\"\r\n              defaultSelectedKeys={[\"1\"]}\r\n            >\r\n              {menu[0] != null &&\r\n                menu.map((item) =>\r\n                  item.subMenu == null ? (\r\n                    <Menu.Item\r\n                      style={{\r\n                        margin: \"0px\",\r\n                        height: \"50px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      key={item.key}\r\n                      icon={\r\n                        <div style={{ height: \"14px\" }}>\r\n                          <div\r\n                            style={{\r\n                              width: \"100%\",\r\n                              height: \"100%\",\r\n                              display: \"flex\",\r\n                              flexDirection: \"column\",\r\n                              alignItems: \"center\",\r\n                            }}\r\n                          >\r\n                            <item.icon />\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              width: \"100%\",\r\n                              height: \"100%\",\r\n                              display: \"flex\",\r\n                              flexDirection: \"column\",\r\n                              alignItems: \"center\",\r\n                              fontSize: \"11px\",\r\n                              padding: \"4px\",\r\n                              fontWeight: \"400px\",\r\n                            }}\r\n                          >\r\n                            {item.title}\r\n                          </div>\r\n                        </div>\r\n                      }\r\n                      // {item.icon}\r\n                      onClick={() => {\r\n                        nouvelOnglet(\r\n                          item.title,\r\n                          item.icon,\r\n                          item.content,\r\n                          item.key,\r\n\r\n                          item.services,\r\n                          item.service,\r\n                          item.composant\r\n                        );\r\n                      }}\r\n                    ></Menu.Item>\r\n                  ) : (\r\n                    <Menu.SubMenu\r\n                      className={\"template-submenu\"}\r\n                      key={\"sub\" + item.key}\r\n                      icon={\r\n                        <div style={{ height: \"14px\" }}>\r\n                          <div\r\n                            style={{\r\n                              width: \"100%\",\r\n                              height: \"100%\",\r\n                              display: \"flex\",\r\n                              flexDirection: \"column\",\r\n                              alignItems: \"center\",\r\n                            }}\r\n                          >\r\n                            <item.icon />\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              width: \"100%\",\r\n                              height: \"100%\",\r\n                              display: \"flex\",\r\n                              flexDirection: \"column\",\r\n                              alignItems: \"center\",\r\n                              fontSize: \"11px\",\r\n                              padding: \"4px\",\r\n                              fontWeight: \"400px\",\r\n                            }}\r\n                          >\r\n                            {item.title}\r\n                          </div>\r\n                        </div>\r\n                      }\r\n                      // title={item.title}\r\n                      style={{\r\n                        height: \"50px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                      {item.subMenu[0] != null &&\r\n                        item.subMenu.map((subItem) => (\r\n                          <Menu.Item\r\n                            style={{ margin: \"0px\" }}\r\n                            key={subItem.key}\r\n                            icon={<subItem.icon />}\r\n                            onClick={() => {\r\n                              nouvelOnglet(\r\n                                subItem.title,\r\n                                subItem.icon,\r\n                                subItem.content,\r\n                                subItem.key,\r\n                                subItem.services,\r\n                                subItem.service,\r\n                                subItem.composant\r\n                              );\r\n                            }}\r\n                          >\r\n                            {subItem.title}\r\n                          </Menu.Item>\r\n                        ))}\r\n                    </Menu.SubMenu>\r\n                  )\r\n                )}\r\n            </Menu>\r\n          </Col>\r\n        </Row>\r\n      </Sider>\r\n    );\r\n  }\r\n}\r\n","import { List, Avatar, Button, Skeleton } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst count = 3;\r\nconst fakeDataUrl = {\r\n  results: [\r\n    {\r\n      gender: \"female\",\r\n      name: { title: \"Miss\", first: \"Milla\", last: \"Koskinen\" },\r\n      email: \"milla.koskinen@example.com\",\r\n      nat: \"FI\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default class Theme extends React.Component {\r\n  state = {\r\n    initLoading: true,\r\n    loading: false,\r\n    data: [],\r\n    list: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getData((res) => {\r\n      this.setState({\r\n        initLoading: false,\r\n        data: res.results,\r\n        list: res.results,\r\n      });\r\n    });\r\n  }\r\n\r\n  getData = (callback) => {\r\n    callback(fakeDataUrl);\r\n  };\r\n\r\n  onLoadMore = () => {\r\n    this.setState({\r\n      loading: true,\r\n      list: this.state.data.concat(\r\n        [...new Array(count)].map(() => ({ loading: true, name: {} }))\r\n      ),\r\n    });\r\n    this.getData((res) => {\r\n      const data = this.state.data.concat(res.results);\r\n      this.setState(\r\n        {\r\n          data,\r\n          list: data,\r\n          loading: false,\r\n        },\r\n        () => {\r\n          // Resetting window's offsetTop so as to display react-virtualized demo underfloor.\r\n          // In real scene, you can using public method of react-virtualized:\r\n          // https://stackoverflow.com/questions/46700726/how-to-use-public-method-updateposition-of-react-virtualized\r\n          window.dispatchEvent(new Event(\"resize\"));\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { initLoading, loading, list } = this.state;\r\n    const loadMore =\r\n      !initLoading && !loading ? (\r\n        <div\r\n          style={{\r\n            textAlign: \"center\",\r\n            marginTop: 12,\r\n            height: 32,\r\n            lineHeight: \"32px\",\r\n          }}\r\n        >\r\n          <Button onClick={this.onLoadMore}>loading more</Button>\r\n        </div>\r\n      ) : null;\r\n\r\n    return (\r\n      <List\r\n        className=\"demo-loadmore-list\"\r\n        loading={initLoading}\r\n        itemLayout=\"horizontal\"\r\n        loadMore={loadMore}\r\n        dataSource={list}\r\n        renderItem={(item) => (\r\n          <>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <button\r\n                onClick={() => {\r\n                  document.body.style.setProperty(\"--header\", \"#4f448d\");\r\n                  document.body.style.setProperty(\"--link-color\", \"#7b6ccf\");\r\n                  document.body.style.setProperty(\r\n                    \"--link-color-hover\",\r\n                    \"#3a2e7c\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--menu-selected\",\r\n                    \"#4f448dd9\"\r\n                  );\r\n                  document.body.style.setProperty(\"--btn-primary\", \"#4f448dd9\");\r\n                  document.body.style.setProperty(\r\n                    \"--border-btn-primary\",\r\n                    \"#4f448dd9\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--btn-primary-focus\",\r\n                    \"#6256a9bf\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--border-btn-primary-focus\",\r\n                    \"#6256a9bf\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tabs-notselected-bck-color-hover\",\r\n                    \"#4f448d8c\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--table-icon-primary\",\r\n                    \"#8176c0\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tab-active-bck-color-secandary\",\r\n                    \"#8f95c5\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tabs-notselected-bck-color-hover-secandary\",\r\n                    \"#8f95c547\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tabs-notselected-text-color-hover-secandary\",\r\n                    \"#776684\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tab-active-bck-color-hover-secandary\",\r\n                    \"#8f95c5e6\"\r\n                  );\r\n                  // document.body.style.setProperty(\"--link-color\", \"#eee\");\r\n                }}\r\n                style={{\r\n                  margin: \"0px 5px\",\r\n                  width: \"20%\",\r\n                  height: \"30px\",\r\n                  backgroundColor: \"#4f448d\",\r\n                }}\r\n              ></button>\r\n              <button\r\n                onClick={() => {\r\n                  document.body.style.setProperty(\"--header\", \"#44718d\");\r\n                  document.body.style.setProperty(\"--link-color\", \"#77b8e0\");\r\n                  document.body.style.setProperty(\r\n                    \"--link-color-hover\",\r\n                    \"#3b7192\"\r\n                  );\r\n                  document.body.style.setProperty(\"--menu-selected\", \"#56819d\");\r\n                  document.body.style.setProperty(\"--btn-primary\", \"#44718d\");\r\n                  document.body.style.setProperty(\r\n                    \"--border-btn-primary\",\r\n                    \"#44718dbf\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--btn-primary-focus\",\r\n                    \"#4c86aae0\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--border-btn-primary-focus\",\r\n                    \"#4c86aae0\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tabs-notselected-bck-color-hover\",\r\n                    \"#385b71c9\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--table-icon-primary\",\r\n                    \"#3683b3\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tab-active-bck-color-secandary\",\r\n                    \"#4688b0c7\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tabs-notselected-bck-color-hover-secandary\",\r\n                    \"#469fd638\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tabs-notselected-text-color-hover-secandary\",\r\n                    \"#1c3544eb\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tab-active-bck-color-hover-secandary\",\r\n                    \"#5699c3c4\"\r\n                  );\r\n                }}\r\n                style={{\r\n                  width: \"20%\",\r\n                  margin: \"0px 5px\",\r\n                  height: \"30px\",\r\n                  backgroundColor: \"#44718d\",\r\n                }}\r\n              ></button>{\" \"}\r\n              <button\r\n                onClick={() => {\r\n                  document.body.style.setProperty(\"--header\", \"#40a875\");\r\n                  document.body.style.setProperty(\"--link-color\", \"#61e4a4\");\r\n                  document.body.style.setProperty(\r\n                    \"--link-color-hover\",\r\n                    \"#44c687\"\r\n                  );\r\n                  document.body.style.setProperty(\"--menu-selected\", \"#50eea1\");\r\n                  document.body.style.setProperty(\"--btn-primary\", \"#51e39b\");\r\n                  document.body.style.setProperty(\r\n                    \"--border-btn-primary\",\r\n                    \"#41c785\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--btn-primary-focus\",\r\n                    \"#35c57e\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--border-btn-primary-focus\",\r\n                    \"#51e39b\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tabs-notselected-bck-color-hover\",\r\n                    \"#50d6949c\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--table-icon-primary\",\r\n                    \"#44db91\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tab-active-bck-color-secandary\",\r\n                    \"#57e9a1de\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tabs-notselected-bck-color-hover-secandary\",\r\n                    \"#6decad57\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tabs-notselected-text-color-hover-secandary\",\r\n                    \"#246545\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tab-active-bck-color-hover-secandary\",\r\n                    \"#6decadd6\"\r\n                  ); // document.body.style.setProperty(\"--link-color\", \"#eee\");\r\n                }}\r\n                style={{\r\n                  width: \"20%\",\r\n                  margin: \"0px 5px\",\r\n                  height: \"30px\",\r\n                  backgroundColor: \"#40a875\",\r\n                }}\r\n              ></button>\r\n              <button\r\n                onClick={() => {\r\n                  document.body.style.setProperty(\"--header\", \"#a84077\");\r\n                  document.body.style.setProperty(\"--link-color\", \"#e977b3\");\r\n                  document.body.style.setProperty(\r\n                    \"--link-color-hover\",\r\n                    \"#a84077\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--menu-selected\",\r\n                    \"#ff5bb2bf\"\r\n                  );\r\n                  document.body.style.setProperty(\"--btn-primary\", \"#e63e97e0\");\r\n                  document.body.style.setProperty(\r\n                    \"--border-btn-primary\",\r\n                    \"#f3349a\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--btn-primary-focus\",\r\n                    \"#ea5ba8\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--border-btn-primary-focus\",\r\n                    \"#e955a4\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tabs-notselected-bck-color-hover\",\r\n                    \"#e55ea575\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--table-icon-primary\",\r\n                    \"#ea6daf\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tab-active-bck-color-secandary\",\r\n                    \"#ff9fd2\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tabs-notselected-bck-color-hover-secandary\",\r\n                    \"#ff9fd25e\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tabs-notselected-text-color-hover-secandary\",\r\n                    \"#5a2340\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tab-active-bck-color-hover-secandary\",\r\n                    \"#e578b2fa\"\r\n                  );\r\n                  // document.body.style.setProperty(\"--link-color\", \"#eee\");\r\n                }}\r\n                style={{\r\n                  width: \"20%\",\r\n                  margin: \"0px 5px\",\r\n                  height: \"30px\",\r\n                  backgroundColor: \"#a84077\",\r\n                }}\r\n              ></button>\r\n              <button\r\n                onClick={() => {\r\n                  document.body.style.setProperty(\"--header\", \"#bcb540\");\r\n                  document.body.style.setProperty(\"--link-color\", \"#f1eb85\");\r\n                  document.body.style.setProperty(\r\n                    \"--link-color-hover\",\r\n                    \"#bcb540\"\r\n                  );\r\n                  document.body.style.setProperty(\"--menu-selected\", \"#cfc74a\");\r\n                  document.body.style.setProperty(\"--btn-primary\", \"#f3d35d\");\r\n                  document.body.style.setProperty(\r\n                    \"--border-btn-primary\",\r\n                    \"#f4d254\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--btn-primary-focus\",\r\n                    \"#f3d35dd9\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--border-btn-primary-focus\",\r\n                    \"#f3d35d\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tabs-notselected-bck-color-hover\",\r\n                    \"#e5e3be\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--table-icon-primary\",\r\n                    \"#f8ee45\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tab-active-bck-color-secandary\",\r\n                    \"#ece358\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tabs-notselected-bck-color-hover-secandary\",\r\n                    \"#fcf9cd\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tabs-notselected-text-color-hover-secandary\",\r\n                    \"#65340b\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tab-active-bck-color-hover-secandary\",\r\n                    \"#ece358db\"\r\n                  );\r\n                  // document.body.style.setProperty(\"--link-color\", \"#eee\");\r\n                }}\r\n                style={{\r\n                  width: \"20%\",\r\n                  margin: \"0px 5px\",\r\n                  height: \"30px\",\r\n                  backgroundColor: \"#bcb540\",\r\n                }}\r\n              ></button>\r\n            </div>{\" \"}\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <button\r\n                onClick={() => {\r\n                  document.body.style.setProperty(\"--header\", \"#cf4444\");\r\n                  document.body.style.setProperty(\"--link-color\", \"#ff6161\");\r\n                  document.body.style.setProperty(\r\n                    \"--link-color-hover\",\r\n                    \"#ce2929\"\r\n                  );\r\n                  document.body.style.setProperty(\"--menu-selected\", \"#f43e3e\");\r\n                  document.body.style.setProperty(\"--btn-primary\", \"#ed2f2ffa\");\r\n                  document.body.style.setProperty(\r\n                    \"--border-btn-primary\",\r\n                    \"#f24646\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--btn-primary-focus\",\r\n                    \"#ed3333c9\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--border-btn-primary-focus\",\r\n                    \"#ed3333\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tabs-notselected-bck-color-hover\",\r\n                    \"#f1414161\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--table-icon-primary\",\r\n                    \"#ff2e2e\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tab-active-bck-color-secandary\",\r\n                    \"#fc4646c2\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tabs-notselected-bck-color-hover-secandary\",\r\n                    \"#fd727238\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tabs-notselected-text-color-hover-secandary\",\r\n                    \"#610707\"\r\n                  );\r\n                  document.body.style.setProperty(\r\n                    \"--tab-active-bck-color-hover-secandary\",\r\n                    \"#fd7272d1\"\r\n                  ); // document.body.style.setProperty(\"--link-color\", \"#eee\");\r\n                }}\r\n                style={{\r\n                  margin: \"0px 5px\",\r\n                  width: \"20%\",\r\n                  height: \"30px\",\r\n                  backgroundColor: \"#cf4444\",\r\n                }}\r\n              ></button>\r\n              <button\r\n                onClick={() => {\r\n                  document.body.style.setProperty(\"--header\", \"#424ad3\");\r\n                  // document.body.style.setProperty(\"--link-color\", \"#eee\");\r\n                }}\r\n                style={{\r\n                  width: \"20%\",\r\n                  margin: \"0px 5px\",\r\n                  height: \"30px\",\r\n                  backgroundColor: \"#424ad3\",\r\n                }}\r\n              ></button>{\" \"}\r\n              <button\r\n                onClick={() => {\r\n                  document.body.style.setProperty(\"--header\", \"#d3d242\");\r\n                  // document.body.style.setProperty(\"--link-color\", \"#eee\");\r\n                }}\r\n                style={{\r\n                  width: \"20%\",\r\n                  margin: \"0px 5px\",\r\n                  height: \"30px\",\r\n                  backgroundColor: \"#d3d242\",\r\n                }}\r\n              ></button>\r\n              <button\r\n                onClick={() => {\r\n                  document.body.style.setProperty(\"--header\", \"#42d0d3\");\r\n                  // document.body.style.setProperty(\"--link-color\", \"#eee\");\r\n                }}\r\n                style={{\r\n                  width: \"20%\",\r\n                  margin: \"0px 5px\",\r\n                  height: \"30px\",\r\n                  backgroundColor: \"#42d0d3\",\r\n                }}\r\n              ></button>\r\n              <button\r\n                onClick={() => {\r\n                  document.body.style.setProperty(\"--header\", \"#5cd342\");\r\n                  // document.body.style.setProperty(\"--link-color\", \"#eee\");\r\n                }}\r\n                style={{\r\n                  width: \"20%\",\r\n                  margin: \"0px 5px\",\r\n                  height: \"30px\",\r\n                  backgroundColor: \"#5cd342\",\r\n                }}\r\n              ></button>\r\n            </div>\r\n          </>\r\n          //   <List.Item\r\n          //     actions={[\r\n          //       <a key=\"list-loadmore-edit\">edit</a>,\r\n          //       <a key=\"list-loadmore-more\">more</a>,\r\n          //     ]}\r\n          //   >\r\n          //     <Skeleton avatar title={false} loading={item.loading} active>\r\n          //       <List.Item.Meta\r\n          //         avatar={\r\n          //           <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n          //         }\r\n          //         title={<a href=\"https://ant.design\">{item.name.last}</a>}\r\n          //         description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n          //       />\r\n          //       <div>content</div>\r\n          //     </Skeleton>\r\n          //   </List.Item>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import { List, Avatar, Button, Skeleton } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst count = 3;\r\nconst fakeDataUrl = {\r\n  results: [\r\n    {\r\n      gender: \"female\",\r\n      name: { title: \"Miss\", first: \"Milla\", last: \"Koskinen\" },\r\n      email: \"milla.koskinen@example.com\",\r\n      nat: \"FI\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default class Theme extends React.Component {\r\n  state = {\r\n    initLoading: true,\r\n    loading: false,\r\n    data: [],\r\n    list: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getData((res) => {\r\n      this.setState({\r\n        initLoading: false,\r\n        data: res.results,\r\n        list: res.results,\r\n      });\r\n    });\r\n  }\r\n\r\n  getData = (callback) => {\r\n    callback(fakeDataUrl);\r\n  };\r\n\r\n  onLoadMore = () => {\r\n    this.setState({\r\n      loading: true,\r\n      list: this.state.data.concat(\r\n        [...new Array(count)].map(() => ({ loading: true, name: {} }))\r\n      ),\r\n    });\r\n    this.getData((res) => {\r\n      const data = this.state.data.concat(res.results);\r\n      this.setState(\r\n        {\r\n          data,\r\n          list: data,\r\n          loading: false,\r\n        },\r\n        () => {\r\n          // Resetting window's offsetTop so as to display react-virtualized demo underfloor.\r\n          // In real scene, you can using public method of react-virtualized:\r\n          // https://stackoverflow.com/questions/46700726/how-to-use-public-method-updateposition-of-react-virtualized\r\n          window.dispatchEvent(new Event(\"resize\"));\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { initLoading, loading, list } = this.state;\r\n    const loadMore =\r\n      !initLoading && !loading ? (\r\n        <div\r\n          style={{\r\n            textAlign: \"center\",\r\n            marginTop: 12,\r\n            height: 32,\r\n            lineHeight: \"32px\",\r\n          }}\r\n        >\r\n          <Button onClick={this.onLoadMore}>loading more</Button>\r\n        </div>\r\n      ) : null;\r\n\r\n    return (\r\n      <List\r\n        className=\"demo-loadmore-list\"\r\n        loading={initLoading}\r\n        itemLayout=\"horizontal\"\r\n        loadMore={loadMore}\r\n        dataSource={list}\r\n        renderItem={(item) => (\r\n          <>\r\n            {\" \"}\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <div\r\n                style={{\r\n                  width: \"30%\",\r\n                  height: \"50px\",\r\n                  backgroundColor: \"#777\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={process.env.PUBLIC_URL + \"/defaultBck.png\"}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </div>{\" \"}\r\n              <div\r\n                style={{\r\n                  width: \"30%\",\r\n                  height: \"50px\",\r\n                  backgroundColor: \"#777\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                <img\r\n                  src={process.env.PUBLIC_URL + \"/bck (5).png\"}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  width: \"30%\",\r\n                  height: \"50px\",\r\n                  backgroundColor: \"#777\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                <img\r\n                  src={process.env.PUBLIC_URL + \"/bck1.png\"}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </div>{\" \"}\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <div\r\n                style={{\r\n                  width: \"30%\",\r\n                  height: \"50px\",\r\n                  backgroundColor: \"#777\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={process.env.PUBLIC_URL + \"/bck (3).png\"}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  width: \"30%\",\r\n                  height: \"50px\",\r\n                  backgroundColor: \"#777\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                <img\r\n                  src={process.env.PUBLIC_URL + \"/bck (4).png\"}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  width: \"30%\",\r\n                  height: \"50px\",\r\n                  backgroundColor: \"#777\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                <img\r\n                  src={process.env.PUBLIC_URL + \"/bkg.jpg\"}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </div>{\" \"}\r\n            </div>\r\n          </>\r\n          //   <List.Item\r\n          //     actions={[\r\n          //       <a key=\"list-loadmore-edit\">edit</a>,\r\n          //       <a key=\"list-loadmore-more\">more</a>,\r\n          //     ]}\r\n          //   >\r\n          //     <Skeleton avatar title={false} loading={item.loading} active>\r\n          //       <List.Item.Meta\r\n          //         avatar={\r\n          //           <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n          //         }\r\n          //         title={<a href=\"https://ant.design\">{item.name.last}</a>}\r\n          //         description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n          //       />\r\n          //       <div>content</div>\r\n          //     </Skeleton>\r\n          //   </List.Item>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import { Drawer } from \"antd\";\r\nimport { Divider, Select, Switch, Typography } from \"dmsui\";\r\nimport React from \"react\";\r\nimport \"./mask.css\";\r\nimport { SettingTwoTone } from \"@ant-design/icons\";\r\nimport Theme from \"./Theme\";\r\nimport Backgraund from \"./Backgraund\";\r\nexport default class Setting extends React.Component {\r\n  state = { visible: false };\r\n\r\n  showDrawer() {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n    this.props.visible(false);\r\n  }\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.visible(true);\r\n  };\r\n\r\n  render() {\r\n    const { visible } = this.state;\r\n    return (\r\n      <>\r\n        <Drawer\r\n          title={\r\n            <div>\r\n              <Typography.Title\r\n                level={4}\r\n                style={{\r\n                  margin: \"0\",\r\n                  fontSize: \"18px\",\r\n                  fontWeight: \"500\",\r\n                  lineHeight: \"0.9\",\r\n                }}\r\n              >\r\n                <SettingTwoTone twoToneColor={\"#0a304e\"} /> Setting\r\n              </Typography.Title>\r\n            </div>\r\n          }\r\n          className=\"mask\"\r\n          placement={\"right\"}\r\n          closable={false}\r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={visible}\r\n          key={\"right\"}\r\n        >\r\n          <div\r\n            style={{\r\n              // margin: \"18px 0px\",\r\n              marginBottom: \"20px\",\r\n            }}\r\n          >\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                // margin: \"18px 0px\",\r\n                fontSize: \"13px\",\r\n                fontWeight: \"600\",\r\n                lineHeight: \"0\",\r\n                color: \"#444\",\r\n              }}\r\n            >\r\n              THEME\r\n            </Typography.Title>\r\n          </div>\r\n          <Theme />\r\n          <Divider dashed style={{ margin: \"20px 0px \" }} />{\" \"}\r\n          <div\r\n            style={{\r\n              // margin: \"18px 0px\",\r\n              marginBottom: \"20px\",\r\n            }}\r\n          >\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                // margin: \"18px 0px\",\r\n                fontSize: \"13px\",\r\n                fontWeight: \"600\",\r\n                lineHeight: \"0\",\r\n                color: \"#444\",\r\n              }}\r\n            >\r\n              BACKGRAUND\r\n            </Typography.Title>\r\n          </div>\r\n          <Backgraund />\r\n          <Divider dashed style={{ margin: \"20px 0px \" }} />{\" \"}\r\n          <div\r\n            style={{\r\n              // margin: \"18px 0px\",\r\n              marginBottom: \"20px\",\r\n            }}\r\n          >\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                // margin: \"18px 0px\",\r\n                fontSize: \"13px\",\r\n                fontWeight: \"600\",\r\n                lineHeight: \"0\",\r\n                color: \"#444\",\r\n              }}\r\n            >\r\n              MODE\r\n            </Typography.Title>\r\n          </div>{\" \"}\r\n          <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n            <div\r\n              style={{\r\n                // backgroundImage: `url(${\r\n                //   process.env.PUBLIC_URL + \"/darkmode.png\"\r\n                // })`,\r\n                // backgroundColor: \"#888\",\r\n\r\n                width: \"40%\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/dark.png\"}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"80px\",\r\n                  border: \"2px solid rgb(128 128 128)\",\r\n                  borderRadius: \"4px\",\r\n                  padding: \"10px 28px\",\r\n                  marginBottom: \"17px\",\r\n                }}\r\n              />\r\n              <Typography.Title\r\n                level={4}\r\n                style={{\r\n                  // margin: \"18px 0px\",\r\n                  fontSize: \"12px\",\r\n                  fontWeight: \"600\",\r\n                  lineHeight: \"0\",\r\n                  color: \"#444\",\r\n                }}\r\n              >\r\n                Dark Mode\r\n              </Typography.Title>\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: \"40%\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/light.png\"}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"80px\",\r\n                  border: \"2px solid rgb(128 128 128)\",\r\n                  borderRadius: \"4px\",\r\n                  padding: \"10px 28px\",\r\n                  marginBottom: \"17px\",\r\n                }}\r\n              />\r\n              <Typography.Title\r\n                level={4}\r\n                style={{\r\n                  // margin: \"18px 0px\",\r\n                  fontSize: \"12px\",\r\n                  fontWeight: \"600\",\r\n                  lineHeight: \"0\",\r\n                  color: \"#444\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                Light Mode\r\n              </Typography.Title>\r\n            </div>\r\n          </div>\r\n          <Divider dashed style={{ margin: \"20px 0px \" }} />{\" \"}\r\n          <div\r\n            style={{\r\n              // margin: \"18px 0px\",\r\n              marginBottom: \"10px\",\r\n              display: \"flex\",\r\n              alignItems: \"baseline\",\r\n            }}\r\n          >\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                // margin: \"18px 0px\",\r\n                fontSize: \"13px\",\r\n                fontWeight: \"600\",\r\n                lineHeight: \"0\",\r\n                marginRight: \"65px\",\r\n                color: \"#444\",\r\n              }}\r\n            >\r\n              LANGUE\r\n            </Typography.Title>\r\n            <Select\r\n              labelInValue\r\n              defaultValue={{ value: \"en\" }}\r\n              style={{ width: \"100%\" }}\r\n              // onChange={handleChange}\r\n            >\r\n              {/* nglish (United States) Deutsch (Deutschland) English (United States)\r\n            Español (España, alfabetización internacional) Français (France)\r\n            Affichage */}\r\n              <Select.Option value=\"en\">English (United States)</Select.Option>\r\n              <Select.Option value=\"fr\">Français (France)</Select.Option>\r\n              <Select.Option value=\"ar\">Arabe </Select.Option>\r\n            </Select>\r\n          </div>\r\n          <div\r\n            style={{\r\n              // margin: \"18px 0px\",\r\n              marginBottom: \" 0px\",\r\n              display: \"flex\",\r\n              alignItems: \"baseline\",\r\n            }}\r\n          >\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                // margin: \"18px 0px\",\r\n                fontSize: \"13px\",\r\n                fontWeight: \"600\",\r\n                lineHeight: \"0\",\r\n                marginRight: \"65px\",\r\n                color: \"#444\",\r\n              }}\r\n            >\r\n              SON\r\n            </Typography.Title>\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n              }}\r\n            >\r\n              <Switch checkedChildren=\"on\" unCheckedChildren=\"off\" />\r\n            </div>\r\n          </div>\r\n          Faire jouer le son pour les messages entrants et les notifications\r\n        </Drawer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import Axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nAxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n  if (!expectedError) {\r\n    // Log the error\r\n    toast.error(\"An Unexpected error occurred (Network Error)\", {\r\n      toastId: \"unexpectedErrors\",\r\n      // containerId: 'unexpectedErrors',\r\n      position: \"bottom-center\",\r\n      autoClose: 5000,\r\n    });\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n  get: Axios.get,\r\n  post: Axios.post,\r\n  put: Axios.put,\r\n  patch: Axios.patch,\r\n  delete: Axios.delete,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Button, DataTable, Space } from \"dmsui\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { DeleteOutlined, EditOutlined, InfoOutlined } from \"@ant-design/icons\";\r\n\r\nconst data = [];\r\nfor (let i = 1; i <= 100; i++) {\r\n  data.push({\r\n    key: i,\r\n    US_EMAIL: \"John Brown\",\r\n    US_NOMUSR: `${i}2`,\r\n    US_PRNUSR: `New York No. ${i} Lake Park`,\r\n    US_TYPUSR: `My name is John Brown, I am ${i}2 years old, living in New York No. ${i} Lake Park.`,\r\n  });\r\n}\r\n\r\nconst expandable = {\r\n  expandedRowRender: (record) => <p>{record.description}</p>,\r\n};\r\nconst pagination = { position: \"bottom\" };\r\nconst vueSysteme = [];\r\nfor (let i = 1; i <= 1; i++) {\r\n  vueSysteme.push({\r\n    titre: \"Vue systéme \" + i,\r\n    check: true,\r\n  });\r\n}\r\nconst vuesPersonnalises = [];\r\nfor (let i = 1; i <= 3; i++) {\r\n  vuesPersonnalises.push({\r\n    titre: \"Vues personnalisés \" + i,\r\n    check: false,\r\n  });\r\n}\r\nclass TabTable extends Component {\r\n  state = {\r\n    bordered: false,\r\n    loading: false,\r\n    pagination,\r\n    columns: [\r\n      {\r\n        title: \"Email\",\r\n        dataIndex: \"US_EMAIL\",\r\n        sorter: (a, b) => a.age - b.age,\r\n      },\r\n      {\r\n        title: \"Nom\",\r\n        dataIndex: \"US_NOMUSR\",\r\n        filters: [\r\n          {\r\n            text: \"London\",\r\n            value: \"London\",\r\n          },\r\n          {\r\n            text: \"New York\",\r\n            value: \"New York\",\r\n          },\r\n        ],\r\n        onFilter: (value, record) => record.address.indexOf(value) === 0,\r\n      },\r\n      {\r\n        title: \"Prenom\",\r\n        dataIndex: \"US_PRNUSR\",\r\n      },\r\n      {\r\n        title: \"Type\",\r\n        dataIndex: \"US_TYPUSR\",\r\n      },\r\n      {\r\n        title: \"\",\r\n        key: \"action\",\r\n        // sorter: true,\r\n        render: (_, record) => (\r\n          <Space\r\n            size=\"middle\"\r\n            style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n          >\r\n            <Button\r\n              className={\"dms-button-info dms-button dms\"}\r\n              onClick={() => console.log(\"see\", record.key)}\r\n              shape=\"circle\"\r\n              onClick={() =>\r\n                this.props.history.push(\"UpdatePath/\" + record.key)\r\n              }\r\n              icon={<InfoOutlined />}\r\n              size=\"small\"\r\n            />\r\n            <Button\r\n              className={\"dms-button-valide dms-button dms\"}\r\n              onClick={() => console.log(\"edit\", record.key)}\r\n              shape=\"circle\"\r\n              icon={<EditOutlined />}\r\n              size=\"small\"\r\n            />\r\n            <Button\r\n              className={\"dms-button-error dms-button dms\"}\r\n              shape=\"circle\"\r\n              icon={<DeleteOutlined />}\r\n              onClick={() => console.log(\"delete\", record.key)}\r\n              size=\"small\"\r\n            />\r\n            {/* <Button className='ant-dropdown-link'>More actions</Button> */}\r\n          </Space>\r\n        ),\r\n      },\r\n    ],\r\n    expandable,\r\n    showHeader: true,\r\n    rowSelection: {},\r\n    scroll: undefined,\r\n    hasData: true,\r\n    tableLayout: undefined,\r\n    top: \"none\",\r\n    bottom: \"bottomRight\",\r\n  };\r\n  render() {\r\n    const { xScroll, yScroll, ...state } = this.state;\r\n    const scroll = {};\r\n    if (yScroll) {\r\n      scroll.y = 240;\r\n    }\r\n    if (xScroll) {\r\n      scroll.x = \"100vw\";\r\n    }\r\n\r\n    const tableColumns = this.state.columns.map((item) => ({\r\n      ...item,\r\n      ellipsis: state.ellipsis,\r\n    }));\r\n    if (xScroll === \"fixed\") {\r\n      tableColumns[0].fixed = true;\r\n      tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n    }\r\n    return (\r\n      <div style={{ height: \"100%\", width: \"100%\" }}>\r\n        <DataTable\r\n          className=\"template-dms\"\r\n          {...this.state}\r\n          vues={{\r\n            vueSysteme: vueSysteme,\r\n            vuesPersonnalises: vuesPersonnalises,\r\n          }}\r\n          size=\"small\"\r\n          pagination={{ position: [this.state.top, this.state.bottom] }}\r\n          columns={tableColumns}\r\n          dataSource={state.hasData ? data : null}\r\n          scroll={scroll}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(TabTable);\r\n","import {\r\n  domaine,\r\n  ApplicationApiEndPoint,\r\n  loginApiEndPoint,\r\n  logoutApiEndPoint,\r\n  userAuthApiEndPoint,\r\n} from \"../config\";\r\nimport http from \"./httpService\";\r\nexport const login = (loginObject) => {\r\n  return http.post(domaine + \"\" + loginApiEndPoint, loginObject, {\r\n    headers: {\r\n      Authorization: localStorage.getItem(\"access_token\")\r\n        ? \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        : null,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\nexport const logout = () => {\r\n  return http.post(\r\n    domaine + \"\" + logoutApiEndPoint,\r\n    {\r\n      refresh: localStorage.getItem(\"refresh_token\"),\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: localStorage.getItem(\"access_token\")\r\n          ? \"Bearer \" + localStorage.getItem(\"access_token\")\r\n          : null,\r\n        \"Content-Type\": \"application/json\",\r\n        accept: \"application/json\",\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nexport const GetUserAuth = async (token) => {\r\n  // bazStorage.get(\"access_token\", function (error, value) {\r\n  //   localStorage.setItem(\"access_token\", value);\r\n  // });\r\n  // bazStorage.get(\"refresh_token\", function (error, value) {\r\n  //   localStorage.setItem(\"refresh_token\", value);\r\n  // });\r\n  return http.get(domaine + \"\" + userAuthApiEndPoint, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n\r\n  // try {\r\n  //   const res = await http.get(domaine + \"\" + userAuthApiEndPoint, {\r\n  //     headers: {\r\n  //       Authorization: localStorage.getItem(\"access_token\")\r\n  //         ? \"Bearer \" + localStorage.getItem(\"access_token\")\r\n  //         : null,\r\n  //       \"Content-Type\": \"application/json\",\r\n  //       accept: \"application/json\",\r\n  //     },\r\n  //   });\r\n  //   return res;\r\n  // } catch (error) {\r\n  //   console.log(error);\r\n  //   if (error == \"Error: Network Error\") {\r\n  //     // goto(\"500\");\r\n  //   } else {\r\n  //     // goto(\"403\");\r\n  //   }\r\n  //   return error;\r\n  // }\r\n};\r\nexport const verifyToken = (token) => {\r\n  return http.post(\r\n    domaine + \"DMERP/v1/auth/token/verify/\",\r\n    { token: token },\r\n    {\r\n      headers: {\r\n        // Authorization: localStorage.getItem(\"access_token\")\r\n        //   ? \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        //   : null,\r\n        \"Content-Type\": \"application/json\",\r\n        accept: \"application/json\",\r\n      },\r\n    }\r\n  );\r\n};\r\nexport const RefrechToken = (RefrechToken) => {\r\n  return http.post(\r\n    domaine + \"DMERP/v1/auth/token/refresh/\",\r\n    { refresh: RefrechToken },\r\n    {\r\n      headers: {\r\n        // Authorization: localStorage.getItem(\"access_token\")\r\n        //   ? \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        //   : null,\r\n        \"Content-Type\": \"application/json\",\r\n        accept: \"application/json\",\r\n      },\r\n    }\r\n  );\r\n};\r\nexport const connexion = async (\r\n  token,\r\n  refresh_token,\r\n  logout,\r\n  host_storage,\r\n  refresh\r\n) => {\r\n  var verify = null;\r\n  var refresh = false;\r\n  // this.props.goto(\"signIn\");\r\n  console.log(\"------------------debut-ConnexionToHost------------------\");\r\n  try {\r\n    verify = await verifyToken(token);\r\n    console.log(\"tkoen verify result : \", verify);\r\n  } catch (error) {\r\n    console.log(\"tkoen verify error : \", error, verify);\r\n    try {\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        refresh = await RefrechToken(refresh_token);\r\n        host_storage.set(\r\n          \"access_token\",\r\n          refresh.data.access,\r\n          function (error, data) {\r\n            console.log(\r\n              \"Host storage set (access token) => : \",\r\n              data,\r\n              \"error\",\r\n              error,\r\n              \"refresh.data.access\",\r\n              refresh.data.access\r\n            );\r\n          }\r\n        );\r\n        host_storage.set(\r\n          \"refresh_token\",\r\n          refresh.data.refresh,\r\n          function (error, data) {\r\n            console.log(\r\n              \"Host storage set (refrech token) => : \",\r\n              data,\r\n              \"error\",\r\n              error,\r\n              \"refresh.data.refresh\",\r\n              refresh.data.refresh\r\n            );\r\n          }\r\n        );\r\n        console.log(\"tkoen refresh result : \", refresh);\r\n        console.log(\r\n          \"-------------------fin-ConnexionToHost-------------------\"\r\n        );\r\n        return refresh.data.access;\r\n      }\r\n    } catch (error) {\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        console.log(\"tkoen refresh error : \", error, refresh);\r\n        host_storage.remove(\"access_token\", function (error, data) {\r\n          console.log(\r\n            \"Host storage remove (access token) => : \",\r\n            data,\r\n            \"error\",\r\n            error\r\n          );\r\n        });\r\n        host_storage.remove(\"refresh_token\", function (error, data) {\r\n          console.log(\r\n            \"Host storage remove (refrech token) => : \",\r\n            data,\r\n            \"error\",\r\n            error\r\n          );\r\n        });\r\n\r\n        logout();\r\n      }\r\n    }\r\n  }\r\n  console.log(\"-------------------fin-ConnexionToHost-------------------\");\r\n  return token;\r\n};\r\n","import { Drawer } from \"antd\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Divider,\r\n  Image,\r\n  Row,\r\n  Typography,\r\n  List,\r\n  Avatar,\r\n  Alert,\r\n} from \"dmsui\";\r\nimport React from \"react\";\r\nimport {\r\n  AppstoreTwoTone,\r\n  IdcardTwoTone,\r\n  ContactsTwoTone,\r\n  ScheduleTwoTone,\r\n  ContainerTwoTone,\r\n  ReconciliationTwoTone,\r\n  WarningTwoTone,\r\n  CheckCircleTwoTone,\r\n  CloseCircleTwoTone,\r\n  InfoCircleTwoTone,\r\n} from \"@ant-design/icons\";\r\nimport axiosInstance from \"../../../../DjangoService/AuthService\";\r\nimport { GetUserAuth } from \"../../../../DjangoService/authnService\";\r\nimport { authApp } from \"../../../../config\";\r\nconst data = [\r\n  {\r\n    title: \"My Profile\",\r\n    descr: \"Account settings and more\",\r\n    icon: ContactsTwoTone,\r\n    color: \"#69da87\",\r\n  },\r\n  {\r\n    title: \"My Messages\",\r\n    descr: \"Inbox and tasks\",\r\n    icon: ContainerTwoTone,\r\n    color: \"#d8da69\",\r\n  },\r\n  {\r\n    title: \"My Activities\",\r\n    descr: \"Logs and notifications\",\r\n    icon: ScheduleTwoTone,\r\n    color: \"#da6969\",\r\n  },\r\n  {\r\n    title: \"My Tasks\",\r\n    descr: \"latest tasks and projects\",\r\n    icon: ReconciliationTwoTone,\r\n    color: \"#437bd1\",\r\n  },\r\n];\r\nconst alert = [\r\n  {\r\n    title: \"Warning Alert\",\r\n    date: \"21.05.2021- 12:45\",\r\n    icon: WarningTwoTone,\r\n    color: \"#ffc85d\",\r\n    bckColor: \"#fff8d5\",\r\n  },\r\n  {\r\n    title: \"Success Alert\",\r\n    date: \"21.05.2021- 10:00\",\r\n    icon: CheckCircleTwoTone,\r\n    color: \"#1bc5bd\",\r\n    bckColor: \"#c9f7f5\",\r\n  },\r\n  {\r\n    title: \"Error Alert\",\r\n    date: \"20.05.2021- 23:00\",\r\n    icon: CloseCircleTwoTone,\r\n    color: \"#f64e60\",\r\n    bckColor: \"#ffe2e5\",\r\n  },\r\n  {\r\n    title: \"Informational Alert\",\r\n    date: \"19.05.2021- 22:00\",\r\n    icon: InfoCircleTwoTone,\r\n    color: \"#8950fc\",\r\n    bckColor: \"#eee5ff\",\r\n  },\r\n];\r\n\r\nexport default class Setting extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { visible: false, userDatas: [], token: null };\r\n  }\r\n\r\n  showDrawer() {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n    this.props.visible(false);\r\n  }\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.visible(true);\r\n  };\r\n\r\n  render() {\r\n    const { visible, userDatas } = this.state;\r\n    const { profil, goto } = this.props;\r\n    return (\r\n      <>\r\n        <Drawer\r\n          title={\r\n            <div\r\n              style={\r\n                {\r\n                  // display: \"flex\",\r\n                  // alignItems: \"baseline\",\r\n                }\r\n              }\r\n            >\r\n              <Typography.Title\r\n                level={4}\r\n                style={{\r\n                  margin: \"0\",\r\n                  fontSize: \"18px\",\r\n                  fontWeight: \"500\",\r\n                  lineHeight: \"0.9\",\r\n                }}\r\n              >\r\n                {/* <IdcardTwoTone twoToneColor={\"#444\"} /> */}\r\n                My Profile\r\n              </Typography.Title>{\" \"}\r\n              <Typography.Text type=\"secondary\" style={{ fontSize: \"13px\" }}>\r\n                7 message\r\n              </Typography.Text>\r\n            </div>\r\n          }\r\n          placement={\"right\"}\r\n          width={350}\r\n          closable={false}\r\n          onClose={this.onClose}\r\n          visible={visible}\r\n          key={\"right\"}\r\n        >\r\n          <Row gutter={[16, 16]} align=\"top\" wrap={false}>\r\n            <Col flex=\"104px\">\r\n              <Image\r\n                width={104}\r\n                height={105}\r\n                src={\r\n                  !!this.props.user && this.props.user.MUTPHOTOS != null\r\n                    ? this.props.user.MUTPHOTOS\r\n                    : profil\r\n                }\r\n                //\r\n                style={{ borderRadius: \"3px\", objectFit: \"cover\" }}\r\n              />\r\n            </Col>\r\n            <Col flex=\"auto\">\r\n              <Typography.Title\r\n                level={5}\r\n                style={{ margin: \"0px\" }}\r\n                ellipsis={true}\r\n                // editable={{\r\n                //   // icon: <HighlightOutlined />,\r\n                //   tooltip: \"click to edit text\",\r\n                //   // onChange: setCustomIconStr,\r\n                // }}\r\n                // copyable\r\n              >\r\n                {!!this.props.user && this.props.user.first_name}\r\n                {!!this.props.user && this.props.user.last_name}\r\n              </Typography.Title>\r\n\r\n              <Typography.Paragraph style={{ margin: \"0px\" }} ellipsis={true}>\r\n                {!!this.props.user &&\r\n                  this.props.user.MUTPROFID != null &&\r\n                  this.props.user.MUTPROFID.MPRLIBCOUR}\r\n              </Typography.Paragraph>\r\n              <Typography.Paragraph\r\n                ellipsis={true}\r\n                style={{ marginBottom: \"4px\" }}\r\n                type=\"secondary\"\r\n              >\r\n                {!!this.props.user && this.props.user.email}\r\n              </Typography.Paragraph>\r\n              <Button\r\n                type=\"primary\"\r\n                // className=\"trigger\"\r\n                onClick={() =>\r\n                  axiosInstance\r\n                    .post(`http://10.0.0.253:8000/DMERP/v1/auth/logout/`)\r\n                    .then((res) => {\r\n                      localStorage.removeItem(\"access_token\");\r\n                      localStorage.removeItem(\"refresh_token\");\r\n                      this.props.goto(\"signIn\");\r\n                      //console.log(res);\r\n                      //console.log(res.data);\r\n                    })\r\n                }\r\n                style={{ width: \"100px\" }}\r\n              >\r\n                Logout\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Divider dashed style={{ margin: \"20px 0px 5px\" }} />\r\n          <List\r\n            bordered={false}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={data}\r\n            renderItem={(item) => (\r\n              <List.Item style={{ padding: \"7px 0px\", border: \"0px\" }}>\r\n                <List.Item.Meta\r\n                  style={{ margin: \"0px\" }}\r\n                  avatar={\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: \"#f4f4f4\",\r\n                        padding: \"8px 12px\",\r\n                        borderRadius: \"4px\",\r\n                      }}\r\n                    >\r\n                      <item.icon\r\n                        twoToneColor={item.color}\r\n                        style={{ fontSize: \"15px\" }}\r\n                      />\r\n                    </div>\r\n                  }\r\n                  title={\r\n                    <a href=\" \" style={{ fontSize: \"13px\" }}>\r\n                      {item.title}\r\n                    </a>\r\n                  }\r\n                  description={\r\n                    <div style={{ fontSize: \"13px\", lineHeight: \"0\" }}>\r\n                      {item.descr}\r\n                    </div>\r\n                  }\r\n                />\r\n              </List.Item>\r\n            )}\r\n          />\r\n          <Divider dashed style={{ margin: \"20px 0px 5px\" }} />\r\n          <div\r\n            style={{\r\n              margin: \"0px 0px 24px\",\r\n              // display: \"flex\",\r\n              // alignItems: \"baseline\",\r\n            }}\r\n          >\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: \"18px 0px\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"500\",\r\n                lineHeight: \"0.9\",\r\n              }}\r\n            >\r\n              Recent Notifications\r\n            </Typography.Title>\r\n          </div>\r\n          {alert.map((alerte) => (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                padding: \"17px 6px 12px\",\r\n                backgroundColor: alerte.bckColor,\r\n                borderRadius: \"2px\",\r\n                marginBottom: \"6px\",\r\n              }}\r\n            >\r\n              <div style={{ padding: \"5px 10px 0px 6px\" }}>\r\n                <alerte.icon\r\n                  style={{ fontSize: \"18px\", color: \"#ffc85d\" }}\r\n                  twoToneColor={alerte.color}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  margin: \"0 \",\r\n                }}\r\n              >\r\n                <Typography.Title\r\n                  level={5}\r\n                  style={{\r\n                    margin: \"0\",\r\n                    fontSize: \"15px\",\r\n                    fontWeight: \"500\",\r\n                    lineHeight: \"1\",\r\n                  }}\r\n                >\r\n                  {alerte.title}\r\n                </Typography.Title>\r\n                <Typography.Text\r\n                  type=\"secondary\"\r\n                  style={{ fontSize: \"12px\", color: \"#b8b8b8\" }}\r\n                >\r\n                  {alerte.date}\r\n                </Typography.Text>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </Drawer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport { Typography } from \"dmsui\";\r\nimport {\r\n  WarningTwoTone,\r\n  CheckCircleTwoTone,\r\n  CloseCircleTwoTone,\r\n  InfoCircleTwoTone,\r\n} from \"@ant-design/icons\";\r\n// import { DownOutlined } from \"@ant-design/icons\";\r\nconst alert = [\r\n  {\r\n    title: \"Warning Alert\",\r\n    date: \"21.05.2021- 12:45\",\r\n    icon: WarningTwoTone,\r\n    color: \"#ffc85d\",\r\n    bckColor: \"#fff8d5\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Success Alert\",\r\n    date: \"21.05.2021- 10:00\",\r\n    icon: CheckCircleTwoTone,\r\n    color: \"#1bc5bd\",\r\n    bckColor: \"#c9f7f5\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Error Alert\",\r\n    date: \"20.05.2021- 23:00\",\r\n    icon: CloseCircleTwoTone,\r\n    color: \"#f64e60\",\r\n    bckColor: \"#ffe2e5\",\r\n    see: false,\r\n  },\r\n  {\r\n    title: \"Informational Alert\",\r\n    date: \"19.05.2021- 22:00\",\r\n    icon: InfoCircleTwoTone,\r\n    color: \"#8950fc\",\r\n    bckColor: \"#eee5ff\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Warning Alert\",\r\n    date: \"21.05.2021- 12:45\",\r\n    icon: WarningTwoTone,\r\n    color: \"#ffc85d\",\r\n    bckColor: \"#fff8d5\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Success Alert\",\r\n    date: \"21.05.2021- 10:00\",\r\n    icon: CheckCircleTwoTone,\r\n    color: \"#1bc5bd\",\r\n    bckColor: \"#c9f7f5\",\r\n    see: false,\r\n  },\r\n  {\r\n    title: \"Error Alert\",\r\n    date: \"20.05.2021- 23:00\",\r\n    icon: CloseCircleTwoTone,\r\n    color: \"#f64e60\",\r\n    bckColor: \"#ffe2e5\",\r\n    see: false,\r\n  },\r\n  {\r\n    title: \"Informational Alert\",\r\n    date: \"19.05.2021- 22:00\",\r\n    icon: InfoCircleTwoTone,\r\n    color: \"#8950fc\",\r\n    bckColor: \"#eee5ff\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Warning Alert\",\r\n    date: \"21.05.2021- 12:45\",\r\n    icon: WarningTwoTone,\r\n    color: \"#ffc85d\",\r\n    bckColor: \"#fff8d5\",\r\n    see: false,\r\n  },\r\n  {\r\n    title: \"Success Alert\",\r\n    date: \"21.05.2021- 10:00\",\r\n    icon: CheckCircleTwoTone,\r\n    color: \"#1bc5bd\",\r\n    bckColor: \"#c9f7f5\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Error Alert\",\r\n    date: \"20.05.2021- 23:00\",\r\n    icon: CloseCircleTwoTone,\r\n    color: \"#f64e60\",\r\n    bckColor: \"#ffe2e5\",\r\n    see: false,\r\n  },\r\n  {\r\n    title: \"Informational Alert\",\r\n    date: \"19.05.2021- 22:00\",\r\n    icon: InfoCircleTwoTone,\r\n    color: \"#8950fc\",\r\n    bckColor: \"#eee5ff\",\r\n    see: false,\r\n  },\r\n  {\r\n    title: \"Warning Alert\",\r\n    date: \"21.05.2021- 12:45\",\r\n    icon: WarningTwoTone,\r\n    color: \"#ffc85d\",\r\n    bckColor: \"#fff8d5\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Success Alert\",\r\n    date: \"21.05.2021- 10:00\",\r\n    icon: CheckCircleTwoTone,\r\n    color: \"#1bc5bd\",\r\n    bckColor: \"#c9f7f5\",\r\n    see: false,\r\n  },\r\n  {\r\n    title: \"Error Alert\",\r\n    date: \"20.05.2021- 23:00\",\r\n    icon: CloseCircleTwoTone,\r\n    color: \"#f64e60\",\r\n    bckColor: \"#ffe2e5\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Informational Alert\",\r\n    date: \"19.05.2021- 22:00\",\r\n    icon: InfoCircleTwoTone,\r\n    color: \"#8950fc\",\r\n    bckColor: \"#eee5ff\",\r\n    see: true,\r\n  },\r\n];\r\nexport const MenuUser = (\r\n  <>\r\n    <div\r\n      style={{\r\n        // display: \"flex\",\r\n        // justifyContent: \"center\",\r\n        // alignItems: \"center\",\r\n        // alignContent: \"center\",\r\n        // fontSize: \"13px\",\r\n        // fontWeight: \"600\",\r\n        // color: \"#555\",\r\n        // backgroundColor: \"#fff\",\r\n        display: \"flex\",\r\n        placeContent: \"center\",\r\n        fontSize: \"16px\",\r\n        padding: \"16px\",\r\n        fontWeight: \"600\",\r\n        color: \"rgb(37 32 69)\",\r\n        backgroundColor: \"rgb(255, 255, 255)\",\r\n        justifyContent: \"flex-start\",\r\n        borderBottom: \"1px solid #eee\",\r\n      }}\r\n    >\r\n      Notifications\r\n    </div>\r\n    <Menu style={{ overflowY: \"scroll\", maxHeight: \"400px\" }}>\r\n      {alert.map((alerte) => (\r\n        <Menu.Item key=\"0\" style={{ display: \"contents\" }}>\r\n          <div\r\n            style={{\r\n              width: \"250px\",\r\n              display: \"flex\",\r\n              padding: \"2px 2px 1px\",\r\n              // backgroundColor: alerte.bckColor,\r\n              borderRadius: \"2px\",\r\n              marginBottom: \"1px\",\r\n            }}\r\n          >\r\n            <div style={{ padding: \"5px 10px 0px 6px\" }}>\r\n              <alerte.icon\r\n                style={{ fontSize: \"18px\", color: \"#ffc85d\" }}\r\n                twoToneColor={alerte.color}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                margin: \"0 \",\r\n              }}\r\n            >\r\n              <Typography.Title\r\n                level={5}\r\n                style={{\r\n                  margin: \"0\",\r\n                  fontSize: \"15px\",\r\n                  fontWeight: \"500\",\r\n                  lineHeight: \"1\",\r\n                }}\r\n              >\r\n                {alerte.title}\r\n              </Typography.Title>{\" \"}\r\n              <Typography.Text\r\n                type=\"secondary\"\r\n                style={{ fontSize: \"12px\", color: \"#b8b8b8\" }}\r\n              >\r\n                {alerte.date}\r\n              </Typography.Text>\r\n            </div>\r\n          </div>\r\n        </Menu.Item>\r\n      ))}\r\n    </Menu>\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        alignContent: \"center\",\r\n        fontSize: \"13px\",\r\n        fontWeight: \"600\",\r\n        color: \"#555\",\r\n        backgroundColor: \"#fff\",\r\n      }}\r\n    >\r\n      View All\r\n    </div>\r\n  </>\r\n);\r\n\r\n// export default class MenuUser extends Component {\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <Dropdown overlay={menu}>\r\n//           <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\r\n//             <DownOutlined />\r\n//           </a>\r\n//         </Dropdown>{\" \"}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n","import React, { Component } from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport { Button, Typography } from \"dmsui\";\r\nimport {\r\n  WarningTwoTone,\r\n  CheckCircleTwoTone,\r\n  CloseCircleTwoTone,\r\n  InfoCircleTwoTone,\r\n} from \"@ant-design/icons\";\r\n// import { DownOutlined } from \"@ant-design/icons\";\r\nconst alert = [\r\n  {\r\n    title: \"Warning Alert\",\r\n    date: \"21.05.2021- 12:45\",\r\n    icon: WarningTwoTone,\r\n    color: \"#ffc85d\",\r\n    bckColor: \"#fff8d5\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Success Alert\",\r\n    date: \"21.05.2021- 10:00\",\r\n    icon: CheckCircleTwoTone,\r\n    color: \"#1bc5bd\",\r\n    bckColor: \"#c9f7f5\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Error Alert\",\r\n    date: \"20.05.2021- 23:00\",\r\n    icon: CloseCircleTwoTone,\r\n    color: \"#f64e60\",\r\n    bckColor: \"#ffe2e5\",\r\n    see: false,\r\n  },\r\n  {\r\n    title: \"Informational Alert\",\r\n    date: \"19.05.2021- 22:00\",\r\n    icon: InfoCircleTwoTone,\r\n    color: \"#8950fc\",\r\n    bckColor: \"#eee5ff\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Warning Alert\",\r\n    date: \"21.05.2021- 12:45\",\r\n    icon: WarningTwoTone,\r\n    color: \"#ffc85d\",\r\n    bckColor: \"#fff8d5\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Success Alert\",\r\n    date: \"21.05.2021- 10:00\",\r\n    icon: CheckCircleTwoTone,\r\n    color: \"#1bc5bd\",\r\n    bckColor: \"#c9f7f5\",\r\n    see: false,\r\n  },\r\n  {\r\n    title: \"Error Alert\",\r\n    date: \"20.05.2021- 23:00\",\r\n    icon: CloseCircleTwoTone,\r\n    color: \"#f64e60\",\r\n    bckColor: \"#ffe2e5\",\r\n    see: false,\r\n  },\r\n  {\r\n    title: \"Informational Alert\",\r\n    date: \"19.05.2021- 22:00\",\r\n    icon: InfoCircleTwoTone,\r\n    color: \"#8950fc\",\r\n    bckColor: \"#eee5ff\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Warning Alert\",\r\n    date: \"21.05.2021- 12:45\",\r\n    icon: WarningTwoTone,\r\n    color: \"#ffc85d\",\r\n    bckColor: \"#fff8d5\",\r\n    see: false,\r\n  },\r\n  {\r\n    title: \"Success Alert\",\r\n    date: \"21.05.2021- 10:00\",\r\n    icon: CheckCircleTwoTone,\r\n    color: \"#1bc5bd\",\r\n    bckColor: \"#c9f7f5\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Error Alert\",\r\n    date: \"20.05.2021- 23:00\",\r\n    icon: CloseCircleTwoTone,\r\n    color: \"#f64e60\",\r\n    bckColor: \"#ffe2e5\",\r\n    see: false,\r\n  },\r\n  {\r\n    title: \"Informational Alert\",\r\n    date: \"19.05.2021- 22:00\",\r\n    icon: InfoCircleTwoTone,\r\n    color: \"#8950fc\",\r\n    bckColor: \"#eee5ff\",\r\n    see: false,\r\n  },\r\n  {\r\n    title: \"Warning Alert\",\r\n    date: \"21.05.2021- 12:45\",\r\n    icon: WarningTwoTone,\r\n    color: \"#ffc85d\",\r\n    bckColor: \"#fff8d5\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Success Alert\",\r\n    date: \"21.05.2021- 10:00\",\r\n    icon: CheckCircleTwoTone,\r\n    color: \"#1bc5bd\",\r\n    bckColor: \"#c9f7f5\",\r\n    see: false,\r\n  },\r\n  {\r\n    title: \"Error Alert\",\r\n    date: \"20.05.2021- 23:00\",\r\n    icon: CloseCircleTwoTone,\r\n    color: \"#f64e60\",\r\n    bckColor: \"#ffe2e5\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Informational Alert\",\r\n    date: \"19.05.2021- 22:00\",\r\n    icon: InfoCircleTwoTone,\r\n    color: \"#8950fc\",\r\n    bckColor: \"#eee5ff\",\r\n    see: true,\r\n  },\r\n];\r\nexport default class Notification extends Component {\r\n  render() {\r\n    return (\r\n      //   <Notification />\r\n      <div style={{ overflowY: \"scroll\", maxHeight: \"300px\" }}>\r\n        {alert.map((alerte) => (\r\n          <div\r\n            style={{\r\n              width: \"300px\",\r\n              display: \"flex\",\r\n              padding: \"10px 2px 4px\",\r\n              backgroundColor: alerte.see ? \"#fff\" : \"#f5f5f5\",\r\n              borderRadius: \"2px\",\r\n              borderBottom: \"1px solid #eee\",\r\n            }}\r\n          >\r\n            <div style={{ padding: \"0px 19px 0px 6px\" }}>\r\n              <alerte.icon\r\n                style={{ fontSize: \"18px\", color: \"#ffc85d\" }}\r\n                twoToneColor={alerte.color}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                margin: \"0 \",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <Typography.Title\r\n                level={5}\r\n                style={{\r\n                  margin: \"0\",\r\n                  fontSize: \"15px\",\r\n                  fontWeight: \"500\",\r\n                  lineHeight: \"1\",\r\n                }}\r\n              >\r\n                {alerte.title}\r\n              </Typography.Title>{\" \"}\r\n              <Typography.Text\r\n                type=\"secondary\"\r\n                style={{ fontSize: \"12px\", color: \"#b8b8b8\" }}\r\n              >\r\n                {alerte.date}\r\n              </Typography.Text>\r\n            </div>\r\n          </div>\r\n        ))}{\" \"}\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            alignContent: \"center\",\r\n            fontSize: \"13px\",\r\n            fontWeight: \"600\",\r\n            color: \"#555\",\r\n            backgroundColor: \"#fff\",\r\n          }}\r\n        >\r\n          View All\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport { Avatar, Badge, Button, Image, Typography } from \"dmsui\";\r\nimport {\r\n  WarningTwoTone,\r\n  CheckCircleTwoTone,\r\n  CloseCircleTwoTone,\r\n  InfoCircleTwoTone,\r\n} from \"@ant-design/icons\";\r\nimport Notification from \"./Notification\";\r\n// import { DownOutlined } from \"@ant-design/icons\";\r\nconst alert = [\r\n  {\r\n    title: \"Matt Pears\",\r\n    message:\r\n      \"How likely are you to recommend our company to your friends and family?\",\r\n    date: \"21.05.2021- 12:45\",\r\n    icon: WarningTwoTone,\r\n    color: \"#ffc85d\",\r\n    bckColor: \"#fff8d5\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Success Alert\",\r\n    date: \"21.05.2021- 10:00\",\r\n    message:\r\n      \"How likely are you to recommend our company to your friends and family?\",\r\n    icon: CheckCircleTwoTone,\r\n    color: \"#1bc5bd\",\r\n    bckColor: \"#c9f7f5\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Error Alert\",\r\n    date: \"20.05.2021- 23:00\",\r\n    message:\r\n      \"How likely are you to recommend our company to your friends and family?\",\r\n    icon: CloseCircleTwoTone,\r\n    color: \"#f64e60\",\r\n    bckColor: \"#ffe2e5\",\r\n    see: false,\r\n  },\r\n  {\r\n    title: \"Informational Alert\",\r\n    date: \"19.05.2021- 22:00\",\r\n    message:\r\n      \"How likely are you to recommend our company to your friends and family?\",\r\n    icon: InfoCircleTwoTone,\r\n    color: \"#8950fc\",\r\n    bckColor: \"#eee5ff\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Warning Alert\",\r\n    date: \"21.05.2021- 12:45\",\r\n    message:\r\n      \"How likely are you to recommend our company to your friends and family?\",\r\n    icon: WarningTwoTone,\r\n    color: \"#ffc85d\",\r\n    bckColor: \"#fff8d5\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Success Alert\",\r\n    date: \"21.05.2021- 10:00\",\r\n    message:\r\n      \"How likely are you to recommend our company to your friends and family?\",\r\n    icon: CheckCircleTwoTone,\r\n    color: \"#1bc5bd\",\r\n    bckColor: \"#c9f7f5\",\r\n    see: false,\r\n  },\r\n  {\r\n    title: \"Error Alert\",\r\n    date: \"20.05.2021- 23:00\",\r\n    message:\r\n      \"How likely are you to recommend our company to your friends and family?\",\r\n    icon: CloseCircleTwoTone,\r\n    color: \"#f64e60\",\r\n    bckColor: \"#ffe2e5\",\r\n    see: false,\r\n  },\r\n  {\r\n    title: \"Informational Alert\",\r\n    date: \"19.05.2021- 22:00\",\r\n    message:\r\n      \"How likely are you to recommend our company to your friends and family?\",\r\n    icon: InfoCircleTwoTone,\r\n    color: \"#8950fc\",\r\n    bckColor: \"#eee5ff\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Warning Alert\",\r\n    date: \"21.05.2021- 12:45\",\r\n    message:\r\n      \"How likely are you to recommend our company to your friends and family?\",\r\n    icon: WarningTwoTone,\r\n    color: \"#ffc85d\",\r\n    bckColor: \"#fff8d5\",\r\n    see: false,\r\n  },\r\n  {\r\n    title: \"Success Alert\",\r\n    date: \"21.05.2021- 10:00\",\r\n    message:\r\n      \"How likely are you to recommend our company to your friends and family?\",\r\n    icon: CheckCircleTwoTone,\r\n    color: \"#1bc5bd\",\r\n    bckColor: \"#c9f7f5\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Error Alert\",\r\n    date: \"20.05.2021- 23:00\",\r\n    icon: CloseCircleTwoTone,\r\n    message:\r\n      \"How likely are you to recommend our company to your friends and family?\",\r\n    color: \"#f64e60\",\r\n    bckColor: \"#ffe2e5\",\r\n    see: false,\r\n  },\r\n  {\r\n    title: \"Informational Alert\",\r\n    date: \"19.05.2021- 22:00\",\r\n    message:\r\n      \"How likely are you to recommend our company to your friends and family?\",\r\n    icon: InfoCircleTwoTone,\r\n    color: \"#8950fc\",\r\n    bckColor: \"#eee5ff\",\r\n    see: false,\r\n  },\r\n  {\r\n    title: \"Warning Alert\",\r\n    date: \"21.05.2021- 12:45\",\r\n    message:\r\n      \"How likely are you to recommend our company to your friends and family?\",\r\n    icon: WarningTwoTone,\r\n    color: \"#ffc85d\",\r\n    bckColor: \"#fff8d5\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Success Alert\",\r\n    date: \"21.05.2021- 10:00\",\r\n    icon: CheckCircleTwoTone,\r\n    message:\r\n      \"How likely are you to recommend our company to your friends and family?\",\r\n    color: \"#1bc5bd\",\r\n    bckColor: \"#c9f7f5\",\r\n    see: false,\r\n  },\r\n  {\r\n    title: \"Error Alert\",\r\n    date: \"20.05.2021- 23:00\",\r\n    icon: CloseCircleTwoTone,\r\n    message:\r\n      \"How likely are you to recommend our company to your friends and family?\",\r\n    color: \"#f64e60\",\r\n    bckColor: \"#ffe2e5\",\r\n    see: true,\r\n  },\r\n  {\r\n    title: \"Informational Alert\",\r\n    date: \"19.05.2021- 22:00\",\r\n    message:\r\n      \"How likely are you to recommend our company to your friends and family?\",\r\n    icon: InfoCircleTwoTone,\r\n    color: \"#8950fc\",\r\n    bckColor: \"#eee5ff\",\r\n    see: true,\r\n  },\r\n];\r\nexport default class Message extends Component {\r\n  render() {\r\n    return (\r\n      //   <Notification />\r\n      <div style={{ overflowY: \"scroll\", maxHeight: \"300px\" }}>\r\n        {alert.map((alerte) => (\r\n          <div\r\n            style={{\r\n              width: \"350px\",\r\n              display: \"flex\",\r\n              padding: \"10px 2px 4px\",\r\n              backgroundColor: alerte.see ? \"#fff\" : \"#f5f5f5\",\r\n              borderRadius: \"2px\",\r\n              borderBottom: \"1px solid #eee\",\r\n            }}\r\n          >\r\n            <div style={{ padding: \"0px 10px 0px 6px\" }}>\r\n              {/* <alerte.icon\r\n                style={{ fontSize: \"18px\", color: \"#ffc85d\" }}\r\n                twoToneColor={alerte.color}\r\n              /> */}\r\n              <Badge\r\n                status=\"success\"\r\n                offset={[-5, 29]}\r\n                className=\"template-dms-badge template-avatar\"\r\n              >\r\n                <Avatar\r\n                  src={<Image preview={false} src={this.props.userPhoto} />}\r\n                  size={32}\r\n                  //   icon={<UserOutlined />}\r\n                />\r\n              </Badge>\r\n            </div>\r\n            <div\r\n              style={{\r\n                margin: \"0 \",\r\n                width: \"300px\",\r\n              }}\r\n            >\r\n              <Typography.Title\r\n                level={5}\r\n                style={{\r\n                  margin: \"0\",\r\n                  fontSize: \"15px\",\r\n                  fontWeight: \"500\",\r\n                  lineHeight: \"1\",\r\n                }}\r\n              >\r\n                {alerte.title}\r\n              </Typography.Title>{\" \"}\r\n              <Typography.Text\r\n                style={{\r\n                  fontSize: \"13px\",\r\n                  color: \"#bbb\",\r\n\r\n                  display: \"flex\",\r\n                  whiteSpace: \"nowrap\",\r\n                  overflow: \"hidden\",\r\n                }}\r\n              >\r\n                {alerte.message}\r\n              </Typography.Text>\r\n              <Typography.Text\r\n                type=\"secondary\"\r\n                style={{ fontSize: \"12px\", color: \"#b8b8b8\" }}\r\n              >\r\n                {alerte.date}\r\n              </Typography.Text>\r\n            </div>\r\n          </div>\r\n        ))}{\" \"}\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            alignContent: \"center\",\r\n            fontSize: \"13px\",\r\n            fontWeight: \"600\",\r\n            color: \"#555\",\r\n            backgroundColor: \"#fff\",\r\n          }}\r\n        >\r\n          View All\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  Avatar,\r\n  Badge,\r\n  Button,\r\n  Col,\r\n  Image,\r\n  Input,\r\n  Layout,\r\n  Row,\r\n  Space,\r\n  Typography,\r\n  Dropdown,\r\n  // Menu,\r\n} from \"antd\";\r\n\r\nimport {\r\n  MessageOutlined,\r\n  UserOutlined,\r\n  BellOutlined,\r\n  SearchOutlined,\r\n  SettingOutlined,\r\n  MessageTwoTone,\r\n  BellTwoTone,\r\n} from \"@ant-design/icons\";\r\nimport React, { Component } from \"react\";\r\nimport Setting from \"./Setting\";\r\nimport Compte from \"./Compte\";\r\nimport { MenuUser } from \"./menuUser\";\r\nimport { Popover } from \"dmsui\";\r\nimport Message from \"./Message\";\r\nimport Notification from \"./Notification\";\r\nimport { GetUserAuth } from \"../../../../DjangoService/authnService\";\r\nconst text = (\r\n  <div\r\n    style={{\r\n      fontSize: \"16px\",\r\n      padding: \"10px\",\r\n      fontWeight: \"600\",\r\n      color: \"rgb(37 32 69)\",\r\n    }}\r\n  >\r\n    <MessageTwoTone twoToneColor=\"#0a304e\" /> Message\r\n  </div>\r\n);\r\nconst content = (\r\n  <div>\r\n    <p>Content</p>\r\n    <p>Content</p>\r\n  </div>\r\n);\r\nexport default class DMSHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.settingRef = React.createRef();\r\n    this.compteRef = React.createRef();\r\n    this.state = {\r\n      drawarSetting: true,\r\n      userDatas: [],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { onSearch, userPhoto, goto } = this.props;\r\n    const { userDatas } = this.state;\r\n    return (\r\n      <>\r\n        <Setting\r\n          ref={this.settingRef}\r\n          visible={(valeur) => {\r\n            this.setState({ drawarSetting: valeur });\r\n            this.props.Drawervisible(valeur);\r\n          }}\r\n          hostStorage={this.props.hostStorage}\r\n        />\r\n        <Compte\r\n          goto={(link) => goto(link)}\r\n          ref={this.compteRef}\r\n          profil={userPhoto}\r\n          user={this.props.user}\r\n          hostStorage={this.props.hostStorage}\r\n          visible={(valeur) => {\r\n            // this.setState({ drawarSetting: valeur });\r\n            // this.props.Drawervisible(valeur);\r\n          }}\r\n        />\r\n        <Layout.Header\r\n          className=\"header\"\r\n          style={{\r\n            padding: \"0px\",\r\n            paddingRight: this.state.drawarSetting ? \"8px\" : \"358px\",\r\n            position: \"fixed\",\r\n            zIndex: 3,\r\n            height: \"48px\",\r\n            lineHeight: \"48px\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <Row justify=\"space-between\" align=\"middle\" wrap={false}>\r\n            <Col\r\n              flex=\"80px\"\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                // width: \"500px\",\r\n              }}\r\n            >\r\n              <svg\r\n                version=\"1.1\"\r\n                style={{\r\n                  width: \"28px\",\r\n                  height: \"28px\",\r\n                }}\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 100 110.6\"\r\n              >\r\n                <g fill=\"#fff\">\r\n                  <path\r\n                    d=\"M91,38.8L53.8,1.6c-2.1-2.1-5.5-2.1-7.6,0l-8.5,8.5l41,41c5.2,5.2,5.2,13.7,0,19L59.5,89.2\r\n\t\tc-5.2,5.2-13.7,5.2-19,0L21.3,70c-5.2-5.2-5.2-13.7,0-19l16.3-16.3L25.3,22.4L9,38.8c-12,12-12,31.6,0,43.6l19.2,19.2\r\n\t\tc12,12,31.6,12,43.6,0L91,82.4C103,70.3,103,50.8,91,38.8z\"\r\n                  />\r\n                  <path\r\n                    d=\"M52.5,70l8.1-8.1c1.2-1.2,1.2-3.1,0-4.3L50.4,47.5L40.2,57.7c-1.2,1.2-1.2,3.1,0,4.3l8.1,8.1\r\n\t\tC49.4,71.1,51.3,71.1,52.5,70z\"\r\n                  />\r\n                </g>\r\n              </svg>\r\n            </Col>{\" \"}\r\n            <Col\r\n              flex=\"auto\"\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"start\",\r\n                // paddingLeft: \"20px\",\r\n              }}\r\n            >\r\n              <div style={{ width: \"539px\" }}>\r\n                <Input\r\n                  prefix={<SearchOutlined style={{ color: \"#bbb\" }} />}\r\n                  placeholder=\"Search\"\r\n                  enterButton\r\n                  onSearch={onSearch}\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col flex=\"auto\">\r\n              <Row align=\"top\" justify=\"end\">\r\n                <Space size={0}>\r\n                  <Button\r\n                    type=\"link\"\r\n                    icon={<SettingOutlined className={\"header-icon-color\"} />}\r\n                    size={\"large\"}\r\n                    onClick={() => {\r\n                      this.settingRef.current.showDrawer();\r\n                      console.log(\"\", this.settingRef.current.state.visible);\r\n                      this.setState({\r\n                        drawarSetting: this.settingRef.current.state.visible,\r\n                      });\r\n                    }}\r\n                    className=\"trigger\"\r\n                  />\r\n                  <Popover\r\n                    className=\"header-menu\"\r\n                    placement=\"bottomLeft\"\r\n                    title={text}\r\n                    content={<Message userPhoto={userPhoto} />}\r\n                    trigger=\"click\"\r\n                  >\r\n                    <Button\r\n                      type=\"link\"\r\n                      icon={\r\n                        <Badge\r\n                          className=\"site-badge-count-109\"\r\n                          count={7}\r\n                          size=\"small\"\r\n                          style={{ backgroundColor: \"#52c41a\" }}\r\n                        >\r\n                          <MessageOutlined className={\"header-icon-color\"} />\r\n                        </Badge>\r\n                      }\r\n                      size={\"large\"}\r\n                      className=\"trigger\"\r\n                    />{\" \"}\r\n                  </Popover>\r\n                  {/* <Dropdown overlay={MenuUser} trigger={[\"click\"]}> */}\r\n                  <Popover\r\n                    className=\"header-menu\"\r\n                    placement=\"bottomLeft\"\r\n                    title={\r\n                      <div\r\n                        style={{\r\n                          fontSize: \"16px\",\r\n                          padding: \"10px\",\r\n                          fontWeight: \"600\",\r\n                          color: \"rgb(37 32 69)\",\r\n                        }}\r\n                      >\r\n                        <BellTwoTone twoToneColor=\"#0a304e\" /> Notifications\r\n                      </div>\r\n                    }\r\n                    content={<Notification />}\r\n                    trigger=\"click\"\r\n                  >\r\n                    {\" \"}\r\n                    <Button\r\n                      type=\"link\"\r\n                      icon={\r\n                        <Badge size=\"small\" count={5}>\r\n                          <BellOutlined className={\"header-icon-color\"} />\r\n                        </Badge>\r\n                      }\r\n                      size={\"large\"}\r\n                      className=\"trigger\"\r\n                    />\r\n                  </Popover>\r\n                  {/* </Dropdown> */}\r\n                  <Typography.Text\r\n                    className={\"header-icon-color\"}\r\n                    style={{\r\n                      paddingRight: \"12px\",\r\n                      paddingLeft: \"8px\",\r\n                    }}\r\n                  >\r\n                    HI! {!!this.props.user && this.props.user.username}\r\n                  </Typography.Text>\r\n                  <Badge\r\n                    status=\"success\"\r\n                    offset={[-5, 29]}\r\n                    className=\"template-dms-badge template-avatar\"\r\n                  >\r\n                    <Avatar\r\n                      src={\r\n                        <Image\r\n                          preview={false}\r\n                          src={\r\n                            !!this.props.user &&\r\n                            this.props.user.MUTPHOTOS != null\r\n                              ? this.props.user.MUTPHOTOS\r\n                              : userPhoto\r\n                          }\r\n                        />\r\n                      }\r\n                      size={32}\r\n                      onClick={() => {\r\n                        this.compteRef.current.showDrawer();\r\n                        // console.log(\"\", this.settingRef.current.state.visible);\r\n                        // this.setState({\r\n                        //   drawarSetting: this.settingRef.current.state.visible,\r\n                        // });\r\n                      }}\r\n                      icon={<UserOutlined />}\r\n                    />\r\n                  </Badge>\r\n                </Space>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Layout.Header>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  PrinterOutlined,\r\n  ReloadOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  LeftOutlined,\r\n  RightOutlined,\r\n  HomeOutlined,\r\n  FileSearchOutlined,\r\n  FileAddOutlined,\r\n  // IdcardOutlined,\r\n} from \"@ant-design/icons\";\r\n// import { showConfirm } from \"../Dialogue/Dialogue\";\r\nimport { Breadcrumb, Button, Col, Menu, Row, Space, message } from \"antd\";\r\nimport { Modal } from \"antd\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport { DatePicker } from \"dmsui\";\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item>\r\n      <a\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        href=\"http://www.alipay.com/\"\r\n      >\r\n        General\r\n      </a>\r\n    </Menu.Item>\r\n    <Menu.Item>\r\n      <a\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        href=\"http://www.taobao.com/\"\r\n      >\r\n        Layout\r\n      </a>\r\n    </Menu.Item>\r\n    <Menu.Item>\r\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.tmall.com/\">\r\n        Navigation\r\n      </a>\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\nconst { confirm } = Modal;\r\nexport default class TabsHeader extends Component {\r\n  static propTypes = {\r\n    prop: PropTypes,\r\n    kkk: PropTypes,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      index: 0,\r\n      length: 0,\r\n      dateFinDesactiver: null,\r\n    };\r\n  }\r\n  showConfirm(title, icon, content, onOk, onCancel) {\r\n    confirm({\r\n      title: title,\r\n      icon: icon,\r\n      content: content,\r\n      onOk() {\r\n        onOk != null && onOk();\r\n      },\r\n      onCancel() {\r\n        onCancel != null && onCancel();\r\n      },\r\n    });\r\n  }\r\n  goBack() {\r\n    const { history } = this.props;\r\n    history.current.history.goBack();\r\n    this.setState({\r\n      index: history.current.history.index,\r\n      length: history.current.history.length,\r\n    });\r\n  }\r\n  goForward() {\r\n    const { history } = this.props;\r\n    history.current.history.goForward();\r\n    this.setState({\r\n      index: history.current.history.index,\r\n      length: history.current.history.length,\r\n    });\r\n  }\r\n\r\n  goTo(link) {\r\n    console.log(\"------------------debut-GoTo-\" + link + \"------------------\");\r\n    const { history } = this.props;\r\n\r\n    history.current.history.push(link);\r\n    console.log(\"Location courante => :\", history.current.history.location);\r\n    this.setState({\r\n      index: history.current.history.index,\r\n      length: history.current.history.length,\r\n    });\r\n    console.log(\"-------------------fin-GoTo-\" + link + \"-------------------\");\r\n  }\r\n  onChange = (value, dateString) => {\r\n    console.log(\"Selected Time: \", value);\r\n    console.log(\r\n      \"Formatted Selected Time: \",\r\n      dateString,\r\n      this.state.dateFinDesactiver\r\n    );\r\n    this.setState({ dateFinDesactiver: dateString });\r\n  };\r\n\r\n  onOk(value) {\r\n    console.log(\"onOk: \", value);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      history,\r\n      validerformulaire,\r\n      disableFValiditer,\r\n      onReset,\r\n      onSubmit,\r\n      activerUpdate,\r\n      disabelEditButton,\r\n      removeElem,\r\n      route,\r\n    } = this.props;\r\n    return (\r\n      <Row align=\"middle\" justify=\"start\">\r\n        <Col span={10} style={{ display: \"flex\", color: \"#fff\" }}>\r\n          <Breadcrumb\r\n            className={\"header-tabs-text-secandary\"}\r\n            // style={{ color: '#999' }}\r\n          >\r\n            {\" \"}\r\n            <Breadcrumb.Item>\r\n              {/* <IdcardOutlined /> */}\r\n              Profile\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item>listes</Breadcrumb.Item>\r\n            <Breadcrumb.Item overlay={menu}>detail</Breadcrumb.Item>\r\n            <Breadcrumb.Item\r\n              className={\"header-tabs-text-primary\"}\r\n              // style={{ color: '#222' }}\r\n            >\r\n              administrateur\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </Col>\r\n        <Col span={14} style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          <Space size={15}>\r\n            <Space size={0}>\r\n              <Button\r\n                icon={<LeftOutlined />}\r\n                className=\"trigger\"\r\n                disabled={\r\n                  history.current != null && history.current.history.index === 0\r\n                    ? true\r\n                    : false\r\n                }\r\n                onClick={() => {\r\n                  if (!validerformulaire) {\r\n                    this.showConfirm(\r\n                      \"Are you sure you want to leave this page?\",\r\n                      <ExclamationCircleOutlined />,\r\n                      \" You will lose all change made.  Press OK to continue, or Cancel to stay on the current page. \",\r\n                      () => {\r\n                        disableFValiditer();\r\n                        this.goBack();\r\n                      },\r\n                      null\r\n                    );\r\n                  } else {\r\n                    this.goBack();\r\n                  }\r\n                }}\r\n              />\r\n              <Button\r\n                icon={<HomeOutlined />}\r\n                className=\"trigger\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                  if (!validerformulaire) {\r\n                    this.showConfirm(\r\n                      \"Are you sure you want to leave this page?\",\r\n                      <ExclamationCircleOutlined />,\r\n                      \" You will lose all change made. Press OK to continue, or Cancel to stay on the current page.\",\r\n                      () => {\r\n                        disableFValiditer();\r\n                        this.goTo(route.search);\r\n                      },\r\n                      null\r\n                    );\r\n                  } else {\r\n                    this.goTo(route.search);\r\n                  }\r\n                }}\r\n              />\r\n              <Button\r\n                icon={<RightOutlined />}\r\n                className=\"trigger\"\r\n                disabled={\r\n                  history.current != null &&\r\n                  history.current.history.index ===\r\n                    history.current.history.length - 1\r\n                    ? true\r\n                    : false\r\n                }\r\n                onClick={() => {\r\n                  if (!validerformulaire) {\r\n                    this.showConfirm(\r\n                      \"Are you sure you want to leave this page?\",\r\n                      <ExclamationCircleOutlined />,\r\n                      \" You will lose all change made.  Press OK to continue, or Cancel to stay on the current page. \",\r\n                      () => {\r\n                        disableFValiditer();\r\n                        this.goForward();\r\n                      },\r\n                      null\r\n                    );\r\n                  } else {\r\n                    this.goForward();\r\n                  }\r\n                }}\r\n              />\r\n            </Space>\r\n            <Space size={0}>\r\n              <Button\r\n                icon={\r\n                  <CheckOutlined\r\n                    style={{ color: validerformulaire ? \"\" : \"#52c41a\" }}\r\n                  />\r\n                }\r\n                className=\"trigger\"\r\n                disabled={validerformulaire}\r\n                onClick={() => {\r\n                  this.showConfirm(\r\n                    \"Are you sure you want to submit?\",\r\n                    <ExclamationCircleOutlined />,\r\n                    \" \",\r\n                    async () => {\r\n                      // loading(true);\r\n                      // await delay(750);\r\n                      // loading(false);\r\n                      // success(\"success!\");\r\n                      onSubmit();\r\n                    },\r\n                    null\r\n                  );\r\n                }}\r\n              />\r\n              <Button\r\n                icon={\r\n                  <CloseOutlined\r\n                    style={{ color: validerformulaire ? \"\" : \"#ff4d4f\" }}\r\n                  />\r\n                }\r\n                // className={\"header-tabs-text-primary\"}\r\n                disabled={validerformulaire}\r\n                onClick={() => {\r\n                  disableFValiditer();\r\n                  // CleanInputChange();\r\n                  onReset();\r\n                }}\r\n                className=\"trigger\"\r\n              />\r\n              <Button\r\n                icon={<ReloadOutlined />}\r\n                onClick={() => {\r\n                  message.loading({\r\n                    content: \"Loading...\",\r\n                    duration: 2.5,\r\n                    style: {\r\n                      marginTop: \"6vh\",\r\n                    },\r\n                  });\r\n                }}\r\n                className=\"trigger\"\r\n              />\r\n              <Button\r\n                icon={<FileSearchOutlined />}\r\n                onClick={() => {}}\r\n                className=\"trigger\"\r\n              />\r\n              <Button icon={<PrinterOutlined />} className=\"trigger\" />\r\n              <Button\r\n                icon={<FileAddOutlined />}\r\n                onClick={() => {\r\n                  history.current.history.push(route.create);\r\n                  this.setState({\r\n                    index: history.current.history.index,\r\n                    length: history.current.history.length,\r\n                  });\r\n                }}\r\n                className=\"trigger\"\r\n              />\r\n              <Button\r\n                icon={<EditOutlined />}\r\n                className=\"trigger\"\r\n                disabled={disabelEditButton}\r\n                onClick={() => {\r\n                  // console.log(history.current.history.match);\r\n                  activerUpdate();\r\n                }}\r\n              />\r\n              <Button\r\n                icon={<DeleteOutlined />}\r\n                disabled={disabelEditButton}\r\n                className=\"trigger\"\r\n                onClick={() => {\r\n                  this.showConfirm(\r\n                    \"Are you sure you want to delete this profile?\",\r\n                    <DeleteOutlined style={{ color: \"#ff4d4f\" }} />,\r\n                    <Space direction=\"vertical\" size={12}>\r\n                      <DatePicker\r\n                        showTime\r\n                        onChange={this.onChange}\r\n                        onOk={this.onOk}\r\n                      />{\" \"}\r\n                      This profile will be removed from database. Press OK to\r\n                      continue, or Cancel to stay on the current page.\r\n                    </Space>,\r\n                    () => {\r\n                      const date = this.state.dateFinDesactiver;\r\n                      removeElem(date);\r\n                    },\r\n                    null\r\n                  );\r\n                }}\r\n              />\r\n            </Space>\r\n          </Space>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import { Col, Input, Row, Space } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { AudioOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { Affix, Button } from \"dmsui\";\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nclass Searche extends Component {\r\n  onSearch = (props, value) => {\r\n    // const history = useHistory();\r\n\r\n    console.log(this.props.history);\r\n    this.props.goTo(\"AdvancedSearchPath\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ height: \"100%\", width: \"100%\", paddingTop: \"90px\" }}>\r\n        <Affix\r\n          offsetTop={150}\r\n          style={{ position: \"fixed\", left: \"95%\", top: \"90%\" }}\r\n        >\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"circle\"\r\n            size={\"large\"}\r\n            onClick={() => this.props.goTo(\"CreationPath\")}\r\n            // style={{ width: \"50px\", height: \"50px\" }}\r\n          >\r\n            <PlusOutlined />\r\n          </Button>\r\n        </Affix>\r\n        <Row gutter={[16, 0]} align=\"middle\" justify=\"space-around\">\r\n          <Col span={24}>\r\n            <Space>\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/search3.png\"}\r\n                alt=\"ooo\"\r\n                style={{ width: \"410px\" }}\r\n              />\r\n            </Space>\r\n          </Col>\r\n          <Col span={10}>\r\n            <Input.Search\r\n              placeholder=\"what are you looking for ?\"\r\n              enterButton=\"Search\"\r\n              size=\"large\"\r\n              suffix={suffix}\r\n              onSearch={this.onSearch}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Searche);\r\n","import React, { Component } from \"react\";\r\nimport { Button, DataTable, Space, Tooltip } from \"dmsui\";\r\nimport \"./style.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { DeleteOutlined, InfoOutlined } from \"@ant-design/icons\";\r\nimport axiosInstance from \"../../../../../DjangoService/AuthService\";\r\n\r\nconst data = [];\r\nfor (let i = 1; i <= 100; i++) {\r\n  data.push({\r\n    key: i,\r\n    PF_PRFINT: i + 9,\r\n    PF_LIBPRF: \"libele\",\r\n    PF_APPLI: \"application\",\r\n    PF_LANGUE: `francer`,\r\n    PF_NIVACC: `${i}2`,\r\n  });\r\n}\r\n\r\nconst expandable = {\r\n  expandedRowRender: (record) => <p>{record.description}</p>,\r\n};\r\nconst pagination = { position: \"bottom\" };\r\nconst vueSysteme = [];\r\nfor (let i = 1; i <= 1; i++) {\r\n  vueSysteme.push({\r\n    titre: \"Vue systéme \" + i,\r\n    check: true,\r\n  });\r\n}\r\nconst vuesPersonnalises = [];\r\nfor (let i = 1; i <= 3; i++) {\r\n  vuesPersonnalises.push({\r\n    titre: \"Vues personnalisés \" + i,\r\n    check: false,\r\n  });\r\n}\r\nclass Results extends Component {\r\n  state = {\r\n    bordered: false,\r\n    loading: false,\r\n    pagination,\r\n    columns: [\r\n      {\r\n        title: \"MPRLIBCOUR\",\r\n        dataIndex: \"MPRLIBCOUR\",\r\n        ellipsis: {\r\n          showTitle: false,\r\n        },\r\n        render: (PF_LIBPRF) => (\r\n          <Tooltip placement=\"topLeft\" title={PF_LIBPRF}>\r\n            {PF_LIBPRF}\r\n          </Tooltip>\r\n        ),\r\n      },\r\n      {\r\n        title: \"MPRLIBLONG\",\r\n        dataIndex: \"MPRLIBLONG\",\r\n        sorter: (a, b) => a.age - b.age,\r\n      },\r\n      {\r\n        title: \"MPRNIVACC\",\r\n        dataIndex: \"MPRNIVACC\",\r\n        filters: [\r\n          {\r\n            text: \"francer\",\r\n            value: \"francer\",\r\n          },\r\n          {\r\n            text: \"English\",\r\n            value: \"English\",\r\n          },\r\n        ],\r\n        onFilter: (value, record) => record.PF_LANGUE.indexOf(value) === 0,\r\n      },\r\n      {\r\n        title: \"MPRPRFEXT\",\r\n        dataIndex: \"MPRPRFEXT\",\r\n      },\r\n      {\r\n        title: \" \",\r\n        key: \"action\",\r\n        // fixed: \"right\",\r\n        width: 100,\r\n        // sorter: true,\r\n        render: (_, record) => (\r\n          <Space\r\n            size=\"middle\"\r\n            style={{ display: \"flex\", justifyContent: \"start\" }}\r\n          >\r\n            <Button\r\n              className={\"dms-button-info dms-button dms\"}\r\n              onClick={() => console.log(\"see\", record.PF_PRFINT)}\r\n              shape=\"circle\"\r\n              onClick={() => this.props.goTo(\"UpdatePath/\" + record.PF_PRFINT)}\r\n              icon={<InfoOutlined />}\r\n              size=\"small\"\r\n            />\r\n            {/* <Button\r\n              className={\"dms-button-valide dms-button dms\"}\r\n              onClick={() => console.log(\"edit\", record.PF_PRFINT)}\r\n              shape=\"circle\"\r\n              icon={<EditOutlined />}\r\n              size=\"small\"\r\n            /> */}\r\n            <Button\r\n              className={\"dms-button-error dms-button dms\"}\r\n              shape=\"circle\"\r\n              icon={<DeleteOutlined />}\r\n              onClick={() => console.log(\"delete\", record.PF_PRFINT)}\r\n              size=\"small\"\r\n            />\r\n            {/* <Button className='ant-dropdown-link'>More actions</Button> */}\r\n          </Space>\r\n        ),\r\n      },\r\n    ],\r\n    datass: [],\r\n    expandable,\r\n    showHeader: true,\r\n    rowSelection: {},\r\n    scroll: undefined,\r\n    hasData: true,\r\n    tableLayout: undefined,\r\n    top: \"none\",\r\n    bottom: \"bottomRight\",\r\n  };\r\n  componentDidMount() {\r\n    this.getData();\r\n    this.getColumn();\r\n  }\r\n  async getData() {\r\n    try {\r\n      // const { result } = await this.props.services.getDatas();\r\n      console.log(\"resulta:\", this.props.service);\r\n      // this.setState({ datass: result });\r\n      await axiosInstance\r\n        .get(this.props.service, {\r\n          headers: {\r\n            Authorization: `Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjIyODQzODUwLCJqdGkiOiJiNzE3NjVkYjZhYmM0MWNmYWQ0ZGFmMWE3N2I0NTBmOSIsInVzZXJfaWQiOjIzLCJNVVRQUk9GSUQiOnsiSURfUk9XSUQiOjEsIkRDUkUiOiIyMDIxLTA2LTAyVDE2OjU2OjA0WiIsIkRNQUoiOiIyMDIxLTA2LTAyVDE2OjU2OjA4WiIsIk1QUlBSRkVYVCI6IkFVVEgwMDEiLCJNUFJMSUJMT05HIjoiQVVUSEFETUlOIiwiTVBSTElCQ09VUiI6ImFkbSIsIk1QUk5JVkFDQyI6MSwiVVRJTCI6bnVsbH19.1-Bvlo6RW2AWON1Dbs5DUtZSjIyk_s_fyhDY2hrPS74`, //  localStorage.getItem(\"access_token\")\r\n            //  ? `Bearer ${localStorage.getItem(\"access_token\")}`\r\n            //  : null,\r\n\r\n            // ? \"JWT \" + localStorage.getItem(\"access_token\")\r\n            // : null,\r\n            \"Content-Type\": \"application/json\",\r\n            accept: \"application/json\",\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(\"app    =>   : \", res.data);\r\n          this.setState({ datass: res.data });\r\n          //console.log(res);\r\n          //console.log(res.data);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"error2 :\", error);\r\n    }\r\n  }\r\n  async getColumn() {\r\n    try {\r\n      // const Column = await this.props.services.getColumn();\r\n      // console.log(\"Column:\", Column);\r\n      // const columns = [];\r\n      // Column.map((col) => columns.push(col));\r\n      // columns.push(...this.state.columns);\r\n      // this.setState({ columns });\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n    }\r\n  }\r\n  render() {\r\n    const { xScroll, yScroll, ...state } = this.state;\r\n    const scroll = {};\r\n    if (yScroll) {\r\n      scroll.y = 240;\r\n    }\r\n    if (xScroll) {\r\n      scroll.x = \"100vw\";\r\n    }\r\n\r\n    const tableColumns = this.state.columns.map((item) => ({\r\n      ...item,\r\n      ellipsis: state.ellipsis,\r\n    }));\r\n    if (xScroll === \"fixed\") {\r\n      tableColumns[0].fixed = true;\r\n      tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n    }\r\n    return (\r\n      <div style={{ height: \"100vh\", width: \"100%\" }}>\r\n        <DataTable\r\n          className=\"template-dms\"\r\n          {...this.state}\r\n          vues={{\r\n            vueSysteme: vueSysteme,\r\n            vuesPersonnalises: vuesPersonnalises,\r\n          }}\r\n          size=\"small\"\r\n          // pagination={{ position: [this.state.top, this.state.bottom] }}\r\n          columns={tableColumns}\r\n          dataSource={state.hasData ? this.state.datass : null}\r\n          scroll={scroll}\r\n          // pagination={{ pageSize: 50 }}\r\n          scroll={{ y: 400 }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Results);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Col,\r\n  Divider,\r\n  // Image,\r\n  Input,\r\n  Row,\r\n  // Typography,\r\n  message,\r\n  ConfigProvider,\r\n} from \"antd\";\r\nimport { Form, Spin, Tab, Tabs } from \"dmsui\";\r\nimport { withRouter } from \"react-router-dom\";\r\n// import { useParams } from \"react-router-dom\";\r\n// import TabInput from \"./TabFormulaire/TabInput\";\r\nimport TabTable from \"./TabFormulaire/TabTable\";\r\n// import { FormInput } from \"./FormInput\";\r\nconst { TabPane } = Tabs;\r\n// import { useRouter } from \"next/router\";\r\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\r\nconst withRouterAndRef = (WrappedComponent) => {\r\n  class InnerComponentWithRef extends React.Component {\r\n    render() {\r\n      const { forwardRef, ...rest } = this.props;\r\n      return <WrappedComponent {...rest} ref={forwardRef} />;\r\n    }\r\n  }\r\n  const ComponentWithRouter = withRouter(InnerComponentWithRef, {\r\n    withRef: true,\r\n  });\r\n  return React.forwardRef((props, ref) => {\r\n    return <ComponentWithRouter {...props} forwardRef={ref} />;\r\n  });\r\n};\r\nconst typeTemplate = \"Le champ ${label} is not a valid ${type}\";\r\nconst validateMessages = {\r\n  required: \"Le champ ${label} is Required!\",\r\n  default: \"Validation error on field '${name}'\",\r\n  enum: \"Le champ ${label} must be one of [${enum}]\",\r\n  whitespace: \"Le champ ${label} cannot be empty\",\r\n  date: {\r\n    format: \"Le champ ${label} is invalid for format date\",\r\n    parse: \"Le champ ${label} could not be parsed as date\",\r\n    invalid: \"Le champ ${label} is invalid date\",\r\n  },\r\n  types: {\r\n    string: typeTemplate,\r\n    method: typeTemplate,\r\n    array: typeTemplate,\r\n    object: typeTemplate,\r\n    number: typeTemplate,\r\n    date: typeTemplate,\r\n    boolean: typeTemplate,\r\n    integer: typeTemplate,\r\n    float: typeTemplate,\r\n    regexp: typeTemplate,\r\n    email: typeTemplate,\r\n    url: typeTemplate,\r\n    hex: typeTemplate,\r\n  },\r\n  string: {\r\n    len: \"Le champ ${label} must be exactly ${len} characters\",\r\n    min: \"Le champ ${label} must be at least ${min} characters\",\r\n    max: \"Le champ ${label} cannot be longer than ${max} characters\",\r\n    range: \"Le champ ${label} must be between ${min} and ${max} characters\",\r\n  },\r\n  number: {\r\n    len: \"Le champ ${label} must equal ${len}\",\r\n    min: \"Le champ ${label} cannot be less than ${min}\",\r\n    max: \"Le champ ${label} cannot be greater than ${max}\",\r\n    range: \"Le champ ${label} must be between ${min} and ${max}\",\r\n  },\r\n  array: {\r\n    len: \"Le champ ${label} must be exactly ${len} in length\",\r\n    min: \"Le champ ${label} cannot be less than ${min} in length\",\r\n    max: \"Le champ ${label} cannot be greater than ${max} in length\",\r\n    range: \"Le champ ${label} must be between ${min} and ${max} in length\",\r\n  },\r\n  pattern: {\r\n    mismatch: \"Le champ ${label} does not match pattern ${pattern}\",\r\n  },\r\n};\r\n// const { Option } = Select;\r\n// const layout = {\r\n//   labelCol: {\r\n//     span: 4,\r\n//   },\r\n//   wrapperCol: {\r\n//     span: 14,\r\n//   },\r\n// };\r\n// const tailLayout = {\r\n//   wrapperCol: {\r\n//     offset: 14,\r\n//     span: 4,\r\n//   },\r\n// };\r\nclass Formulaire extends Component {\r\n  static propTypes = {\r\n    prop: PropTypes,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      changecome: false,\r\n      loading: false,\r\n      form: {},\r\n      datas: { US_EMAIL: \"\", US_NOMUSR: \"\", US_PRNUSR: \"\", US_TYPUSR: \"\" },\r\n    };\r\n  }\r\n  formRef = React.createRef();\r\n  onGenderChange = (value) => {\r\n    switch (value) {\r\n      case \"male\":\r\n        this.formRef.current.setFieldsValue({\r\n          note: \"Hi, man!\",\r\n        });\r\n        return;\r\n\r\n      case \"female\":\r\n        this.formRef.current.setFieldsValue({\r\n          note: \"Hi, lady!\",\r\n        });\r\n        return;\r\n\r\n      case \"other\":\r\n        this.formRef.current.setFieldsValue({\r\n          note: \"Hi theres!\",\r\n        });\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  onFinish = async (values) => {\r\n    // console.log(values);\r\n    this.props.onFormulaireChange(true);\r\n    message\r\n      .loading(\"Action in progress..\", 2.5)\r\n      .then(() => message.success(\"Loading finished\", 2.5))\r\n      .then(() => message.info(\"Loading finished is finished\", 2.5));\r\n    // disableFValiditer();\r\n    await delay(750);\r\n\r\n    this.props.goTo(\"AdvancedSearchPath\");\r\n  };\r\n  onSubmit = () => {\r\n    this.formRef.current.submit();\r\n    console.log(this.formRef.current);\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n    this.setState({ changecome: false });\r\n    // console.log(this.formRef.current);\r\n  };\r\n  onFill = () => {\r\n    this.formRef.current.setFieldsValue({\r\n      note: \"Hello world!\",\r\n      gender: \"male\",\r\n    });\r\n  };\r\n  loading(value) {\r\n    this.setState({ loading: value });\r\n  }\r\n  componentDidMount() {\r\n    console.log(this.props.match.params.id, \"identi\");\r\n    // console.log(\"service formulaire\", this.props.services.gettabs());\r\n  }\r\n  handleInputChange = (event) => {\r\n    if (!this.state.changecome) {\r\n      this.props.onFormulaireChange(false);\r\n      this.setState({ changecome: true });\r\n    }\r\n    // const target = event.target;\r\n    // const value = target.value;\r\n    // const name = target.name;\r\n    // const datas = {\r\n    //   ...this.state.datas,\r\n    //   [name]: value,\r\n    // };\r\n    // this.setState({ datas });\r\n  };\r\n\r\n  CleanInputChange = (event) => {\r\n    this.setState({ changecome: false });\r\n\r\n    this.setState({ datas: {} });\r\n\r\n    console.log(\"datas: \", this.state.datas);\r\n  };\r\n  render() {\r\n    return (\r\n      <div style={{ height: \"100%\", width: \"100%\" }}>\r\n        <Spin spinning={this.state.loading} delay={500}>\r\n          <Row gutter={(16, 16)}>\r\n            <Col span={24}>\r\n              <Row gutter={(16, 16)} justify=\"start\" align=\"stretch\">\r\n                <Col span={2}>\r\n                  <this.props.icon\r\n                    style={{ fontSize: \"675%\", color: \"#2d2650d1\" }}\r\n                  />\r\n                  {/* <Image.PreviewGroup>\r\n                    <Image\r\n                      width={\"75%\"}\r\n                      src=\"https://gw.alipayobjects.com/zos/rmsportal/KDpgvguMpGfqaHPjicRK.svg\"\r\n                    />\r\n                  </Image.PreviewGroup> */}\r\n                </Col>\r\n                <Col\r\n                  span={22}\r\n                  style={{\r\n                    padding: \"5px\",\r\n                  }}\r\n                >\r\n                  <Divider\r\n                    className={\"border-main-content\"}\r\n                    orientation=\"left\"\r\n                    style={{\r\n                      margin: \"-12px 0px\",\r\n                    }}\r\n                  >\r\n                    Information\r\n                  </Divider>{\" \"}\r\n                  <ConfigProvider form={{ validateMessages }}>\r\n                    <Form\r\n                      // {...layout}\r\n                      ref={this.formRef}\r\n                      name=\"control-ref\"\r\n                      onFinish={this.onFinish}\r\n                    >\r\n                      {\" \"}\r\n                      <Row\r\n                        gutter={[10, 0]}\r\n                        className={\"border-main-content-2\"}\r\n                        style={{\r\n                          marginRight: \"-2px\",\r\n                          marginLeft: \"-2px\",\r\n                          padding: \"22px 10px 9px 10px\",\r\n                          borderRadius: \"3px\",\r\n                          borderWidth: \"0px 2px 2px 2px\",\r\n                          borderStyle: \"solid\",\r\n                        }}\r\n                      >\r\n                        {this.props.services.getformulaire().map((input) => (\r\n                          <Col span={input.spann}>\r\n                            <Row gutter={[0, 0]} align=\"stretch\">\r\n                              <Col flex=\"auto\">\r\n                                <Form.Item\r\n                                  style={{ marginBottom: \"10px\" }}\r\n                                  label={input.title}\r\n                                  name={input.dataIndex}\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      max: input.max,\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  {/* {input.spann} */}\r\n                                  <Input onChange={this.handleInputChange} />\r\n                                </Form.Item>\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n                        ))}{\" \"}\r\n                        {/* <Col span={24}>\r\n                          <Row gutter={[0, 0]} align=\"stretch\">\r\n                            <Col flex=\"auto\">\r\n                              <Form.Item\r\n                                label=\"Applications\"\r\n                                style={{ marginBottom: \"10px\" }}\r\n                                name=\"PF_APPLI\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input onChange={this.handleInputChange} />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>{\" \"}\r\n                        <Col span={12}>\r\n                          <Row gutter={[0, 0]} align=\"stretch\">\r\n                            <Col flex=\"auto\">\r\n                              <Form.Item\r\n                                style={{ marginBottom: \"10px\" }}\r\n                                label=\"Langue\"\r\n                                name=\"PF_LANGUE\"\r\n                                rules={[\r\n                                  {\r\n                                    max: 4,\r\n                                    enum: [\"yes\", \"no\"],\r\n                                    required: true,\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input onChange={this.handleInputChange} />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Row gutter={[0, 0]} align=\"stretch\">\r\n                            <Col flex=\"auto\">\r\n                              <Form.Item\r\n                                style={{ marginBottom: \"10px\" }}\r\n                                name=\"PF_NIVACC\"\r\n                                label=\"Niveau accee\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input onChange={this.handleInputChange} />\r\n                              </Form.Item>{\" \"}\r\n                            </Col>\r\n                          </Row>\r\n                        </Col> */}\r\n                      </Row>\r\n                      {/* <Button type=\"primary\" htmlType=\"submit\">\r\n                      Submit\r\n                    </Button> */}\r\n                    </Form>\r\n                  </ConfigProvider>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col span={24}>\r\n              <div>\r\n                <Tabs type=\"card\" className=\"tabs-formulaire dms-tabs\">\r\n                  <TabPane tab={<Tab title={\"Utilisateur\"} />} key=\"1\">\r\n                    <div className={\"template-tabs-panel\"}>\r\n                      <TabTable />\r\n                    </div>\r\n                  </TabPane>\r\n                  {/* <TabPane tab={<Tab title={\"Tab Title 1\"} />} key=\"2\">\r\n                  <div className={\"template-tabs-panel\"}>\r\n                    <TabInput />\r\n                  </div>\r\n                </TabPane> */}\r\n                </Tabs>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouterAndRef(Formulaire);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  DataTable,\r\n  Modal,\r\n  notification,\r\n  Row,\r\n  Space,\r\n  Tooltip,\r\n} from \"dmsui\";\r\nimport \"./style.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { DeleteOutlined, InfoOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  getAllProfiles,\r\n  deleteProfile,\r\n} from \"../../../DjangoService/profileService\";\r\nimport { authApp } from \"../../../config\";\r\nimport { connexion } from \"../../../DjangoService/authnService\";\r\n\r\nconst expandable = {\r\n  expandedRowRender: (record) => <p>{record.description}</p>,\r\n};\r\nconst pagination = { position: \"bottom\" };\r\nconst vueSysteme = [];\r\nfor (let i = 1; i <= 1; i++) {\r\n  vueSysteme.push({\r\n    titre: \"Vue systéme \" + i,\r\n    check: true,\r\n  });\r\n}\r\nconst vuesPersonnalises = [];\r\nfor (let i = 1; i <= 3; i++) {\r\n  vuesPersonnalises.push({\r\n    titre: \"Vues personnalisés \" + i,\r\n    check: false,\r\n  });\r\n}\r\nclass Results extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: \"\",\r\n      token: null,\r\n      Refrech: null,\r\n      bordered: false,\r\n      loading: true,\r\n      pagination,\r\n      model: {\r\n        title: \"\",\r\n        Content: \"\",\r\n        onOk: () => console.log(\"ok\"),\r\n        visible: false,\r\n      },\r\n      columns: [\r\n        {\r\n          title: \"Libellé\",\r\n          dataIndex: \"MPRLIBLONG\",\r\n          sorter: (a, b) => a.age - b.age,\r\n        },\r\n        {\r\n          title: \"Acronyme\",\r\n          dataIndex: \"MPRLIBCOUR\",\r\n          ellipsis: {\r\n            showTitle: false,\r\n          },\r\n          render: (PF_LIBPRF) => (\r\n            <Tooltip placement=\"topLeft\" title={PF_LIBPRF}>\r\n              {PF_LIBPRF}\r\n            </Tooltip>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Code externe\",\r\n          dataIndex: \"MPRPRFEXT\",\r\n        },\r\n        {\r\n          title: \"Niveau d'accès\",\r\n          dataIndex: \"MPRNIVACC\",\r\n          filters: [\r\n            {\r\n              text: \"francer\",\r\n              value: \"francer\",\r\n            },\r\n            {\r\n              text: \"English\",\r\n              value: \"English\",\r\n            },\r\n          ],\r\n          onFilter: (value, record) => record.PF_LANGUE.indexOf(value) === 0,\r\n        },\r\n\r\n        {\r\n          title: \" \",\r\n          key: \"action\",\r\n          // fixed: \"right\",\r\n          width: 100,\r\n          // sorter: true,\r\n          render: (_, record) => (\r\n            <Space\r\n              size=\"middle\"\r\n              style={{ display: \"flex\", justifyContent: \"start\" }}\r\n            >\r\n              <Button\r\n                className={\"dms-button-info dms-button dms\"}\r\n                onClick={() => console.log(\"see\", record.ID_ROWID)}\r\n                shape=\"circle\"\r\n                onClick={() => this.props.goTo(\"UpdatePath/\" + record.ID_ROWID)}\r\n                icon={<InfoOutlined />}\r\n                size=\"small\"\r\n              />\r\n\r\n              <Button\r\n                className={\"dms-button-error dms-button dms\"}\r\n                shape=\"circle\"\r\n                icon={<DeleteOutlined />}\r\n                onClick={() => {\r\n                  this.setState({\r\n                    model: {\r\n                      title: \"Delete profile\",\r\n                      Content:\r\n                        \"do you want to delete profile \" +\r\n                        record.MPRLIBLONG +\r\n                        \" ?\",\r\n                      onOk: async () => {\r\n                        console.log(\"ok\");\r\n                        try {\r\n                          await deleteProfile(\r\n                            this.props.service,\r\n                            record.ID_ROWID\r\n                          );\r\n                          this.handleDelete(record.key);\r\n                          notification.open({\r\n                            message: \"Success\",\r\n                            description: \"This profile is deleted successfully\",\r\n                            className: \"custom-class\",\r\n                            type: \"success\",\r\n                            placement: \"bottomRight\",\r\n                            style: {\r\n                              width: 400,\r\n                            },\r\n                          });\r\n                        } catch (error) {\r\n                          console.log(error);\r\n                          notification.open({\r\n                            message: \"Error\",\r\n                            placement: \"bottomRight\",\r\n                            type: \"error\",\r\n                            description: \"This profile could not be delete.\",\r\n                            className: \"custom-class\",\r\n                            style: {\r\n                              width: 400,\r\n                            },\r\n                          });\r\n                        }\r\n                      },\r\n                      visible: true,\r\n                    },\r\n                  });\r\n                }}\r\n                size=\"small\"\r\n              />\r\n            </Space>\r\n          ),\r\n        },\r\n      ],\r\n      datass: [],\r\n      expandable,\r\n      showHeader: true,\r\n      rowSelection: {},\r\n      scroll: undefined,\r\n      hasData: true,\r\n      tableLayout: undefined,\r\n      top: \"none\",\r\n      bottom: \"bottomRight\",\r\n    };\r\n    this.getToken = this.getToken.bind(this);\r\n    this.getRefrechToken = this.getRefrechToken.bind(this);\r\n  }\r\n  getToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    if (value == null) {\r\n      //  window.location.href = authApp;\r\n      console.log(\"tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ token: value });\r\n    console.log(\"tokne from host => :\", this.state.token);\r\n    console.log(\"-------------------fin-GetToken-------------------\");\r\n    await this.getData();\r\n  };\r\n  getRefrechToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetRefrechToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"403\");\r\n    }\r\n    if (value == null) {\r\n      //  window.location.href = authApp;\r\n      console.log(\"Refech tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ Refrech: value });\r\n    console.log(\"Refech tokne from host => :\", this.state.Refrech);\r\n    console.log(\"-------------------fin-GetRefrechToken-------------------\");\r\n  };\r\n  async componentDidMount() {\r\n    console.log(\"------------------debut-ResultaDeRecherche------------------\");\r\n    const { location } = this.props.history;\r\n\r\n    var search = \"\";\r\n    if (location.search != \"\") {\r\n      search = location.search.slice(1).split(\"?\")[0].split(\"search=\")[1];\r\n    }\r\n    this.setState({ search: search });\r\n    console.log(\"Valeur de recherche => :\", search);\r\n    console.log(\"-------------------fin-ResultaDeRecherche-------------------\");\r\n    // var createGuest = require(\"cross-domain-storage/guest\");\r\n    // var bazStorage = createGuest(authApp);\r\n    this.props.hostStorage.get(\"refresh_token\", await this.getRefrechToken);\r\n    this.props.hostStorage.get(\"access_token\", await this.getToken);\r\n\r\n    // this.getColumn();\r\n  }\r\n  handleDelete = (key) => {\r\n    const dataSource = [...this.state.datass];\r\n    this.setState({\r\n      datass: dataSource.filter((item) => item.key !== key),\r\n    });\r\n  };\r\n  async getData() {\r\n    console.log(\"------------------debut-GetProfile------------------\");\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n      // () => this.getData()\r\n    );\r\n    // );\r\n\r\n    try {\r\n      const res = await getAllProfiles(\r\n        this.props.service,\r\n        this.state.search,\r\n        !!verifyToken ? verifyToken : this.state.token\r\n      );\r\n      console.log(\"succes from api : profile (getAll()) => :\", res);\r\n      res.data != null &&\r\n        res.data.map((data, index) => {\r\n          Object.assign(data, {\r\n            key: index,\r\n          });\r\n        });\r\n      this.setState({\r\n        datass: res.data != null ? res.data : [],\r\n        loading: false,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error  :  GetProfiles  => : \", error);\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"500\");\r\n      }\r\n    }\r\n    console.log(\"-------------------fin-GetProfile-------------------\");\r\n  }\r\n  render() {\r\n    const { xScroll, yScroll, ...state } = this.state;\r\n    const scroll = {};\r\n    if (yScroll) {\r\n      scroll.y = 240;\r\n    }\r\n    if (xScroll) {\r\n      scroll.x = \"100vw\";\r\n    }\r\n\r\n    const tableColumns = this.state.columns.map((item) => ({\r\n      ...item,\r\n      ellipsis: state.ellipsis,\r\n    }));\r\n    if (xScroll === \"fixed\") {\r\n      tableColumns[0].fixed = true;\r\n      tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n    }\r\n    return (\r\n      <div style={{ height: \"100%\", width: \"100%\" }}>\r\n        <Row justify=\"center\">\r\n          <Col span={24} style={{ height: \"587px\", backgroundColor: \"#fff\" }}>\r\n            <Modal\r\n              title={this.state.model.title}\r\n              centered\r\n              visible={this.state.model.visible}\r\n              onOk={() => {\r\n                this.state.model.onOk();\r\n                this.setState({\r\n                  model: {\r\n                    title: \"\",\r\n                    Content: \"\",\r\n                    onOk: console.log(\"ok\"),\r\n                    visible: false,\r\n                  },\r\n                });\r\n                // setVisible(false);\r\n              }}\r\n              onCancel={() =>\r\n                this.setState({\r\n                  model: {\r\n                    title: \"\",\r\n                    Content: \"\",\r\n                    onOk: console.log(\"ok\"),\r\n                    visible: false,\r\n                  },\r\n                })\r\n              }\r\n              width={400}\r\n            >\r\n              {this.state.model.Content}\r\n            </Modal>\r\n            <DataTable\r\n              className=\"template-dms\"\r\n              {...this.state}\r\n              vues={{\r\n                vueSysteme: vueSysteme,\r\n                vuesPersonnalises: vuesPersonnalises,\r\n              }}\r\n              size=\"small\"\r\n              columns={tableColumns}\r\n              dataSource={state.hasData ? this.state.datass : null}\r\n              scroll={scroll}\r\n              scroll={{ y: 417 }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Results);\r\n","import { Col, Layout, Row } from \"antd\";\r\nimport React from \"react\";\r\nimport { Button, Drawer, Tab, Tabs } from \"dmsui\";\r\nimport TabsHeader from \"./TabsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport DMSRoute from \"./Route\";\r\nconst { TabPane } = Tabs;\r\nconst { Content } = Layout;\r\nclass DMSContent extends React.Component {\r\n  static propTypes = {\r\n    prop: PropTypes,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.newTabIndex = 0;\r\n    this.routeRef = React.createRef();\r\n    this.refHeader = React.createRef();\r\n    const panes = [];\r\n    this.state = {\r\n      titre: \"\",\r\n      content: \"\",\r\n      enClose: null,\r\n      width: 350,\r\n      activeKey: panes[0] != null ? panes[0].key : null,\r\n      panes,\r\n      refs: \"[]\",\r\n      validerformulaire: true,\r\n      disabelEditButton: true,\r\n      history: this.routeRef,\r\n      visible: false,\r\n    };\r\n  }\r\n  // componentDidMount() {\r\n  //   const refstmp = [];\r\n  //   this.state.panes !== [] &&\r\n  //     this.state.panes.map((data, index) => {\r\n  //       const routeRef = React.createRef();\r\n  //       const refHeader = React.createRef();\r\n  //       refstmp.push({ routeRef: routeRef, refHeader: refHeader });\r\n  //     });\r\n  //   this.setState({ refs: refstmp });\r\n  //   console.log(\"refs :\", this.state.refs, refstmp);\r\n  // }\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n      titre: \"\",\r\n      content: \"\",\r\n    });\r\n    if (!!this.state.enClose) this.state.enClose();\r\n  };\r\n  onChange = (activeKey) => {\r\n    this.setState({ activeKey });\r\n  };\r\n\r\n  onEdit = (targetKey, action) => {\r\n    this[action](targetKey);\r\n  };\r\n\r\n  add = (titre, icon, contenu, key, services, service, composant) => {\r\n    const { panes } = this.state;\r\n    const activeKey = key + \"\";\r\n\r\n    const existKey = panes.some(function (el) {\r\n      return el.key === activeKey;\r\n    });\r\n\r\n    if (!existKey) {\r\n      panes.push({\r\n        title: titre,\r\n        content: contenu,\r\n        key: activeKey,\r\n        icon: icon,\r\n        services: services,\r\n        service: service,\r\n        composant: composant,\r\n        routeRef: React.createRef(),\r\n        refHeader: React.createRef(),\r\n      });\r\n      this.setState({ panes, activeKey });\r\n    } else this.setState({ activeKey });\r\n  };\r\n\r\n  remove = (targetKey) => {\r\n    const { panes, activeKey } = this.state;\r\n    let newActiveKey = activeKey;\r\n    let lastIndex;\r\n    panes.forEach((pane, i) => {\r\n      if (pane.key === targetKey) {\r\n        lastIndex = i - 1;\r\n      }\r\n    });\r\n    const newPanes = panes.filter((pane) => pane.key !== targetKey);\r\n    if (newPanes.length && newActiveKey === targetKey) {\r\n      if (lastIndex >= 0) {\r\n        newActiveKey = newPanes[lastIndex].key;\r\n      } else {\r\n        newActiveKey = newPanes[0].key;\r\n      }\r\n    }\r\n    this.setState({\r\n      panes: newPanes,\r\n      activeKey: newActiveKey,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ height: \"100%\" }}>\r\n        <Tabs\r\n          style={{ height: \"100%\" }}\r\n          hideAdd\r\n          className=\"dms-tabs\"\r\n          onChange={this.onChange}\r\n          activeKey={this.state.activeKey}\r\n          type=\"iconic-closable\"\r\n          onEdit={this.onEdit}\r\n        >\r\n          {this.state.panes !== [] &&\r\n            this.state.panes.map((pane) => (\r\n              <TabPane\r\n                tab={\r\n                  <Tab\r\n                    title={pane.title}\r\n                    icon={<pane.icon />}\r\n                    onClose={(e) => this.onEdit(pane.key, \"remove\")}\r\n                  />\r\n                }\r\n                key={pane.key}\r\n              >\r\n                <Content\r\n                  className=\"content-tab\"\r\n                  style={{\r\n                    margin: \"0px 0px 0\",\r\n                    height: \"84vh\",\r\n                    overflow: \"initial\",\r\n                    borderRadius: \"2px\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"site-layout-background\"\r\n                    style={{ textAlign: \"center\" }}\r\n                  >\r\n                    <Row\r\n                      className={\"header-tab\"}\r\n                      style={{\r\n                        padding: \"10px\",\r\n                        margin: \"0px 0px\",\r\n\r\n                        borderRadius: \"4px 4px 0px 0px\",\r\n                      }}\r\n                    >\r\n                      <Col span={24}>\r\n                        <TabsHeader\r\n                          ref={pane.refHeader}\r\n                          route={\r\n                            pane.routeRef.current != null\r\n                              ? pane.routeRef.current.Route\r\n                              : {\r\n                                  search: \"HomeSearchPath\",\r\n                                  create: \"CreationPath\",\r\n                                  update: \"UpdatePath/\",\r\n                                  result: \"AdvancedSearchPath\",\r\n                                }\r\n                          }\r\n                          disableFValiditer={() =>\r\n                            this.setState({ validerformulaire: true })\r\n                          }\r\n                          disabelEditButton={this.state.disabelEditButton}\r\n                          activerUpdate={() =>\r\n                            pane.routeRef.current.activerUpdate()\r\n                          }\r\n                          onSubmit={() => pane.routeRef.current.onSubmit()}\r\n                          onReset={() => {\r\n                            pane.routeRef.current.onReset();\r\n                          }}\r\n                          CleanInputChange={() =>\r\n                            pane.routeRef.current.CleanInputChange()\r\n                          }\r\n                          loading={(value) =>\r\n                            pane.routeRef.current.loadingFormulaire(value)\r\n                          }\r\n                          validerformulaire={this.state.validerformulaire}\r\n                          history={pane.routeRef}\r\n                          removeElem={(datefin) =>\r\n                            pane.routeRef.current.removeElem(datefin)\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <div\r\n                      className=\"site-drawer-render-in-current-wrapper\"\r\n                      style={{ height: \"100%\", overflow: \"hidden\" }}\r\n                    >\r\n                      <Row\r\n                        // gutter={[16, 16]}\r\n                        align=\"stretch\"\r\n                        style={{\r\n                          height: \"81vh\",\r\n                          // '547px',\r\n                          margin: \"0px 1px\",\r\n                          alignContent: \"center\",\r\n                          overflowY: \"auto\",\r\n                          overflowX: \"inherit\",\r\n                        }}\r\n                      >\r\n                        <Col\r\n                          span={24}\r\n                          style={{\r\n                            height: \"100%\",\r\n                            width: \"100%\",\r\n                            padding: \"10px\",\r\n                          }}\r\n                        >\r\n                          <Drawer\r\n                            className=\"demimask\"\r\n                            style={{ height: \"100%\" }}\r\n                            title={this.state.titre}\r\n                            placement=\"right\"\r\n                            closable={false}\r\n                            width={this.state.width}\r\n                            onClose={this.onClose}\r\n                            visible={this.state.visible}\r\n                            getContainer={false}\r\n                            style={{ position: \"absolute\" }}\r\n                          >\r\n                            {this.state.content}\r\n                          </Drawer>{\" \"}\r\n                          <pane.composant\r\n                            showDrawer={this.showDrawer}\r\n                            closeDrawer={() => this.onClose()}\r\n                            setDrawerState={(titre, content, width, enClose) =>\r\n                              this.setState({\r\n                                titre: titre,\r\n                                content: content,\r\n                                width: width,\r\n                                enClose: () => enClose(),\r\n                              })\r\n                            }\r\n                            services={pane.services}\r\n                            disabelEditButton={(value) =>\r\n                              this.setState({ disabelEditButton: value })\r\n                            }\r\n                            hostStorage={this.props.hostStorage}\r\n                            service={pane.service}\r\n                            icon={pane.icon}\r\n                            goTo={(link) => pane.refHeader.current.goTo(link)}\r\n                            ref={pane.routeRef}\r\n                            onFormulaireChange={(value) =>\r\n                              this.setState({ validerformulaire: value })\r\n                            }\r\n                          />\r\n                          {/* <Affix\r\n                          offsetTop={150}\r\n                          style={{ position: \"fixed\", left: \"95%\", top: \"90%\" }}\r\n                        >\r\n                          <Button\r\n                            type=\"primary\"\r\n                            shape=\"circle\"\r\n                            size={\"large\"}\r\n                            // style={{ width: \"50px\", height: \"50px\" }}\r\n                          >\r\n                            <PlusOutlined />\r\n                          </Button>\r\n                        </Affix> */}\r\n                          {/* <Formulaire />\r\n                        <Results /> <Searche title={pane.title} /> */}\r\n                        </Col>\r\n                      </Row>\r\n                    </div>{\" \"}\r\n                  </div>\r\n                </Content>\r\n              </TabPane>\r\n            ))}\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DMSContent;\r\n","import { Layout } from \"antd\";\r\nimport React from \"react\";\r\n// import './layout.css'\r\nimport \"antd/dist/antd.css\";\r\nimport DMSSlider from \"./Slider\";\r\nimport DMSHeader from \"../Header/Header\";\r\nimport \"./style.css\";\r\n\r\nimport \"../../themes/theme4/theme.css\";\r\nimport DMSContent from \"../content/Content\";\r\n// const { Footer } = Layout\r\n\r\nconst onSearch = (value) => console.log(value);\r\n\r\nexport default class DMSLayout extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.refTabs = React.createRef();\r\n    this.state = {\r\n      collapsed: true,\r\n      drawarSetting: true,\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n  nouvelOnglet(titre, icon, contenu, key, services, service, composant) {\r\n    this.refTabs.current.add(\r\n      titre,\r\n      icon,\r\n      contenu,\r\n      key,\r\n      services,\r\n      service,\r\n      composant\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { logo, userPhoto, minLogo, menu, goto } = this.props;\r\n    return (\r\n      <div\r\n        className=\"default-theme\"\r\n        style={{\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <div\r\n          className=\"dms-layout\"\r\n          style={{\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <Layout\r\n            className=\"layout-principale bck-image\"\r\n            style={{\r\n              marginRight: this.state.drawarSetting ? \"0px\" : \"350px\",\r\n              height: \"100%\",\r\n            }}\r\n            // style={{\r\n            //   backgroundImage: \"url('/bkg.jpg')\",\r\n            //   backgroundSize: 'cover',\r\n            //   backgroundPosition: 'center'\r\n            // }}\r\n          >\r\n            <DMSSlider\r\n              logo={logo}\r\n              menu={menu}\r\n              minLogo={minLogo}\r\n              collapsed={this.state.collapsed}\r\n              hostStorage={this.props.hostStorage}\r\n              nouvelOnglet={(\r\n                titre,\r\n                icon,\r\n                contenu,\r\n                key,\r\n                services,\r\n                service,\r\n                composant\r\n              ) =>\r\n                this.nouvelOnglet(\r\n                  titre,\r\n                  icon,\r\n                  contenu,\r\n                  key,\r\n                  services,\r\n                  service,\r\n                  composant\r\n                )\r\n              }\r\n            />\r\n            <DMSHeader\r\n              goto={(link) => goto(link)}\r\n              userPhoto={userPhoto}\r\n              user={this.props.user}\r\n              hostStorage={this.props.hostStorage}\r\n              collapsed={this.state.collapsed}\r\n              toggle={this.toggle}\r\n              onSearch={onSearch}\r\n              logo={logo}\r\n              Drawervisible={(valeur) =>\r\n                this.setState({ drawarSetting: valeur })\r\n              }\r\n              minLogo={minLogo}\r\n            />\r\n            <Layout\r\n              className=\"site-layout\"\r\n              style={{\r\n                height: \"100%\",\r\n                marginLeft: this.state.collapsed ? 80 : 200,\r\n                paddingTop: 48,\r\n                // paddingBottom: 10,\r\n                display: \"block\",\r\n                overflow: \"auto\",\r\n              }}\r\n            >\r\n              {/* <Affix\r\n              offsetTop={150}\r\n              style={{ position: 'fixed', left: '97%', top: '10%' }}\r\n            >\r\n              <Button\r\n                type='primary'\r\n                shape='round'\r\n                size={'large'}\r\n                //   style={{ backgroundColor: '#001529' }}\r\n              >\r\n                <SettingOutlined />\r\n              </Button>\r\n            </Affix> */}\r\n              <DMSContent\r\n                ref={this.refTabs}\r\n                hostStorage={this.props.hostStorage}\r\n              />\r\n              {/* <Footer\r\n              style={{\r\n                textAlign: 'center',\r\n                backgroundColor: '#ffffff00',\r\n                color: '#fff'\r\n              }}\r\n            >\r\n              Template ©2021 Created by DataMaster\r\n            </Footer> */}\r\n            </Layout>\r\n          </Layout>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Col, Input, Row, Space } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { AudioOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { Affix, Button } from \"dmsui\";\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nclass Searche extends Component {\r\n  onSearch = (value) => {\r\n    console.log(\"------------------debut-onSearch------------------\");\r\n    console.log(\"Rechercher par => :\", value);\r\n    this.props.goTo(\"AdvancedSearchPath?search=\" + value);\r\n    console.log(\"-------------------fin-onSearch-------------------\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div style={{ height: \"100%\", width: \"100%\", paddingTop: \"90px\" }}>\r\n        <Affix\r\n          offsetTop={150}\r\n          style={{ position: \"fixed\", left: \"95%\", top: \"90%\" }}\r\n        >\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"circle\"\r\n            size={\"large\"}\r\n            onClick={() => this.props.goTo(\"CreationPath\")}\r\n            // style={{ width: \"50px\", height: \"50px\" }}\r\n          >\r\n            <PlusOutlined />\r\n          </Button>\r\n        </Affix>\r\n        <Row gutter={[16, 30]} align=\"middle\" justify=\"space-around\">\r\n          <Col span={24}>\r\n            <Space>\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/search3.png\"}\r\n                alt=\"ooo\"\r\n                style={{ width: \"410px\" }}\r\n              />\r\n            </Space>\r\n          </Col>\r\n          <Col span={10}>\r\n            <Input.Search\r\n              placeholder=\"what are you looking for ?\"\r\n              enterButton=\"Search\"\r\n              size=\"large\"\r\n              suffix={suffix}\r\n              onSearch={(e) => this.onSearch(e)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Searche);\r\n","import React, { useImperativeHandle, useState } from \"react\";\r\nimport { Transfer, Tree } from \"antd\";\r\n\r\n// Customize Table Transfer\r\nconst isChecked = (selectedKeys, eventKey) =>\r\n  selectedKeys.indexOf(eventKey) !== -1;\r\n\r\nconst generateTree = (treeNodes = [], checkedKeys = []) =>\r\n  treeNodes.map(({ children, ...props }) => ({\r\n    ...props,\r\n    disabled: checkedKeys.includes(props.key),\r\n    children: generateTree(children, checkedKeys),\r\n  }));\r\n// React.forwardRef((props, ) =>\r\nconst TreeAppMenu = React.forwardRef(\r\n  ({ dataSource, targetKeys, ...restProps }, ref) => {\r\n    //translate code\r\n    useImperativeHandle(ref, () => ({\r\n      gettargetKeys: () => {\r\n        return targetKeys;\r\n      },\r\n    }));\r\n    const transferDataSource = [];\r\n    function flatten(list = []) {\r\n      list.forEach((item) => {\r\n        transferDataSource.push(item);\r\n        flatten(item.children);\r\n      });\r\n    }\r\n    flatten(dataSource);\r\n\r\n    return (\r\n      <Transfer\r\n        {...restProps}\r\n        targetKeys={targetKeys}\r\n        dataSource={transferDataSource}\r\n        className=\"tree-transfer profile\"\r\n        render={(item) => item.title}\r\n        showSelectAll={false}\r\n        style={{ backgroundColor: \"#fff\" }}\r\n      >\r\n        {({ direction, onItemSelect, selectedKeys }) => {\r\n          if (direction === \"left\") {\r\n            const checkedKeys = [...selectedKeys, ...targetKeys];\r\n            return (\r\n              <Tree\r\n                // blockNode\r\n                checkable\r\n                // checkStrictly\r\n                defaultExpandAll={true}\r\n                autoExpandParent={true}\r\n                checkedKeys={checkedKeys}\r\n                treeData={generateTree(dataSource, targetKeys)}\r\n                onCheck={(_, { node: { key } }) => {\r\n                  console.log(targetKeys);\r\n                  if (key.includes(\"app\") || key == \"base\")\r\n                    onItemSelect(key, false);\r\n                  else onItemSelect(key, !isChecked(checkedKeys, key));\r\n                }}\r\n                onSelect={(_, { node: { key } }) => {\r\n                  if (key.includes(\"app\") || key == \"base\")\r\n                    onItemSelect(key, false);\r\n                  else onItemSelect(key, !isChecked(checkedKeys, key));\r\n                }}\r\n              />\r\n            );\r\n          }\r\n        }}\r\n      </Transfer>\r\n    );\r\n  }\r\n);\r\nexport default TreeAppMenu;\r\n","import { domaine } from \"../config\";\r\nimport http from \"./httpService\";\r\nexport const getAllProfiles = (profileApiEndPoint, search, token) => {\r\n  // bazStorage.get(\"access_token\", function (error, value) {\r\n  //   localStorage.setItem(\"access_token\", value);\r\n  // });\r\n  // bazStorage.get(\"refresh_token\", function (error, value) {\r\n  //   localStorage.setItem(\"refresh_token\", value);\r\n  // });\r\n  return http.get(profileApiEndPoint + \"?search=\" + search, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const insertProfile = (profileApiEndPoint, profileObjet, token) => {\r\n  return http.post(domaine + \"DMERP/v1/menusprofile/\", profileObjet, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const getProfileByID = (profileApiEndPoint, id, token) => {\r\n  return http.get(`${profileApiEndPoint}${id}`, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const updateProfile = (profileApiEndPoint, id, profileObjet, token) => {\r\n  return http.put(domaine + \"DMERP/v1/menusprofile/\" + id + \"/\", profileObjet, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteProfile = (profileApiEndPoint, id, token) => {\r\n  return http.delete(`${profileApiEndPoint}${id}`, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const GetApplications = (token) => {\r\n  return http.get(domaine + \"DMERP/v1/applications/\", {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\nexport const GetMenus = (id, token) => {\r\n  return http.get(domaine + \"DMERP/v1/menus/application/\" + id, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Divider, Input, Row, message, ConfigProvider } from \"antd\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  InputNumber,\r\n  notification,\r\n  Spin,\r\n  Typography,\r\n} from \"dmsui\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport TreeAppMenu from \"./TreeAppMenu\";\r\nimport {\r\n  deleteProfile,\r\n  GetApplications,\r\n  GetMenus,\r\n  getProfileByID,\r\n  insertProfile,\r\n  updateProfile,\r\n} from \"../../../DjangoService/profileService\";\r\nimport { authApp } from \"../../../config\";\r\n\r\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\r\nconst withRouterAndRef = (WrappedComponent) => {\r\n  class InnerComponentWithRef extends React.Component {\r\n    render() {\r\n      const { forwardRef, ...rest } = this.props;\r\n      return <WrappedComponent {...rest} ref={forwardRef} />;\r\n    }\r\n  }\r\n  const ComponentWithRouter = withRouter(InnerComponentWithRef, {\r\n    withRef: true,\r\n  });\r\n  return React.forwardRef((props, ref) => {\r\n    return <ComponentWithRouter {...props} forwardRef={ref} />;\r\n  });\r\n};\r\nconst typeTemplate = \"Le champ ${label} is not a valid ${type}\";\r\nconst validateMessages = {\r\n  required: \"Le champ ${label} is Required!\",\r\n  default: \"Validation error on field '${name}'\",\r\n  enum: \"Le champ ${label} must be one of [${enum}]\",\r\n  whitespace: \"Le champ ${label} cannot be empty\",\r\n  date: {\r\n    format: \"Le champ ${label} is invalid for format date\",\r\n    parse: \"Le champ ${label} could not be parsed as date\",\r\n    invalid: \"Le champ ${label} is invalid date\",\r\n  },\r\n  types: {\r\n    string: typeTemplate,\r\n    method: typeTemplate,\r\n    array: typeTemplate,\r\n    object: typeTemplate,\r\n    number: typeTemplate,\r\n    date: typeTemplate,\r\n    boolean: typeTemplate,\r\n    integer: typeTemplate,\r\n    float: typeTemplate,\r\n    regexp: typeTemplate,\r\n    email: typeTemplate,\r\n    url: typeTemplate,\r\n    hex: typeTemplate,\r\n  },\r\n  string: {\r\n    len: \"Le champ ${label} must be exactly ${len} characters\",\r\n    min: \"Le champ ${label} must be at least ${min} characters\",\r\n    max: \"Le champ ${label} cannot be longer than ${max} characters\",\r\n    range: \"Le champ ${label} must be between ${min} and ${max} characters\",\r\n  },\r\n  number: {\r\n    len: \"Le champ ${label} must equal ${len}\",\r\n    min: \"Le champ ${label} cannot be less than ${min}\",\r\n    max: \"Le champ ${label} cannot be greater than ${max}\",\r\n    range: \"Le champ ${label} must be between ${min} and ${max}\",\r\n  },\r\n  array: {\r\n    len: \"Le champ ${label} must be exactly ${len} in length\",\r\n    min: \"Le champ ${label} cannot be less than ${min} in length\",\r\n    max: \"Le champ ${label} cannot be greater than ${max} in length\",\r\n    range: \"Le champ ${label} must be between ${min} and ${max} in length\",\r\n  },\r\n  pattern: {\r\n    mismatch: \"Le champ ${label} does not match pattern ${pattern}\",\r\n  },\r\n};\r\nconst treeData = [\r\n  {\r\n    title: \"Application\",\r\n    key: \"base\",\r\n    children: [\r\n      {\r\n        title: \"Gestion des Alertes\",\r\n        key: \"0-0\",\r\n        children: [\r\n          {\r\n            title: \"Administration\",\r\n            key: \" 17\",\r\n            children: [\r\n              {\r\n                title: \"Application\",\r\n                key: \"1\",\r\n              },\r\n              {\r\n                title: \"Paramétrage\",\r\n                key: \"2\",\r\n              },\r\n              {\r\n                title: \"Département\",\r\n                key: \"3\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            title: \"Tâche\",\r\n            key: \"4\",\r\n          },\r\n          {\r\n            title: \"Workflow\",\r\n            key: \"5\",\r\n          },\r\n          {\r\n            title: \"Traçabilité\",\r\n            key: \"6\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        title: \"Gestion des utilisateurs\",\r\n        key: \"7\",\r\n        children: [\r\n          {\r\n            title: \"Profile\",\r\n            key: \"8\",\r\n          },\r\n          {\r\n            title: \"Utlisateur\",\r\n            key: \"9\",\r\n          },\r\n          {\r\n            title: \"parametrage\",\r\n            key: \"10\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\nclass Formulaire extends Component {\r\n  static propTypes = {\r\n    prop: PropTypes,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      token: null,\r\n      changecome: false,\r\n      loading: true,\r\n      form: {},\r\n      isLoading: this.props.match.params.id != null ? true : false,\r\n      // ii: false,\r\n      targetKeys: [],\r\n      update: this.props.match.params.id != null ? false : true,\r\n      defaultValue: {\r\n        MPRLIBLONG: null,\r\n        MPRLIBCOUR: null,\r\n        MPRPRFEXT: null,\r\n        MPRNIVACC: null,\r\n      },\r\n      datas: { US_EMAIL: \"\", US_NOMUSR: \"\", US_PRNUSR: \"\", US_TYPUSR: \"\" },\r\n      apps: [],\r\n    };\r\n    // this.getDataById = this.getDataById.bind(this);\r\n    this.getToken = this.getToken.bind(this);\r\n  }\r\n  formRef = React.createRef();\r\n  treeRef = React.createRef();\r\n\r\n  activerUpdate() {\r\n    if (this.props.match.params.id != null) {\r\n      this.setState({ update: !this.state.update });\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  onChange = (keys) => {\r\n    this.setState({ targetKeys: keys });\r\n  };\r\n  onFinish = async (values) => {\r\n    console.log(\"------------------debut-Submit------------------\");\r\n    try {\r\n      const targetKey =\r\n        this.treeRef.current.gettargetKeys() != []\r\n          ? this.treeRef.current.gettargetKeys()\r\n          : [];\r\n      const menuprofile = [];\r\n      targetKey.map((data, index) => menuprofile.push({ MPMMENUID: data }));\r\n      // console.log(menuprofile);\r\n      const profile = Object.assign({}, values, {\r\n        menusprofile: menuprofile,\r\n      });\r\n      console.log(\"profile to submit => : \", profile);\r\n      if (this.props.match.params.id != null) {\r\n        console.log(\"    --------------debut-Update--------------\");\r\n        try {\r\n          await updateProfile(\r\n            this.props.service,\r\n            this.props.match.params.id,\r\n            profile,\r\n            this.state.token\r\n          );\r\n          this.props.onFormulaireChange(true);\r\n          message\r\n            .loading(\"Action in progress..\", 2.5)\r\n            .then(() => message.success(\"Loading finished\", 2.5))\r\n            .then(() => message.info(\"Loading finished is finished\", 2.5));\r\n          await delay(750);\r\n          notification.open({\r\n            message: \"Info\",\r\n            description: \"This profile is updated successfully\",\r\n            className: \"custom-class\",\r\n            type: \"info\",\r\n            placement: \"bottomRight\",\r\n            style: {\r\n              width: 400,\r\n            },\r\n          });\r\n          console.log(\r\n            \"succes from api : Update Profiles with id => :\" +\r\n              this.props.match.params.id\r\n          );\r\n          console.log(\"    ---------------fin-Update---------------\");\r\n          console.log(\"-------------------fin-Submit-------------------\");\r\n          this.props.goTo(\"../AdvancedSearchPath\");\r\n        } catch (error) {\r\n          notification.open({\r\n            message: \"Error\",\r\n            description: \"This profile could not be updated\",\r\n            className: \"custom-class\",\r\n            type: \"error\",\r\n            placement: \"bottomRight\",\r\n            style: {\r\n              width: 400,\r\n            },\r\n          });\r\n          console.log(\r\n            \"Erreur: update profil by id => \" + this.props.match.params.id,\r\n            error\r\n          );\r\n          console.log(\"    ---------------fin-Update---------------\");\r\n          console.log(\"-------------------fin-Submit-------------------\");\r\n          if (error == \"Error: Request failed with status code 401\") {\r\n            this.props.goTo(\"../403\");\r\n          } else if (error == \"Error: Network Error\") {\r\n            this.props.goTo(\"../500\");\r\n          }\r\n        }\r\n      } else {\r\n        console.log(\"    --------------debut-create--------------\");\r\n        try {\r\n          await insertProfile(this.props.service, profile, this.state.token);\r\n          this.props.onFormulaireChange(true);\r\n          message\r\n            .loading(\"Action in progress..\", 2.5)\r\n            .then(() => message.success(\"Loading finished\", 2.5))\r\n            .then(() => message.info(\"Loading finished is finished\", 2.5));\r\n          await delay(750);\r\n          notification.open({\r\n            message: \"Info\",\r\n            description: \"This profile is created successfully\",\r\n            className: \"custom-class\",\r\n            type: \"info\",\r\n            placement: \"bottomRight\",\r\n            style: {\r\n              width: 400,\r\n            },\r\n          });\r\n          console.log(\"succes from api : Create Profiles. \");\r\n          console.log(\"    ---------------fin-Create---------------\");\r\n          console.log(\"-------------------fin-Submit-------------------\");\r\n          this.props.goTo(\"AdvancedSearchPath\");\r\n        } catch (error) {\r\n          notification.open({\r\n            message: \"Error\",\r\n            description: \"This profile could not be created\",\r\n            className: \"custom-class\",\r\n            type: \"error\",\r\n            placement: \"bottomRight\",\r\n            style: {\r\n              width: 400,\r\n            },\r\n          });\r\n          console.log(\"Erreur: create profil \", error);\r\n          console.log(\"    ---------------fin-Create---------------\");\r\n          console.log(\"-------------------fin-Submit-------------------\");\r\n          if (error == \"Error: Request failed with status code 401\") {\r\n            this.props.goTo(\"403\");\r\n          } else if (error == \"Error: Network Error\") {\r\n            this.props.goTo(\"500\");\r\n          }\r\n        }\r\n      }\r\n      // });\r\n    } catch (error) {\r\n      console.log(\"error2 :\", error);\r\n      notification.open({\r\n        message: \"Error\",\r\n        description: \"This profile could not be created\",\r\n        className: \"custom-class\",\r\n        type: \"error\",\r\n        placement: \"bottomRight\",\r\n        style: {\r\n          width: 400,\r\n        },\r\n      });\r\n    }\r\n  };\r\n  onSubmit = () => {\r\n    this.formRef.current.submit();\r\n    console.log(this.formRef.current);\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n    this.setState({ changecome: false });\r\n    // console.log(this.formRef.current);\r\n  };\r\n  onFill = () => {\r\n    this.formRef.current.setFieldsValue({\r\n      note: \"Hello world!\",\r\n      gender: \"male\",\r\n    });\r\n  };\r\n  async removeElem() {\r\n    console.log(\"------------------debut-RemoveProfile------------------\");\r\n    try {\r\n      await deleteProfile(\r\n        this.props.service,\r\n        this.props.match.params.id,\r\n        this.state.token\r\n      );\r\n      this.props.onFormulaireChange(true);\r\n      message\r\n        .loading(\"Action in progress..\", 2.5)\r\n        .then(() => message.success(\"Loading finished\", 2.5))\r\n        .then(() => message.info(\"Loading finished is finished\", 2.5));\r\n      await delay(750);\r\n      notification.open({\r\n        message: \"Info\",\r\n        description: \"This profile is deleted successfully\",\r\n        className: \"custom-class\",\r\n        type: \"info\",\r\n        placement: \"bottomRight\",\r\n        style: {\r\n          width: 400,\r\n        },\r\n      });\r\n      this.props.goTo(\"../AdvancedSearchPath\");\r\n    } catch (error) {\r\n      notification.open({\r\n        message: \"Error\",\r\n        description: \"This profile could not be deleted\",\r\n        className: \"custom-class\",\r\n        type: \"error\",\r\n        placement: \"bottomRight\",\r\n        style: {\r\n          width: 400,\r\n        },\r\n      });\r\n      console.log(\"Erreur: remove profil \", error);\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"../403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"../500\");\r\n      } else {\r\n        this.props.goTo(\"../404\");\r\n      }\r\n    }\r\n    console.log(\"-------------------fin-RemoveProfile-------------------\");\r\n  }\r\n  loading(value) {\r\n    this.setState({ loading: value });\r\n  }\r\n  async componentDidMount() {\r\n    // console.log(this.props.match.params.id, \"identi\");\r\n    this.props.match.params.id != null\r\n      ? this.props.disabelEditButton(false)\r\n      : this.props.disabelEditButton(true);\r\n    this.props.hostStorage.get(\"access_token\", await this.getToken);\r\n  }\r\n  getToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    if (value == null) {\r\n      //  window.location.href = authApp;\r\n      console.log(\"tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ token: value });\r\n    console.log(\"tokne from host => :\", this.state.token);\r\n    console.log(\"-------------------fin-GetToken-------------------\");\r\n    await this.getMenusByApp();\r\n    await this.getDataById();\r\n  };\r\n  async getDataById() {\r\n    console.log(\"------------------debut-GetProfileById------------------\");\r\n\r\n    try {\r\n      const Datas = await getProfileByID(\r\n        this.props.service,\r\n        this.props.match.params.id,\r\n        this.state.token\r\n      );\r\n      const menuSelected = [];\r\n      if (Datas.data.menus != null) {\r\n        Datas.data.menus.map((data, index) =>\r\n          menuSelected.push(data.ID_ROWID + \"\")\r\n        );\r\n        this.setState({\r\n          defaultValue: { ...Datas.data },\r\n          targetKeys: menuSelected,\r\n        });\r\n        this.setState({ isLoading: false });\r\n        console.log(\r\n          \"succes from api : Profiles  => \",\r\n          Datas,\r\n          this.state.isLoading\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Erreur: get profil by id => \", error);\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"../403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"../500\");\r\n      }\r\n    }\r\n\r\n    console.log(\"-------------------Fin-GetProfileById-------------------\");\r\n  }\r\n  async getMenusByApp() {\r\n    console.log(\"------------------debut-GetMenusByApp------------------\");\r\n    try {\r\n      const apps = await GetApplications(this.state.token);\r\n      console.log(\"succes from api : Application => :\", apps);\r\n      const appss = [{ title: \"Application\", key: \"base\", children: [] }];\r\n      await Promise.all(\r\n        apps.data.map(async (data, index1) => {\r\n          appss[0].children.push({\r\n            title: data.APPLIBLONG,\r\n            key: data.ID_ROWID + \"app\",\r\n            children: [],\r\n          });\r\n          var menus = null;\r\n          try {\r\n            menus = await GetMenus(data.ID_ROWID, this.state.token);\r\n\r\n            console.log(\"succes from api : menus of app \", menus);\r\n            menus.data.Menus_per_applications.map((data, index2) =>\r\n              appss[0].children[index1].children.push({\r\n                title: data.AMNLIB,\r\n                key: data.ID_ROWID + \"\",\r\n              })\r\n            );\r\n          } catch (error) {\r\n            console.log(\r\n              \"Error  :  GetMenus of app \" + data.ID_ROWID + \"  => : \",\r\n              error\r\n            );\r\n            if (error == \"Error: Request failed with status code 401\") {\r\n              this.props.goTo(\"403\");\r\n            } else if (error == \"Error: Network Error\") {\r\n              this.props.goTo(\"500\");\r\n            }\r\n          }\r\n        })\r\n      );\r\n      console.log(\"tree : app and menu => :\", appss);\r\n      this.setState({ apps: appss, loading: false });\r\n    } catch (error) {\r\n      console.log(\"Error  :  GetApplications => : \", error);\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"../403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"../500\");\r\n      }\r\n    }\r\n    console.log(\"-------------------fin-GetMenusByApp-------------------\");\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    if (!this.state.changecome) {\r\n      this.props.onFormulaireChange(false);\r\n      this.setState({ changecome: true });\r\n    }\r\n  };\r\n\r\n  CleanInputChange = (event) => {\r\n    this.setState({ changecome: false });\r\n\r\n    this.setState({ datas: {} });\r\n\r\n    console.log(\"datas: \", this.state.datas);\r\n  };\r\n  render() {\r\n    return (\r\n      <div style={{ height: \"100%\", width: \"100%\" }}>\r\n        <Spin spinning={this.state.loading} delay={500}>\r\n          {!this.state.loading && (\r\n            <Row gutter={(16, 0)} justify=\"center\">\r\n              <Col span={18}>\r\n                <Row\r\n                  gutter={(16, 0)}\r\n                  justify=\"start\"\r\n                  align=\"stretch\"\r\n                  // wrap={false}\r\n                >\r\n                  <Col\r\n                    span={24}\r\n                    style={{\r\n                      padding: \"0px\",\r\n                    }}\r\n                  >\r\n                    <Divider\r\n                      className={\"border-main-content\"}\r\n                      orientation=\"left\"\r\n                      style={{\r\n                        margin: \"-12px -2px -12px 0px\",\r\n                        // \"-12px 0px\",\r\n                      }}\r\n                    >\r\n                      Information\r\n                    </Divider>{\" \"}\r\n                    <Row\r\n                      gutter={[20, 20]}\r\n                      align=\"stretch\"\r\n                      justify=\"space-between\"\r\n                      className={\"border-main-content-2\"}\r\n                      style={{\r\n                        marginRight: \"0px\",\r\n                        // \"-2px\",\r\n                        marginLeft: \"0px\",\r\n                        // \"-2px\",\r\n                        padding: \"22px 10px 9px 10px\",\r\n                        borderRadius: \"3px\",\r\n                        borderWidth: \"0px 1px 1px 1px\",\r\n                        borderStyle: \"solid\",\r\n                      }}\r\n                    >\r\n                      <Col span={24}>\r\n                        {!this.state.isLoading && (\r\n                          <ConfigProvider form={{ validateMessages }}>\r\n                            <Form\r\n                              ref={this.formRef}\r\n                              name=\"control-ref\"\r\n                              initialValues={{ ...this.state.defaultValue }}\r\n                              onFinish={this.onFinish}\r\n                            >\r\n                              <Row gutter={[10, 0]} justify=\"space-between\">\r\n                                <Col span={7}>\r\n                                  <Row gutter={[0, 0]} align=\"stretch\">\r\n                                    <Col flex=\"auto\">\r\n                                      <Form.Item\r\n                                        label={\r\n                                          <Typography\r\n                                            style={{\r\n                                              fontSize: \"14px\",\r\n                                              fontWeight: \"600\",\r\n                                            }}\r\n                                          >\r\n                                            Libellé\r\n                                          </Typography>\r\n                                        }\r\n                                        hasFeedback\r\n                                        name={\"MPRLIBLONG\"}\r\n                                        style={{ marginBottom: \"10px\" }}\r\n                                        rules={[\r\n                                          {\r\n                                            required: true,\r\n                                            max: 50,\r\n                                          },\r\n                                        ]}\r\n                                      >\r\n                                        {this.state.update ? (\r\n                                          <Input\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        ) : (\r\n                                          <Typography\r\n                                            style={{ display: \"flex\" }}\r\n                                          >\r\n                                            {this.state.defaultValue.MPRLIBLONG}\r\n                                          </Typography>\r\n                                        )}\r\n                                      </Form.Item>\r\n                                    </Col>\r\n                                  </Row>\r\n                                </Col>\r\n                                <Col span={5}>\r\n                                  <Row gutter={[0, 0]} align=\"stretch\">\r\n                                    <Col flex=\"auto\">\r\n                                      <Form.Item\r\n                                        hasFeedback\r\n                                        rules={[\r\n                                          {\r\n                                            required: true,\r\n                                            max: 10,\r\n                                          },\r\n                                        ]}\r\n                                        hasFeedback\r\n                                        label={\r\n                                          <Typography\r\n                                            style={{\r\n                                              fontSize: \"14px\",\r\n                                              fontWeight: \"600\",\r\n                                            }}\r\n                                          >\r\n                                            Acronyme\r\n                                          </Typography>\r\n                                        }\r\n                                        style={{ marginBottom: \"10px\" }}\r\n                                        name={\"MPRLIBCOUR\"}\r\n                                        hasFeedback\r\n                                        rules={[\r\n                                          {\r\n                                            required: false,\r\n                                            max: 10,\r\n                                            pattern: \"[a-z A-Z]+\",\r\n                                          },\r\n                                        ]}\r\n                                      >\r\n                                        {this.state.update ? (\r\n                                          <Input\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        ) : (\r\n                                          <Typography\r\n                                            style={{ display: \"flex\" }}\r\n                                          >\r\n                                            {this.state.defaultValue.MPRLIBCOUR}\r\n                                          </Typography>\r\n                                        )}\r\n                                      </Form.Item>\r\n                                    </Col>\r\n                                  </Row>\r\n                                </Col>\r\n                                <Col span={7}>\r\n                                  <Row gutter={[0, 0]} align=\"stretch\">\r\n                                    <Col flex=\"auto\">\r\n                                      <Form.Item\r\n                                        initialValue={\r\n                                          this.state.defaultValue.MPRLIBLONG\r\n                                        }\r\n                                        style={{ marginBottom: \"10px\" }}\r\n                                        label={\r\n                                          <Typography\r\n                                            style={{\r\n                                              fontSize: \"14px\",\r\n                                              fontWeight: \"600\",\r\n                                            }}\r\n                                          >\r\n                                            Code externe\r\n                                          </Typography>\r\n                                        }\r\n                                        hasFeedback\r\n                                        name={\"MPRPRFEXT\"}\r\n                                        rules={[\r\n                                          {\r\n                                            required: false,\r\n                                            max: 30,\r\n                                          },\r\n                                        ]}\r\n                                      >\r\n                                        {this.state.update ? (\r\n                                          <Input\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        ) : (\r\n                                          <Typography\r\n                                            style={{ display: \"flex\" }}\r\n                                          >\r\n                                            {this.state.defaultValue.MPRPRFEXT}\r\n                                          </Typography>\r\n                                        )}\r\n                                      </Form.Item>\r\n                                    </Col>\r\n                                  </Row>\r\n                                </Col>\r\n                                <Col span={5}>\r\n                                  <Row gutter={[0, 0]} align=\"stretch\">\r\n                                    <Col flex=\"auto\">\r\n                                      <Form.Item\r\n                                        label={\r\n                                          <Typography\r\n                                            style={{\r\n                                              fontSize: \"14px\",\r\n                                              fontWeight: \"600\",\r\n                                            }}\r\n                                            ellipsis={true}\r\n                                          >\r\n                                            Niveau d'accès\r\n                                          </Typography>\r\n                                        }\r\n                                        name={\"MPRNIVACC\"}\r\n                                        style={{ marginBottom: \"10px\" }}\r\n                                        hasFeedback\r\n                                        rules={[\r\n                                          {\r\n                                            required: false,\r\n                                          },\r\n                                        ]}\r\n                                      >\r\n                                        {this.state.update ? (\r\n                                          <InputNumber\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        ) : (\r\n                                          <Typography\r\n                                            style={{ display: \"flex\" }}\r\n                                          >\r\n                                            {this.state.defaultValue.MPRNIVACC}\r\n                                          </Typography>\r\n                                        )}\r\n                                      </Form.Item>\r\n                                    </Col>\r\n                                  </Row>\r\n                                </Col>\r\n                              </Row>\r\n                            </Form>\r\n                          </ConfigProvider>\r\n                        )}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col\r\n                    span={24}\r\n                    style={{\r\n                      marginTop: \"10px\",\r\n                      // padding: \"4px\",\r\n                      // margin: \"0px -4px 0px -4px\",\r\n                      // backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    <TreeAppMenu\r\n                      dataSource={this.state.apps}\r\n                      // {treeData}\r\n                      ref={this.treeRef}\r\n                      targetKeys={this.state.targetKeys}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouterAndRef(Formulaire);\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport { Table, Input, Button, Popconfirm, Form } from \"antd\";\r\nimport { DataTable } from \"dmsui\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nconst expandable = {\r\n  expandedRowRender: (record) => <p>{record.description}</p>,\r\n};\r\nconst pagination = { position: \"bottom\" };\r\nconst vueSysteme = [];\r\nfor (let i = 1; i <= 1; i++) {\r\n  vueSysteme.push({\r\n    titre: \"Vue systéme \" + i,\r\n    check: true,\r\n  });\r\n}\r\nconst vuesPersonnalises = [];\r\nfor (let i = 1; i <= 3; i++) {\r\n  vuesPersonnalises.push({\r\n    titre: \"Vues personnalisés \" + i,\r\n    check: false,\r\n  });\r\n}\r\n\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(\r\n      `selectedRowKeys: ${selectedRowKeys}`,\r\n      \"selectedRows: \",\r\n      selectedRows\r\n    );\r\n  },\r\n  onSelect: (record, selected, selectedRows) => {\r\n    console.log(record, selected, selectedRows);\r\n  },\r\n  onSelectAll: (selected, selectedRows, changeRows) => {\r\n    console.log(selected, selectedRows, changeRows);\r\n  },\r\n};\r\n//befor\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  pattern,\r\n  max,\r\n  required,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n  useEffect(() => {\r\n    console.log(\"tinane voila la\", max, \"record\", record);\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log(\"Save failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        rules={[\r\n          {\r\n            required: required,\r\n            max: max,\r\n            pattern: pattern,\r\n            // message: `${title} is required.`,\r\n          },\r\n        ]}\r\n      >\r\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{\r\n          paddingRight: 24,\r\n        }}\r\n        onClick={toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nexport default class EditableTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: \"Libillé\",\r\n        max: 30,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"MADLIBLONG\",\r\n        width: \"10%\",\r\n        fixed: \"left\",\r\n        ellipsis: true,\r\n        editable: this.props.updateAdress,\r\n        showSorterTooltip: true,\r\n      },\r\n\r\n      {\r\n        title: \"Batiment\",\r\n        max: 10,\r\n        pattern: \"^[a-zA-Z0-9_-]+$\",\r\n        required: false,\r\n        dataIndex: \"MADBATIM\",\r\n        width: \"12%\",\r\n        ellipsis: true,\r\n        editable: this.props.updateAdress,\r\n      },\r\n\r\n      {\r\n        title: \"Etage\",\r\n        max: 4,\r\n        pattern: \"^[0-9]*$\",\r\n        required: false,\r\n        dataIndex: \"MADETAGE\",\r\n        width: \"10%\",\r\n        ellipsis: true,\r\n        editable: this.props.updateAdress,\r\n      },\r\n      {\r\n        title: \"Code postale\",\r\n        max: 5,\r\n        required: false,\r\n        dataIndex: \"MADCODEP\",\r\n        width: \"12%\",\r\n        ellipsis: true,\r\n        editable: this.props.updateAdress,\r\n      },\r\n      {\r\n        title: \"Ville\",\r\n        max: 15,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"MADVILLE\",\r\n\r\n        width: \"12%\",\r\n        ellipsis: true,\r\n        editable: this.props.updateAdress,\r\n      },\r\n      {\r\n        title: \"Pays\",\r\n        max: 15,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"MADPAYS\",\r\n        width: \"12%\",\r\n        ellipsis: true,\r\n        editable: this.props.updateAdress,\r\n      },\r\n      {\r\n        title: \"Adresse 1\",\r\n        max: 100,\r\n        required: false,\r\n        dataIndex: \"MADADRES1\",\r\n        width: \"15%\",\r\n        ellipsis: true,\r\n        editable: this.props.updateAdress,\r\n      },\r\n      {\r\n        title: \"Adresse 2\",\r\n        max: 100,\r\n        required: false,\r\n        dataIndex: \"MADADRES2\",\r\n        width: \"15%\",\r\n        ellipsis: true,\r\n        editable: this.props.updateAdress,\r\n      },\r\n      {\r\n        title: \"\",\r\n        fixed: \"right\",\r\n\r\n        width: 35,\r\n        dataIndex: \"operation\",\r\n        render: (_, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              {/* <a>Delete</a> */}\r\n              <DeleteOutlined style={{ color: \"#f44336\" }} />\r\n            </Popconfirm>\r\n          ) : null,\r\n      },\r\n    ];\r\n    this.state = {\r\n      // after\r\n      bordered: false,\r\n      loading: false,\r\n      pagination,\r\n\r\n      expandable,\r\n      showHeader: true,\r\n      rowSelection: {},\r\n      scroll: undefined,\r\n      hasData: true,\r\n      tableLayout: undefined,\r\n      top: \"none\",\r\n      bottom: \"bottomRight\",\r\n\r\n      //before\r\n      dataSource: [],\r\n      count: 2,\r\n    };\r\n  }\r\n  // componentDidUpdate(prevProps) {\r\n  //   if (prevProps.updateAdress !== this.props.updateAdress) {\r\n  //     this.\r\n  //   }\r\n  // }\r\n  getDataSource() {\r\n    return this.state.dataSource;\r\n  }\r\n  handleDelete = (key) => {\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({\r\n      dataSource: dataSource.filter((item) => item.key !== key),\r\n    });\r\n  };\r\n  handleAdd = () => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = {\r\n      key: count,\r\n      MADLIBLONG: \"...\",\r\n      MADADRES1: \"...\",\r\n      MADADRES2: \"...\",\r\n      MADBATIM: \"...\",\r\n      MADETAGE: 1,\r\n      MADCODEP: \"...\",\r\n      MADVILLE: \"...\",\r\n      MADPAYS: \"...\",\r\n    };\r\n    this.setState({\r\n      dataSource: [newData, ...dataSource],\r\n      count: count + 1,\r\n    });\r\n  };\r\n  handleSave = (row) => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, { ...item, ...row });\r\n    this.setState({\r\n      dataSource: newData,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    console.log(\"datas\", this.props.datasource);\r\n    this.props.datasource != null &&\r\n      this.props.datasource.map((data, index) => {\r\n        Object.assign(data, {\r\n          key: index,\r\n        });\r\n      });\r\n    this.setState({\r\n      dataSource: this.props.datasource != null ? this.props.datasource : [],\r\n    });\r\n  }\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          max: col.max,\r\n          required: col.required,\r\n          pattern: col.pattern,\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n\r\n    // ajouter de datatable\r\n    const { xScroll, yScroll, ...state } = this.state;\r\n    const scroll = {};\r\n    if (yScroll) {\r\n      scroll.y = 240;\r\n    }\r\n    if (xScroll) {\r\n      scroll.x = \"100vw\";\r\n    }\r\n\r\n    // const tableColumns = this.state.columns.map((item) => ({\r\n    //   ...item,\r\n    //   ellipsis: state.ellipsis,\r\n    // }));\r\n    // if (xScroll === \"fixed\") {\r\n    //   tableColumns[0].fixed = true;\r\n    //   tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n    // }\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <DataTable\r\n          className=\"template-dms\"\r\n          // {...this.state}\r\n          vues={{\r\n            vueSysteme: vueSysteme,\r\n            vuesPersonnalises: vuesPersonnalises,\r\n          }}\r\n          size=\"small\"\r\n          pagination={{ position: [this.state.top, this.state.bottom] }}\r\n          // columns={tableColumns}\r\n          // dataSource={state.hasData ? this.state.data : null}\r\n          // scroll={scroll}\r\n          scroll={{ x: 1300 }}\r\n          components={components}\r\n          rowSelection={{ ...rowSelection }}\r\n          rowClassName={() => \"editable-row\"}\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n        />{\" \"}\r\n        <Button\r\n          onClick={this.handleAdd}\r\n          type=\"primary\"\r\n          style={{\r\n            marginBottom: 16,\r\n          }}\r\n        >\r\n          Add a row\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Result, Button } from \"antd\";\r\nexport default class Error404 extends Component {\r\n  render() {\r\n    return (\r\n      <Result\r\n        status=\"404\"\r\n        title=\"404\"\r\n        subTitle=\"Sorry, the page you visited does not exist.\"\r\n        extra={<Button type=\"primary\">Back Home</Button>}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import { Result, Button } from \"antd\";\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class Error403 extends Component {\r\n  render() {\r\n    return (\r\n      <Result\r\n        status=\"403\"\r\n        title=\"403\"\r\n        subTitle=\"Sorry, you are not authorized to access this page.\"\r\n        extra={<Button type=\"primary\">Back Home</Button>}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import { Result, Button } from \"antd\";\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class Error500 extends Component {\r\n  render() {\r\n    return (\r\n      <Result\r\n        status=\"500\"\r\n        title=\"500\"\r\n        subTitle=\"Sorry, something went wrong.\"\r\n        extra={<Button type=\"primary\">Back Home</Button>}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { useImperativeHandle } from \"react\";\r\nimport {\r\n  MemoryRouter,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport DMSProfileHomeSearch from \"./pages/Searche\";\r\nimport DMSProfileInserting from \"./pages/Formulaire\";\r\nimport DMSProfileAdvancedSearch from \"./pages/Results\";\r\nimport Error404 from \"../../templates/template1/Pages/Error404\";\r\nimport Error403 from \"../../templates/template1/Pages/Error403\";\r\nimport Error500 from \"../../templates/template1/Pages/Error500\";\r\n\r\nconst DMSRoute = React.forwardRef((props, ref) => {\r\n  const history = useHistory();\r\n  const refFormulaire = React.createRef();\r\n  const refHistory = React.createRef();\r\n  useImperativeHandle(ref, () => ({\r\n    removeElem: (datefin) => {\r\n      refFormulaire.current.removeElem(datefin);\r\n    },\r\n    Route: {\r\n      search: \"HomeSearchPath\",\r\n      create: \"CreationPath\",\r\n      update: \"UpdatePath\",\r\n      result: \"AdvancedSearchPath\",\r\n    },\r\n    activerUpdate: () => {\r\n      refFormulaire.current.activerUpdate();\r\n    },\r\n    history: () => {\r\n      return refHistory.current.history;\r\n    },\r\n    onReset: () => {\r\n      refFormulaire.current.onReset();\r\n    },\r\n    onSubmit: () => {\r\n      refFormulaire.current.onSubmit();\r\n    },\r\n    loadingFormulaire: (value) => {\r\n      refFormulaire.current.loading(value);\r\n      // refFormulaire\r\n    },\r\n    CleanInputChange: (value) => {\r\n      refFormulaire.current.CleanInputChange();\r\n    },\r\n\r\n    history: refHistory.current.history,\r\n    goBack: () => {\r\n      refHistory.current.history.goBack();\r\n    },\r\n    goForward: () => {\r\n      refHistory.current.history.goForward();\r\n    },\r\n  }));\r\n  // history.push(profileHomeSearchPath);\r\n  return (\r\n    <MemoryRouter\r\n      ref={refHistory}\r\n      initialEntries={[\"HomeSearchPath\"]}\r\n      initialIndex={0}\r\n    >\r\n      <Switch>\r\n        <Route exact path={\"HomeSearchPath\"}>\r\n          <DMSProfileHomeSearch\r\n            history={history}\r\n            hostStorage={props.hostStorage}\r\n            service={props.service}\r\n            goTo={(link) => props.goTo(link)}\r\n          />\r\n        </Route>\r\n        <Route exact path={\"CreationPath\"}>\r\n          <DMSProfileInserting\r\n            hostStorage={props.hostStorage}\r\n            history={history}\r\n            icon={props.icon}\r\n            disabelEditButton={(value) => props.disabelEditButton(value)}\r\n            service={props.service}\r\n            services={props.services.formulaire}\r\n            ref={refFormulaire}\r\n            goTo={(link) => props.goTo(link)}\r\n            // wrappedComponentRef={(c) => (refFormulaire = c)}\r\n            onFormulaireChange={(value) => props.onFormulaireChange(value)}\r\n          />\r\n        </Route>\r\n        <Route exact path={\"AdvancedSearchPath\"}>\r\n          <DMSProfileAdvancedSearch\r\n            hostStorage={props.hostStorage}\r\n            history={history}\r\n            service={props.service}\r\n            services={props.services.result}\r\n            goTo={(link) => props.goTo(link)}\r\n          />\r\n        </Route>\r\n        <Route exact path={\"UpdatePath/:id\"}>\r\n          <DMSProfileInserting\r\n            history={history}\r\n            hostStorage={props.hostStorage}\r\n            icon={props.icon}\r\n            ref={refFormulaire}\r\n            disabelEditButton={(value) => props.disabelEditButton(value)}\r\n            service={props.service}\r\n            services={props.services.formulaire}\r\n            onFormulaireChange={(value) => props.onFormulaireChange(value)}\r\n            goTo={(link) => props.goTo(link)}\r\n          />\r\n        </Route>\r\n        <Route path=\"404\">\r\n          <Error404 />\r\n        </Route>\r\n        <Route path=\"403\">\r\n          <Error403 />\r\n        </Route>\r\n        <Route path=\"500\">\r\n          <Error500 />\r\n        </Route>\r\n        <Redirect from=\"*\" to=\"404\" />\r\n      </Switch>\r\n    </MemoryRouter>\r\n  );\r\n});\r\n\r\nexport default DMSRoute;\r\n","import { Col, Input, Row, Space } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { AudioOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { Affix, Button } from \"dmsui\";\r\nimport { userAdvancedSearchPath, userCreationPath } from \"../../../config\";\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nclass Searche extends Component {\r\n  onSearch = (value) => {\r\n    console.log(\"------------------debut-onSearch------------------\");\r\n    console.log(\"Rechercher par => :\", value);\r\n    this.props.goTo(userAdvancedSearchPath + \"?search=\" + value);\r\n    console.log(\"-------------------fin-onSearch-------------------\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ height: \"100%\", width: \"100%\", paddingTop: \"90px\" }}>\r\n        <Affix\r\n          offsetTop={150}\r\n          style={{ position: \"fixed\", left: \"95%\", top: \"90%\" }}\r\n        >\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"circle\"\r\n            size={\"large\"}\r\n            onClick={() => this.props.goTo(userCreationPath)}\r\n            // style={{ width: \"50px\", height: \"50px\" }}\r\n          >\r\n            <PlusOutlined />\r\n          </Button>\r\n        </Affix>\r\n        <Row gutter={[16, 30]} align=\"middle\" justify=\"space-around\">\r\n          <Col span={24}>\r\n            <Space>\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/search3.png\"}\r\n                alt=\"ooo\"\r\n                style={{ width: \"410px\" }}\r\n              />\r\n            </Space>\r\n          </Col>\r\n          <Col span={10}>\r\n            <Input.Search\r\n              placeholder=\"what are you looking for ?\"\r\n              enterButton=\"Search\"\r\n              size=\"large\"\r\n              suffix={suffix}\r\n              onSearch={(e) => this.onSearch(e)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Searche);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Upload, Form } from \"antd\";\r\n// import ImgCrop from \"antd-img-crop\";\r\n\r\nconst AvatarUpdate = (props) => {\r\n  const [fileList, setFileList] = useState(\r\n    props.defaultValue != null\r\n      ? [\r\n          {\r\n            uid: \"-1\",\r\n            name: \"imagex.png\",\r\n            status: \"done\",\r\n            url: props.defaultValue != null ? props.defaultValue : \"\",\r\n          },\r\n        ]\r\n      : []\r\n  );\r\n  useEffect(async () => {\r\n    console.log(props.defaultValue);\r\n  }, []);\r\n  const onChange = ({ fileList: newFileList }) => {\r\n    setFileList(newFileList);\r\n    console.log(newFileList[0]);\r\n    props.setImage(newFileList[0]);\r\n  };\r\n\r\n  const onPreview = async (file) => {\r\n    let src = file.url;\r\n    if (!src) {\r\n      src = await new Promise((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file.originFileObj);\r\n        reader.onload = () => resolve(reader.result);\r\n      });\r\n    }\r\n    const image = new Image();\r\n    image.src = src;\r\n    const imgWindow = window.open(src);\r\n    imgWindow.document.write(image.outerHTML);\r\n  };\r\n\r\n  return (\r\n    // <ImgCrop rotate>\r\n    // <Form.Item\r\n    //   name={\"MUTPHOTOS\"}\r\n    //   // style={{ marginBottom: \"10px\" }}\r\n    //   rules={[\r\n    //     {\r\n    //       required: true,\r\n    //       // max: 150,\r\n    //     },\r\n    //   ]}\r\n    // >\r\n    <Upload\r\n      className=\"user-avatar\"\r\n      // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n      listType=\"picture-card\"\r\n      fileList={fileList}\r\n      onChange={onChange}\r\n      onPreview={onPreview}\r\n      disabled={props.readOnly}\r\n      style={{ width: \"100%\", objectFit: \"cover\" }}\r\n    >\r\n      {fileList.length < 1 && \"+ Upload\"}\r\n    </Upload>\r\n    // </Form.Item>\r\n    // </ImgCrop>\r\n  );\r\n};\r\nexport default AvatarUpdate;\r\n","import { notification } from \"dmsui\";\r\nimport { domaine, userApiEndPoint } from \"../config\";\r\nimport http from \"./httpService\";\r\nexport const getAllUsers = (userApiEndPoint, search, token) => {\r\n  return http.get(userApiEndPoint + \"?search=\" + search, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const insertUser = async (api, userObjet, photo, token) => {\r\n  // bazStorage.get(\"access_token\", function (error, value) {\r\n  //   localStorage.setItem(\"access_token\", value);\r\n  // });\r\n  // bazStorage.get(\"refresh_token\", function (error, value) {\r\n  //   localStorage.setItem(\"refresh_token\", value);\r\n  // });\r\n  const { data } = await http.post(domaine + \"\" + userApiEndPoint, userObjet, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n  http.patch(`${api}${data.user.id}/`, photo, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\":\r\n        \"multipart/form-data; boundary=----WebKitFormBoundaryEwxlBBDdYQdWdUgK\",\r\n    },\r\n  });\r\n\r\n  return;\r\n};\r\n\r\nexport const GetAllProfile = (search, token) => {\r\n  return http.get(domaine + \"\" + \"DMERP/v1/profiles/?search=\" + search, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const getUserByID = (userApiEndPoint, id, token) => {\r\n  return http.get(`${userApiEndPoint}${id}`, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const getContactByID = (userApiEndPoint, id, token) => {\r\n  return http.get(`${userApiEndPoint + \"contacts/\"}${id}`, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const updateUser = async (\r\n  userApiEndPoint,\r\n  id,\r\n  userObjet,\r\n  ctc_id,\r\n  ctcObject,\r\n  photo,\r\n  token\r\n) => {\r\n  var res = 1;\r\n\r\n  try {\r\n    !!userObjet &&\r\n      (await http.patch(`${userApiEndPoint}${id}/`, userObjet, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n          \"Content-Type\": \"application/json\",\r\n          accept: \"application/json\",\r\n        },\r\n      }));\r\n  } catch (error) {\r\n    res = 0;\r\n    notification.open({\r\n      message: \"warning\",\r\n      description: \"Sorry we can't update user data.\",\r\n      className: \"custom-class\",\r\n      type: \"warning\",\r\n      placement: \"bottomRight\",\r\n      style: {\r\n        width: 400,\r\n      },\r\n    });\r\n  }\r\n  try {\r\n    !!photo.FormData &&\r\n      (await http.patch(`${userApiEndPoint}${id}/`, photo, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n          \"Content-Type\":\r\n            \"multipart/form-data; boundary=----WebKitFormBoundaryEwxlBBDdYQdWdUgK\",\r\n        },\r\n      }));\r\n  } catch (error) {\r\n    res = 0;\r\n    notification.open({\r\n      message: \"warning\",\r\n      description: \"Sorry we can't update your profile picture.\",\r\n      className: \"custom-class\",\r\n      type: \"warning\",\r\n      placement: \"bottomRight\",\r\n      style: {\r\n        width: 400,\r\n      },\r\n    });\r\n  }\r\n  try {\r\n    !!userObjet.adresse &&\r\n      (await userObjet.adresse.map(async (data, index) => {\r\n        if (data.ID_ROWID != null) {\r\n          console.log(\"put =>\", data);\r\n          await http.put(\r\n            `${userApiEndPoint + \"adresses/\"}${data.ID_ROWID}/`,\r\n            data,\r\n            {\r\n              headers: {\r\n                Authorization: \"Bearer \" + token,\r\n                \"Content-Type\": \"application/json\",\r\n                accept: \"application/json\",\r\n              },\r\n            }\r\n          );\r\n        } else {\r\n          const adressToPost = Object.assign(\r\n            {},\r\n            data,\r\n\r\n            {\r\n              MADCNTID: ctc_id,\r\n            }\r\n          );\r\n          console.log(\"post =>\", adressToPost);\r\n          http.post(`${userApiEndPoint + \"adresses/\"}`, adressToPost, {\r\n            headers: {\r\n              Authorization: \"Bearer \" + token,\r\n              \"Content-Type\": \"application/json\",\r\n              accept: \"application/json\",\r\n            },\r\n          });\r\n        }\r\n      }));\r\n  } catch (error) {\r\n    res = 0;\r\n    notification.open({\r\n      message: \"warning\",\r\n      description: \"Sorry we can't update your addresses.\",\r\n      className: \"custom-class\",\r\n      type: \"warning\",\r\n      placement: \"bottomRight\",\r\n      style: {\r\n        width: 400,\r\n      },\r\n    });\r\n  }\r\n  try {\r\n    !!ctcObject &&\r\n      (await http.put(`${userApiEndPoint + \"contacts/\"}${ctc_id}/`, ctcObject, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n          \"Content-Type\": \"application/json\",\r\n          accept: \"application/json\",\r\n        },\r\n      }));\r\n  } catch (error) {\r\n    res = 0;\r\n    notification.open({\r\n      message: \"warning\",\r\n      description: \"Sorry we can't update your contact.\",\r\n      className: \"custom-class\",\r\n      type: \"warning\",\r\n      placement: \"bottomRight\",\r\n      style: {\r\n        width: 400,\r\n      },\r\n    });\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const deleteUser = (userApiEndPoint, id, token) => {\r\n  return http.delete(`${userApiEndPoint}${id}`, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\nexport const ActiveDesactiveUser = (userApiEndPoint, object, token) => {\r\n  return http.post(`${userApiEndPoint}Etat/`, object, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const GetApplications = (token) => {\r\n  return http.get(domaine + \"DMERP/v1/applications/\", {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\nexport const GetMenus = (id, token) => {\r\n  return http.get(domaine + \"DMERP/v1/menus/application/\" + id, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Divider, Input, Row, message, ConfigProvider } from \"antd\";\r\nimport {\r\n  Button,\r\n  DatePicker,\r\n  Form,\r\n  InputNumber,\r\n  notification,\r\n  Select,\r\n  Spin,\r\n  Tab,\r\n  Tabs,\r\n  Tooltip,\r\n  Typography,\r\n} from \"dmsui\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  deleteProfile,\r\n  GetApplications,\r\n  GetMenus,\r\n  getProfileByID,\r\n  insertProfile,\r\n  updateProfile,\r\n} from \"../../../../DjangoService/profileService\";\r\nimport {\r\n  ContactsOutlined,\r\n  EyeInvisibleOutlined,\r\n  EyeTwoTone,\r\n  GlobalOutlined,\r\n  InfoCircleOutlined,\r\n  LockOutlined,\r\n  MailOutlined,\r\n  PhoneOutlined,\r\n  PrinterOutlined,\r\n  UserOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport {\r\n  GetAllProfile,\r\n  insertUser,\r\n  updateUser,\r\n} from \"../../../../DjangoService/userService\";\r\nimport { userAdvancedSearchPath } from \"../../../../config\";\r\nconst typeTemplate = \"Le champ ${label} is not a valid ${type}\";\r\nconst validateMessages = {\r\n  required: \"Le champ ${label} is Required!\",\r\n  default: \"Validation error on field '${name}'\",\r\n  enum: \"Le champ ${label} must be one of [${enum}]\",\r\n  whitespace: \"Le champ ${label} cannot be empty\",\r\n  date: {\r\n    format: \"Le champ ${label} is invalid for format date\",\r\n    parse: \"Le champ ${label} could not be parsed as date\",\r\n    invalid: \"Le champ ${label} is invalid date\",\r\n  },\r\n  types: {\r\n    string: typeTemplate,\r\n    method: typeTemplate,\r\n    array: typeTemplate,\r\n    object: typeTemplate,\r\n    number: typeTemplate,\r\n    date: typeTemplate,\r\n    boolean: typeTemplate,\r\n    integer: typeTemplate,\r\n    float: typeTemplate,\r\n    regexp: typeTemplate,\r\n    email: typeTemplate,\r\n    url: typeTemplate,\r\n    hex: typeTemplate,\r\n  },\r\n  string: {\r\n    len: \"Le champ ${label} must be exactly ${len} characters\",\r\n    min: \"Le champ ${label} must be at least ${min} characters\",\r\n    max: \"Le champ ${label} cannot be longer than ${max} characters\",\r\n    range: \"Le champ ${label} must be between ${min} and ${max} characters\",\r\n  },\r\n  number: {\r\n    len: \"Le champ ${label} must equal ${len}\",\r\n    min: \"Le champ ${label} cannot be less than ${min}\",\r\n    max: \"Le champ ${label} cannot be greater than ${max}\",\r\n    range: \"Le champ ${label} must be between ${min} and ${max}\",\r\n  },\r\n  array: {\r\n    len: \"Le champ ${label} must be exactly ${len} in length\",\r\n    min: \"Le champ ${label} cannot be less than ${min} in length\",\r\n    max: \"Le champ ${label} cannot be greater than ${max} in length\",\r\n    range: \"Le champ ${label} must be between ${min} and ${max} in length\",\r\n  },\r\n  pattern: {\r\n    mismatch: \"Le champ ${label} does not match pattern ${pattern}\",\r\n  },\r\n};\r\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\r\nconst withRouterAndRef = (WrappedComponent) => {\r\n  class InnerComponentWithRef extends React.Component {\r\n    render() {\r\n      const { forwardRef, ...rest } = this.props;\r\n      return <WrappedComponent {...rest} ref={forwardRef} />;\r\n    }\r\n  }\r\n  const ComponentWithRouter = withRouter(InnerComponentWithRef, {\r\n    withRef: true,\r\n  });\r\n  return React.forwardRef((props, ref) => {\r\n    return <ComponentWithRouter {...props} forwardRef={ref} />;\r\n  });\r\n};\r\nexport default class TabInput extends Component {\r\n  static propTypes = {\r\n    prop: PropTypes,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userData: [],\r\n      changecome: false,\r\n      Profiles: [],\r\n      loading: false,\r\n      form: {},\r\n      photo: null,\r\n      // isLoading: this.props.match.params.id != null ? true : false,\r\n      // ii: false,\r\n      targetKeys: [],\r\n      update: true,\r\n      defaultValue: this.props.contact != null ? this.props.contact[0] : null,\r\n      // null,\r\n\r\n      datas: { US_EMAIL: \"\", US_NOMUSR: \"\", US_PRNUSR: \"\", US_TYPUSR: \"\" },\r\n    };\r\n  }\r\n  formRef = React.createRef();\r\n\r\n  activerUpdate() {\r\n    // if (this.props.match.params.id != null) {\r\n    //   this.setState({ update: !this.state.update });\r\n    //   return true;\r\n    // } else {\r\n    //   return false;\r\n    // }\r\n  }\r\n  onChange = (keys) => {\r\n    this.setState({ targetKeys: keys });\r\n  };\r\n  onFinish = async (values) => {\r\n    console.log(\"------------------debut-Submit------------------\");\r\n    var loadingOnsubmit = true;\r\n    message.loading(\"Loading..\", loadingOnsubmit);\r\n    try {\r\n      console.log(\"    --------------debut-Update--------------\");\r\n      console.log(values);\r\n      if (this.props.user_id != null) {\r\n        this.props.onFormulaireChange(true);\r\n        const res = await updateUser(\r\n          this.props.service,\r\n          this.props.user_id,\r\n          this.state.userData,\r\n          this.props.contact[0].ID_ROWID,\r\n          values,\r\n          this.state.photo,\r\n          this.props.token\r\n        );\r\n\r\n        if (res == 1) {\r\n          loadingOnsubmit = false;\r\n          notification.open({\r\n            message: \"Success\",\r\n            description: \"This user is updated successfully\",\r\n            className: \"custom-class\",\r\n            type: \"success\",\r\n            placement: \"bottomRight\",\r\n            style: {\r\n              width: 400,\r\n            },\r\n          });\r\n          // message\r\n          //   .loading(\"Loading..\", false)\r\n          //   .then(() => message.success(\"finished\", 0.5));\r\n          // await delay(750);\r\n\r\n          this.props.goTo(\"../\" + userAdvancedSearchPath);\r\n        } else {\r\n          loadingOnsubmit = false;\r\n          this.props.onFormulaireChange(false);\r\n        }\r\n      } else {\r\n        const user = Object.assign({}, this.state.userData, values);\r\n        console.log(user);\r\n\r\n        this.props.onFormulaireChange(true);\r\n        const res = await insertUser(\r\n          this.props.service,\r\n          user,\r\n          this.state.photo,\r\n          this.props.token\r\n        );\r\n        this.props.goTo(userAdvancedSearchPath);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error2 :\", error);\r\n      this.props.onFormulaireChange(false);\r\n      notification.open({\r\n        message: \"Error\",\r\n        description: \"This user could not be created\",\r\n        className: \"custom-class\",\r\n        type: \"error\",\r\n        placement: \"bottomRight\",\r\n        style: {\r\n          width: 400,\r\n        },\r\n      });\r\n    }\r\n  };\r\n  setUser(datas, photo) {\r\n    this.setState({ userData: datas, photo: photo });\r\n  }\r\n  onSubmit = () => {\r\n    this.formRef.current.submit();\r\n    console.log(this.formRef.current);\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n    this.setState({ changecome: false });\r\n    // console.log(this.formRef.current);\r\n  };\r\n  onFill = () => {\r\n    this.formRef.current.setFieldsValue({\r\n      note: \"Hello world!\",\r\n      gender: \"male\",\r\n    });\r\n  };\r\n  async removeElem() {\r\n    // try {\r\n    //   await deleteProfile(this.props.service, this.props.match.params.id);\r\n    // } catch (error) {\r\n    //   console.log(error);\r\n    // }\r\n  }\r\n  loading(value) {\r\n    this.setState({ loading: value });\r\n  }\r\n  componentDidMount() {\r\n    // this.getDataById();\r\n    // console.log(this.props.match.params.id, \"identi\");\r\n    // this.props.match.params.id != null\r\n    //   ? this.props.disabelEditButton(false)\r\n    //   : this.props.disabelEditButton(true);\r\n  }\r\n\r\n  CleanInputChange = (event) => {\r\n    this.setState({ changecome: false });\r\n\r\n    this.setState({ datas: {} });\r\n\r\n    console.log(\"datas: \", this.state.datas);\r\n  };\r\n  labelComposant = (label, Icon) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Icon\r\n          className=\"site-form-item-icon\"\r\n          style={{\r\n            marginRight: \"10px\",\r\n          }}\r\n        />{\" \"}\r\n        <Typography\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"120px\",\r\n            fontSize: \"14px\",\r\n            fontWeight: \"600\",\r\n          }}\r\n        >\r\n          {label}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    const { isLoading, handleInputChange } = this.props;\r\n    return (\r\n      !isLoading && (\r\n        <ConfigProvider form={{ validateMessages }}>\r\n          <Form\r\n            ref={this.formRef}\r\n            name=\"control-ref\"\r\n            initialValues={{ ...this.state.defaultValue }}\r\n            onFinish={this.onFinish}\r\n          >\r\n            <Row gutter={[20, 20]} justify=\"center\" align=\"stretch\">\r\n              <Col span={24}>\r\n                <Row gutter={[0, 0]} align=\"stretch\" justify=\"space-between\">\r\n                  <Col span={11}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          name={\"MCTCIVILE\"}\r\n                          style={{ marginBottom: \"10px\" }}\r\n                          hasFeedback\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                              max: 100,\r\n                              pattern: \"[a-zA-Z]+\",\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input\r\n                            addonBefore={this.labelComposant(\r\n                              \"Ville\",\r\n                              GlobalOutlined\r\n                            )}\r\n                            readOnly={this.props.updateCtc ? false : true}\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col span={11}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          style={{ marginBottom: \"10px\" }}\r\n                          name={\"MCTTELPER\"}\r\n                          hasFeedback\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                              max: 100,\r\n                              pattern: \"[0-9]+\",\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input\r\n                            addonBefore={this.labelComposant(\r\n                              \"Tel personel\",\r\n                              PhoneOutlined\r\n                            )}\r\n                            readOnly={this.props.updateCtc ? false : true}\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col span={11}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          style={{ marginBottom: \"10px\" }}\r\n                          name={\"MCTTELMOB\"}\r\n                          hasFeedback\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                              max: 100,\r\n                              pattern: \"[0-9]+\",\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input\r\n                            addonBefore={this.labelComposant(\r\n                              \"Tel Mobile\",\r\n                              PhoneOutlined\r\n                            )}\r\n                            readOnly={this.props.updateCtc ? false : true}\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                  <Col span={11}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          style={{ marginBottom: \"10px\" }}\r\n                          name={\"MCTTELPROF\"}\r\n                          hasFeedback\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                              max: 100,\r\n                              pattern: \"[0-9]+\",\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input\r\n                            addonBefore={this.labelComposant(\r\n                              \"Tel Profesionell\",\r\n                              PhoneOutlined\r\n                            )}\r\n                            readOnly={this.props.updateCtc ? false : true}\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                  <Col span={11}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          style={{ marginBottom: \"10px\" }}\r\n                          name={\"MCTFAX\"}\r\n                          hasFeedback\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                              max: 100,\r\n                              pattern: \"[0-9]+\",\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input\r\n                            addonBefore={this.labelComposant(\r\n                              \"Fax\",\r\n                              PrinterOutlined\r\n                            )}\r\n                            readOnly={this.props.updateCtc ? false : true}\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                  <Col span={11}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          style={{ marginBottom: \"10px\" }}\r\n                          name={\"MCTEMAIL\"}\r\n                          hasFeedback\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                              type: \"email\",\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input\r\n                            addonBefore={this.labelComposant(\r\n                              \"Email\",\r\n                              MailOutlined\r\n                            )}\r\n                            readOnly={this.props.updateCtc ? false : true}\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                  <Col span={11}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          style={{ marginBottom: \"10px\" }}\r\n                          name={\"MCTCTEXT\"}\r\n                          hasFeedback\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                              max: 10,\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input\r\n                            addonBefore={this.labelComposant(\r\n                              \"Code externe\",\r\n                              ContactsOutlined\r\n                            )}\r\n                            readOnly={this.props.updateCtc ? false : true}\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col span={11}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        {/* {this.state.update ? ( */}\r\n                        <Input.Group compact>\r\n                          <div\r\n                            style={{\r\n                              border: \"1px solid #dcdcdc\",\r\n                              display: \"inline-flex\",\r\n                              width: \"128px\",\r\n                              backgroundColor: \"#fafafa\",\r\n                              paddingLeft: \"10px\",\r\n                              height: \"32px\",\r\n                              width: \"34%\",\r\n                            }}\r\n                          >\r\n                            {this.labelComposant(\"Langue\", GlobalOutlined)}\r\n                          </div>\r\n                          <Form.Item\r\n                            name={\"MCTLANGUE\"}\r\n                            style={{\r\n                              marginBottom: \"10px\",\r\n                              width: \"66%\",\r\n                            }}\r\n                            hasFeedback\r\n                            rules={[\r\n                              {\r\n                                required: false,\r\n                              },\r\n                            ]}\r\n                          >\r\n                            <Select\r\n                              onChange={handleInputChange}\r\n                              allowClear\r\n                              disabled={this.props.updateCtc ? false : true}\r\n                            >\r\n                              <Select.Option value={\"Anglais\"}>\r\n                                Anglais\r\n                              </Select.Option>\r\n                              <Select.Option value={\"Français\"}>\r\n                                Français\r\n                              </Select.Option>\r\n                              <Select.Option value={\"Arabe\"}>\r\n                                Arabe\r\n                              </Select.Option>\r\n                            </Select>\r\n                          </Form.Item>\r\n                        </Input.Group>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ConfigProvider>\r\n      )\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Modal,\r\n  notification,\r\n  Row,\r\n  Space,\r\n  Tag,\r\n  Tooltip,\r\n  Avatar,\r\n  Image,\r\n} from \"antd\";\r\nimport { DataTable, DatePicker } from \"dmsui\";\r\nimport \"./style.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  BackwardFilled,\r\n  CheckCircleOutlined,\r\n  CheckOutlined,\r\n  CloseOutlined,\r\n  DeleteOutlined,\r\n  EnvironmentFilled,\r\n  InfoOutlined,\r\n  MinusOutlined,\r\n  PhoneOutlined,\r\n  StopOutlined,\r\n  UserOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  getAllProfiles,\r\n  deleteProfile,\r\n} from \"../../../DjangoService/profileService\";\r\nimport {\r\n  ActiveDesactiveUser,\r\n  deleteUser,\r\n  getAllUsers,\r\n} from \"../../../DjangoService/userService\";\r\nimport { ContentHook } from \"@fullcalendar/react\";\r\nimport { authApp, userUpdatePath } from \"../../../config\";\r\nimport { connexion } from \"../../../DjangoService/authnService\";\r\n\r\nconst expandable = {\r\n  expandedRowRender: (record) => <p>{record.description}</p>,\r\n};\r\nconst pagination = { position: \"bottom\" };\r\nconst vueSysteme = [];\r\nfor (let i = 1; i <= 1; i++) {\r\n  vueSysteme.push({\r\n    titre: \"Vue systéme \" + i,\r\n    check: true,\r\n  });\r\n}\r\nconst vuesPersonnalises = [];\r\nfor (let i = 1; i <= 3; i++) {\r\n  vuesPersonnalises.push({\r\n    titre: \"Vues personnalisés \" + i,\r\n    check: false,\r\n  });\r\n}\r\nconst DescriptionItem = ({ title, content }) => (\r\n  <div className=\"site-description-item-profile-wrapper\">\r\n    <p className=\"site-description-item-profile-p-label\">{title}:</p>\r\n    {content}\r\n  </div>\r\n);\r\nclass Results extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: \"\",\r\n      token: null,\r\n      bordered: false,\r\n      loading: false,\r\n      pagination,\r\n      model: {\r\n        title: \"\",\r\n        Content: \"\",\r\n        width: 300,\r\n        onOk: console.log(\"ok\"),\r\n        visible: false,\r\n      },\r\n      dateFinDesactiver: \"20202-28-06 11:34:00\",\r\n      columns: [\r\n        {\r\n          title: \"\",\r\n          dataIndex: \"MUTPHOTOS\",\r\n          width: \"70px\",\r\n          ellipsis: true,\r\n          fixed: \"left\",\r\n          render: (_, record) => {\r\n            return (\r\n              !this.state.loading && (\r\n                <Avatar\r\n                  src={\r\n                    !!record.MUTPHOTOS && record.MUTETAT && record.MUTPHOTOS\r\n                    // : process.env.PUBLIC_URL + \"/photo.png\"\r\n                  }\r\n                  // tag ? tag : process.env.PUBLIC_URL + \"/photo.png\"}\r\n                  size={32}\r\n                  style={!record.MUTETAT ? { cursor: \"not-allowed\" } : {}}\r\n                  disabled={!record.MUTETAT}\r\n                  icon={<UserOutlined />}\r\n                >\r\n                  ddd\r\n                </Avatar>\r\n              )\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: \"Username\",\r\n          dataIndex: \"username\",\r\n          ellipsis: true,\r\n          width: \"120px\",\r\n          fixed: \"left\",\r\n          // sorter: (a, b) => a.age - b.age,\r\n          render: (_, record) => (\r\n            <Tooltip placement=\"topLeft\" title={record.username}>\r\n              <div\r\n                style={\r\n                  !record.MUTETAT\r\n                    ? { cursor: \"not-allowed\", color: \"#7a7a7a\" }\r\n                    : {}\r\n                }\r\n              >\r\n                {record.username}\r\n              </div>\r\n            </Tooltip>\r\n          ),\r\n        },\r\n        {\r\n          title: \"First name\",\r\n          dataIndex: \"first_name\",\r\n          ellipsis: true,\r\n          width: \"100px\",\r\n          ellipsis: {\r\n            showTitle: false,\r\n          },\r\n          render: (_, record) => (\r\n            <Tooltip placement=\"topLeft\" title={record.first_name}>\r\n              <div\r\n                style={\r\n                  !record.MUTETAT\r\n                    ? { cursor: \"not-allowed\", color: \"#7a7a7a\" }\r\n                    : {}\r\n                }\r\n              >\r\n                {record.first_name}\r\n              </div>\r\n            </Tooltip>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Last name\",\r\n          ellipsis: true,\r\n          width: \"100px\",\r\n          dataIndex: \"last_name\",\r\n          render: (_, record) => (\r\n            <Tooltip placement=\"topLeft\" title={record.last_name}>\r\n              <div\r\n                style={\r\n                  !record.MUTETAT\r\n                    ? { cursor: \"not-allowed\", color: \"#7a7a7a\" }\r\n                    : {}\r\n                }\r\n              >\r\n                {record.last_name}\r\n              </div>\r\n            </Tooltip>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Email\",\r\n          ellipsis: true,\r\n          width: \"250px\",\r\n          dataIndex: \"email\",\r\n          render: (_, record) => (\r\n            <Tooltip placement=\"topLeft\" title={record.email}>\r\n              <div\r\n                style={\r\n                  !record.MUTETAT\r\n                    ? { cursor: \"not-allowed\", color: \"#7a7a7a\" }\r\n                    : {}\r\n                }\r\n              >\r\n                {record.email}\r\n              </div>\r\n            </Tooltip>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Profile\",\r\n          ellipsis: true,\r\n          dataIndex: \"MUTPROFID\",\r\n          width: \"100px\",\r\n          render: (_, record) => (\r\n            <span>\r\n              <Tag\r\n                style={!record.MUTETAT ? { cursor: \"not-allowed\" } : {}}\r\n                // color={\"#93f79563\"}\r\n                color={!record.MUTETAT ? \"default\" : \"purple\"}\r\n                // style={{ border: \"1px solid #1ab43b\", color: \"#1ab43b\" }}\r\n                key={record.MUTPROFID}\r\n              >\r\n                {!!record.MUTPROFID\r\n                  ? record.MUTPROFID.MPRLIBCOUR.toUpperCase()\r\n                  : \"NUll\"}\r\n              </Tag>\r\n            </span>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Date Debut\",\r\n          ellipsis: true,\r\n          width: \"170px\",\r\n          dataIndex: \"MUTDDEB\",\r\n          render: (_, record) => (\r\n            <Tooltip placement=\"topLeft\" title={record.MUTDDEB}>\r\n              <div\r\n                style={\r\n                  !record.MUTETAT\r\n                    ? { cursor: \"not-allowed\", color: \"#7a7a7a\" }\r\n                    : {}\r\n                }\r\n              >\r\n                {record.MUTDDEB}\r\n              </div>\r\n            </Tooltip>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Date Fin\",\r\n          ellipsis: true,\r\n          width: \"170px\",\r\n          dataIndex: \"MUTDFIN\",\r\n          render: (_, record) => (\r\n            <Tooltip placement=\"topLeft\" title={record.MUTDFIN}>\r\n              <div\r\n                style={\r\n                  !record.MUTETAT\r\n                    ? { cursor: \"not-allowed\", color: \"#7a7a7a\" }\r\n                    : {}\r\n                }\r\n              >\r\n                {record.MUTDFIN}\r\n              </div>\r\n            </Tooltip>\r\n          ),\r\n        },\r\n        {\r\n          title: \" \",\r\n          key: \"action\",\r\n          width: \"150px\",\r\n          fixed: \"right\",\r\n          width: 170,\r\n          // sorter: true,\r\n          render: (_, record) => {\r\n            // console.log(\"hhhh\", record);\r\n            return (\r\n              <Space\r\n                size=\"middle\"\r\n                style={{ display: \"flex\", justifyContent: \"start\" }}\r\n              >\r\n                <Button\r\n                  className={\"dms-button-info dms-button dms\"}\r\n                  onClick={() => console.log(\"see\", record.id)}\r\n                  shape=\"circle\"\r\n                  disabled={!record.MUTETAT}\r\n                  onClick={() => this.props.goTo(userUpdatePath + record.id)}\r\n                  icon={<InfoOutlined />}\r\n                  size=\"small\"\r\n                />\r\n                <Button\r\n                  className={\"dms-button-info dms-button dms\"}\r\n                  onClick={() => console.log(\"see\", record.id)}\r\n                  shape=\"circle\"\r\n                  disabled={!record.MUTETAT}\r\n                  onClick={() => this.props.goTo(userUpdatePath + record.id)}\r\n                  icon={<PhoneOutlined />}\r\n                  size=\"small\"\r\n                />\r\n                <Button\r\n                  className={\"dms-button-info dms-button dms\"}\r\n                  onClick={() => console.log(\"see\", record.id)}\r\n                  shape=\"circle\"\r\n                  disabled={!record.MUTETAT}\r\n                  onClick={() => this.props.goTo(userUpdatePath + record.id)}\r\n                  icon={<EnvironmentFilled />}\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    console.log(\"delete\", record.id);\r\n                    this.setState({\r\n                      model: {\r\n                        title: \"Contacte\",\r\n                        Content: (\r\n                          <Space direction=\"vertical\" size={12}>\r\n                            {/* <p> Do you want to disable user {record.username}</p> */}\r\n                            {/* <p className=\"site-description-item-profile-p\">\r\n                            Contacts\r\n                          </p> */}\r\n                            <Row>\r\n                              <Col span={12}>\r\n                                <DescriptionItem\r\n                                  title=\"Email\"\r\n                                  content=\"AntDesign@example.com\"\r\n                                />\r\n                              </Col>\r\n                              <Col span={12}>\r\n                                <DescriptionItem\r\n                                  title=\"Phone Number\"\r\n                                  content=\"+86 181 0000 0000\"\r\n                                />\r\n                              </Col>\r\n                            </Row>\r\n                            <Row>\r\n                              <Col span={24}>\r\n                                <DescriptionItem\r\n                                  title=\"Github\"\r\n                                  content={\r\n                                    <a href=\"http://github.com/ant-design/ant-design/\">\r\n                                      github.com/ant-design/ant-design/\r\n                                    </a>\r\n                                  }\r\n                                />\r\n                              </Col>\r\n                            </Row>\r\n                          </Space>\r\n                        ),\r\n                        onOk: async () => {\r\n                          console.log(\"ok\", this.state.dateFinDesactiver);\r\n                        },\r\n                        width: 600,\r\n                        visible: true,\r\n                      },\r\n                    });\r\n                    // deleteUser(this.props.service, record.id);\r\n                  }}\r\n                />\r\n                <Button\r\n                  className={\"dms-button-error dms-button dms\"}\r\n                  shape=\"circle\"\r\n                  // disabled={!record.MUTETAT}\r\n                  icon={!record.MUTETAT ? <CheckOutlined /> : <MinusOutlined />}\r\n                  // {<DeleteOutlined />}\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    console.log(\"delete\", record.id);\r\n                    this.setState({\r\n                      model: {\r\n                        title: \"Delete user\",\r\n                        width: 300,\r\n                        Content: (\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"center\",\r\n                            }}\r\n                          >\r\n                            <Space direction=\"vertical\" size={5} align=\"center\">\r\n                              <p>\r\n                                {record.MUTETAT\r\n                                  ? \"Do you want to disable user \" +\r\n                                    record.username +\r\n                                    \"?\"\r\n                                  : \"Do you want to enable user \" +\r\n                                    record.username +\r\n                                    \"?\"}\r\n                              </p>\r\n                              {record.MUTETAT && (\r\n                                <DatePicker\r\n                                  style={{ width: \"100%\" }}\r\n                                  showTime\r\n                                  onChange={this.onChange}\r\n                                  onOk={this.onOk}\r\n                                />\r\n                              )}\r\n                            </Space>\r\n                          </div>\r\n                        ),\r\n                        onOk: async () => {\r\n                          console.log(\"ok\", this.state.dateFinDesactiver);\r\n                          try {\r\n                            await ActiveDesactiveUser(\r\n                              this.props.service,\r\n\r\n                              {\r\n                                activate: !record.MUTETAT,\r\n                                MUTDFIN: this.state.dateFinDesactiver,\r\n                                pk: record.id,\r\n                              }\r\n                            );\r\n                            this.getData();\r\n                            // await deleteUser(this.props.service, record.id);\r\n                            // this.handleDelete(record.key);\r\n                            notification.open({\r\n                              message: \"Success\",\r\n                              description: record.MUTETAT\r\n                                ? record.username + \" is disabled successfully\"\r\n                                : record.username + \" is enabled successfully\",\r\n                              className: \"custom-class\",\r\n                              type: \"success\",\r\n                              placement: \"bottomRight\",\r\n                              style: {\r\n                                width: 400,\r\n                              },\r\n                            });\r\n                          } catch (error) {\r\n                            console.log(error);\r\n                            notification.open({\r\n                              message: \"Error\",\r\n                              placement: \"bottomRight\",\r\n                              type: \"error\",\r\n                              description: record.MUTETAT\r\n                                ? record.username + \" could not be disabled.\"\r\n                                : record.username + \" could not be enabled.\",\r\n                              className: \"custom-class\",\r\n                              style: {\r\n                                width: 400,\r\n                              },\r\n                            });\r\n                          }\r\n                        },\r\n                        visible: true,\r\n                      },\r\n                    });\r\n                    // deleteUser(this.props.service, record.id);\r\n                  }}\r\n                />\r\n              </Space>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      datass: [],\r\n      loading: true,\r\n      // expandable,\r\n      showHeader: true,\r\n      rowSelection: {},\r\n      scroll: undefined,\r\n      hasData: true,\r\n      tableLayout: undefined,\r\n      top: \"none\",\r\n      bottom: \"bottomRight\",\r\n    };\r\n    this.getToken = this.getToken.bind(this);\r\n    this.getRefrechToken = this.getRefrechToken.bind(this);\r\n  }\r\n  getToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    if (value == null) {\r\n      //  window.location.href = authApp;\r\n      console.log(\"tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ token: value });\r\n    console.log(\"tokne from host => :\", this.state.token);\r\n    console.log(\"-------------------fin-GetToken-------------------\");\r\n    await this.getData();\r\n  };\r\n  getRefrechToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetRefrechToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"403\");\r\n    }\r\n    if (value == null) {\r\n      //  window.location.href = authApp;\r\n      console.log(\"Refech tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ Refrech: value });\r\n    console.log(\"Refech tokne from host => :\", this.state.Refrech);\r\n    console.log(\"-------------------fin-GetRefrechToken-------------------\");\r\n  };\r\n  async componentDidMount() {\r\n    console.log(\"------------------debut-ResultaDeRecherche------------------\");\r\n    const { location } = this.props.history;\r\n\r\n    var search = \"\";\r\n    if (location.search != \"\") {\r\n      search = location.search.slice(1).split(\"?\")[0].split(\"search=\")[1];\r\n    }\r\n    this.setState({ search: search });\r\n    console.log(\"Valeur de recherche => :\", search);\r\n    console.log(\"-------------------fin-ResultaDeRecherche-------------------\");\r\n    // var createGuest = require(\"cross-domain-storage/guest\");\r\n    // var bazStorage = createGuest(authApp);\r\n    this.props.hostStorage.get(\"refresh_token\", await this.getRefrechToken);\r\n    this.props.hostStorage.get(\"access_token\", await this.getToken);\r\n    // this.getColumn();\r\n  }\r\n  onChange = (value, dateString) => {\r\n    console.log(\"Selected Time: \", value);\r\n    console.log(\r\n      \"Formatted Selected Time: \",\r\n      dateString,\r\n      this.state.dateFinDesactiver\r\n    );\r\n    this.setState({ dateFinDesactiver: dateString });\r\n  };\r\n  refrechpage() {\r\n    // this.props.history.replace(\"app\");\r\n    window.location.reload();\r\n  }\r\n  onOk(value) {\r\n    console.log(\"onOk: \", value);\r\n  }\r\n  handleDelete = (key) => {\r\n    const dataSource = [...this.state.datass];\r\n    this.setState({\r\n      datass: dataSource.filter((item) => item.key !== key),\r\n    });\r\n  };\r\n  async getData() {\r\n    console.log(\"------------------debut-GetUsers------------------\");\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n      // () => this.getData()\r\n    );\r\n    try {\r\n      const res = await getAllUsers(\r\n        this.props.service,\r\n        this.state.search,\r\n        !!verifyToken ? verifyToken : this.state.token\r\n      );\r\n      console.log(\"succes from api : user (getAll()) => :\", res);\r\n\r\n      res.data != null &&\r\n        res.data.map((data, index) => {\r\n          Object.assign(data, {\r\n            key: index,\r\n          });\r\n        });\r\n      this.setState({\r\n        datass: res.data != null ? res.data : [],\r\n        loading: false,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error  :  GetUsers  => : \", error);\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"500\");\r\n      }\r\n    }\r\n    console.log(\"-------------------fin-GetUser-------------------\");\r\n  }\r\n  render() {\r\n    const { xScroll, yScroll, ...state } = this.state;\r\n    const scroll = {};\r\n    if (yScroll) {\r\n      scroll.y = 240;\r\n    }\r\n    if (xScroll) {\r\n      scroll.x = \"100vw\";\r\n    }\r\n\r\n    const tableColumns = this.state.columns.map((item) => ({\r\n      ...item,\r\n      ellipsis: state.ellipsis,\r\n    }));\r\n    if (xScroll === \"fixed\") {\r\n      tableColumns[0].fixed = true;\r\n      tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n    }\r\n    return (\r\n      <div style={{ height: \"100%\", width: \"100%\" }}>\r\n        <Row justify=\"center\">\r\n          <Col span={24} style={{ height: \"587px\", backgroundColor: \"#fff\" }}>\r\n            <Modal\r\n              title={this.state.model.title}\r\n              centered\r\n              visible={this.state.model.visible}\r\n              onOk={() => {\r\n                this.state.model.onOk();\r\n                this.setState({\r\n                  model: {\r\n                    title: \"\",\r\n                    Content: \"\",\r\n                    onOk: console.log(\"ok\"),\r\n                    visible: false,\r\n                  },\r\n                });\r\n                // setVisible(false);\r\n              }}\r\n              onCancel={() =>\r\n                this.setState({\r\n                  model: {\r\n                    title: \"\",\r\n                    Content: \"\",\r\n                    width: 400,\r\n                    onOk: console.log(\"ok\"),\r\n                    visible: false,\r\n                  },\r\n                })\r\n              }\r\n              width={this.state.model.width}\r\n            >\r\n              {this.state.model.Content}\r\n            </Modal>\r\n            <DataTable\r\n              className=\"template-dms\"\r\n              {...this.state}\r\n              vues={{\r\n                vueSysteme: vueSysteme,\r\n                vuesPersonnalises: vuesPersonnalises,\r\n              }}\r\n              size=\"small\"\r\n              columns={tableColumns}\r\n              dataSource={state.hasData ? this.state.datass : null}\r\n              scroll={scroll}\r\n              scroll={{ y: 435 }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Results);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport { Col, Divider, Input, Row, message, ConfigProvider } from \"antd\";\r\nimport {\r\n  DatePicker,\r\n  Form,\r\n  notification,\r\n  Select,\r\n  Spin,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"dmsui\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { deleteProfile } from \"../../../DjangoService/profileService\";\r\nimport {\r\n  EyeInvisibleOutlined,\r\n  EyeTwoTone,\r\n  GlobalOutlined,\r\n  LockOutlined,\r\n  MailOutlined,\r\n  UserOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport AvatarUpdate from \"./formulaireComponents/AvatarUpdate\";\r\nimport TabInput from \"./formulaireComponents/TabInput\";\r\nimport EditableTable from \"./formulaireComponents/EditableTable\";\r\nimport {\r\n  ActiveDesactiveUser,\r\n  deleteUser,\r\n  GetAllProfile,\r\n  getUserByID,\r\n} from \"../../../DjangoService/userService\";\r\nimport { userAdvancedSearchPath } from \"../../../config\";\r\nconst dateFormat = \"YYYY/MM/DD\";\r\n\r\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\r\nconst withRouterAndRef = (WrappedComponent) => {\r\n  class InnerComponentWithRef extends React.Component {\r\n    render() {\r\n      const { forwardRef, ...rest } = this.props;\r\n      return <WrappedComponent {...rest} ref={forwardRef} />;\r\n    }\r\n  }\r\n  const ComponentWithRouter = withRouter(InnerComponentWithRef, {\r\n    withRef: true,\r\n  });\r\n  return React.forwardRef((props, ref) => {\r\n    return <ComponentWithRouter {...props} forwardRef={ref} />;\r\n  });\r\n};\r\nconst typeTemplate = \"Le champ ${label} is not a valid ${type}\";\r\nconst validateMessages = {\r\n  required: \"Le champ ${label} is Required!\",\r\n  default: \"Validation error on field '${name}'\",\r\n  enum: \"Le champ ${label} must be one of [${enum}]\",\r\n  whitespace: \"Le champ ${label} cannot be empty\",\r\n  date: {\r\n    format: \"Le champ ${label} is invalid for format date\",\r\n    parse: \"Le champ ${label} could not be parsed as date\",\r\n    invalid: \"Le champ ${label} is invalid date\",\r\n  },\r\n  types: {\r\n    string: typeTemplate,\r\n    method: typeTemplate,\r\n    array: typeTemplate,\r\n    object: typeTemplate,\r\n    number: typeTemplate,\r\n    date: typeTemplate,\r\n    boolean: typeTemplate,\r\n    integer: typeTemplate,\r\n    float: typeTemplate,\r\n    regexp: typeTemplate,\r\n    email: typeTemplate,\r\n    url: typeTemplate,\r\n    hex: typeTemplate,\r\n  },\r\n  string: {\r\n    len: \"Le champ ${label} must be exactly ${len} characters\",\r\n    min: \"Le champ ${label} must be at least ${min} characters\",\r\n    max: \"Le champ ${label} cannot be longer than ${max} characters\",\r\n    range: \"Le champ ${label} must be between ${min} and ${max} characters\",\r\n  },\r\n  number: {\r\n    len: \"Le champ ${label} must equal ${len}\",\r\n    min: \"Le champ ${label} cannot be less than ${min}\",\r\n    max: \"Le champ ${label} cannot be greater than ${max}\",\r\n    range: \"Le champ ${label} must be between ${min} and ${max}\",\r\n  },\r\n  array: {\r\n    len: \"Le champ ${label} must be exactly ${len} in length\",\r\n    min: \"Le champ ${label} cannot be less than ${min} in length\",\r\n    max: \"Le champ ${label} cannot be greater than ${max} in length\",\r\n    range: \"Le champ ${label} must be between ${min} and ${max} in length\",\r\n  },\r\n  pattern: {\r\n    mismatch: \"Le champ ${label} does not match pattern ${pattern}\",\r\n  },\r\n};\r\n\r\nclass Formulaire extends Component {\r\n  static propTypes = {\r\n    prop: PropTypes,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      token: null,\r\n      changecome: false,\r\n      Profiles: [],\r\n      loading: false,\r\n      form: {},\r\n      isLoading: this.props.match.params.id != null ? true : false,\r\n      image: null,\r\n      targetKeys: [],\r\n      update: this.props.match.params.id != null ? false : true,\r\n      defaultValue: null,\r\n      // {\r\n      //   password1: \"moilinda\",\r\n      //   password2: \"moilinda\",\r\n      //   username: \"lynda_tinane\",\r\n      //   first_name: \"lynda\",\r\n      //   last_name: \"imakhlaf\",\r\n      //   email: \"06lt13@gmail.com\",\r\n\r\n      //   MUTUTLEXT: \"8563214\",\r\n      //   MUTDDEB: \"2021-06-16T07:00:00Z\",\r\n      //   MUTDFIN: \"2021-06-19T10:00:59Z\",\r\n      //   MUTLANGUE: \"Français\",\r\n      // },\r\n      datas: { US_EMAIL: \"\", US_NOMUSR: \"\", US_PRNUSR: \"\", US_TYPUSR: \"\" },\r\n    };\r\n    this.getToken = this.getToken.bind(this);\r\n  }\r\n\r\n  formRef = React.createRef();\r\n  formContactRef = React.createRef();\r\n  adressRef = React.createRef();\r\n  setImage(img) {\r\n    this.setState({ image: img });\r\n  }\r\n  activerUpdate() {\r\n    if (this.props.match.params.id != null) {\r\n      this.setState({ update: !this.state.update });\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  onChange = (keys) => {\r\n    this.setState({ targetKeys: keys });\r\n  };\r\n\r\n  onFinish = async (values) => {\r\n    try {\r\n      const rangeTimeValue = values[\"date\"];\r\n      let photos = new FormData();\r\n      photos.append(\r\n        \"MUTPHOTOS\",\r\n        !!this.state.image ? this.state.image.originFileObj : null\r\n      );\r\n      for (var pair of photos.entries()) {\r\n        console.log(\"ba3toch\", pair[0], pair[1]);\r\n      }\r\n      const user = Object.assign({}, values, {\r\n        MUTDDEB: rangeTimeValue[0].format(\"YYYY-MM-DD HH:mm:ss\"),\r\n        MUTDFIN: rangeTimeValue[1].format(\"YYYY-MM-DD HH:mm:ss\"),\r\n        // MUTPHOTOS: this.state.image.originFileObj,\r\n\r\n        adresse:\r\n          this.adressRef.current != null\r\n            ? this.adressRef.current.getDataSource()\r\n            : [],\r\n      });\r\n\r\n      this.formContactRef.current.setUser(user, photos);\r\n      this.formContactRef.current.onSubmit();\r\n    } catch (error) {\r\n      console.log(\"error2 :\", error);\r\n    }\r\n  };\r\n  getToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    if (value == null) {\r\n      //  window.location.href = authApp;\r\n      console.log(\"tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ token: value });\r\n    console.log(\"tokne from host => :\", this.state.token);\r\n    console.log(\"-------------------fin-GetToken-------------------\");\r\n    await this.getProfileApp();\r\n    await this.getDataById();\r\n  };\r\n  onSubmit = () => {\r\n    // console.log(\"adress =>\", this.adressRef.current.getDataSource());\r\n    this.formRef.current.submit();\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n    this.formContactRef.current.onReset();\r\n    this.setState({ changecome: false });\r\n    // console.log(this.formRef.current);\r\n  };\r\n  onFill = () => {\r\n    this.formRef.current.setFieldsValue({\r\n      note: \"Hello world!\",\r\n      gender: \"male\",\r\n    });\r\n  };\r\n  async removeElem(dateFin) {\r\n    console.log(\"date fin => \", dateFin);\r\n    try {\r\n      await ActiveDesactiveUser(\r\n        this.props.service,\r\n\r\n        {\r\n          activate: false,\r\n          MUTDFIN: dateFin,\r\n          pk: this.props.match.params.id,\r\n        }\r\n      );\r\n      // deleteUser(this.props.service, this.props.match.params.id);\r\n      this.props.onFormulaireChange(true);\r\n      notification.open({\r\n        message: \"Info\",\r\n        description: \"This user is deleted successfully\",\r\n        className: \"custom-class\",\r\n        type: \"info\",\r\n        placement: \"bottomRight\",\r\n        style: {\r\n          width: 400,\r\n        },\r\n      });\r\n      message\r\n        .loading(\"Loading...\", 0.5)\r\n        .then(() => message.success(\"Finished\", 0.5));\r\n      await delay(750);\r\n\r\n      this.props.goTo(\"../\" + userAdvancedSearchPath);\r\n    } catch (error) {\r\n      console.log(error);\r\n      notification.open({\r\n        message: \"Error\",\r\n        description: \"This user could not be deleted\",\r\n        className: \"custom-class\",\r\n        type: \"error\",\r\n        placement: \"bottomRight\",\r\n        style: {\r\n          width: 400,\r\n        },\r\n      });\r\n    }\r\n  }\r\n  loading(value) {\r\n    this.setState({ loading: value });\r\n  }\r\n  async componentDidMount() {\r\n    // console.log(this.props.match.params.id, \"identi\");\r\n    this.props.match.params.id != null\r\n      ? this.props.disabelEditButton(false)\r\n      : this.props.disabelEditButton(true);\r\n    this.props.hostStorage.get(\"access_token\", await this.getToken);\r\n    // this.getProfileApp();\r\n    // this.getDataById();\r\n    // this.getMenusByApp();\r\n  }\r\n  async getProfileApp() {\r\n    console.log(\"------------------debut-GetProfiles------------------\");\r\n\r\n    try {\r\n      const res = await GetAllProfile(\"\", this.state.token);\r\n      console.log(\"succes from api : Profiles => :\", res);\r\n      this.setState({ Profiles: res.data });\r\n    } catch (error) {\r\n      console.log(\"Error  :  GetProfiles  => : \", error);\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"500\");\r\n      }\r\n    }\r\n    console.log(\"-------------------fin-GetProfiles-------------------\");\r\n  }\r\n  async getDataById() {\r\n    console.log(\"------------------debut-GetUserById------------------\");\r\n    try {\r\n      if (this.props.match.params.id != null) {\r\n        const Datas = await getUserByID(\r\n          this.props.service,\r\n          this.props.match.params.id,\r\n          this.state.token\r\n        );\r\n        console.log(\"succes from api : Users  => \", Datas);\r\n        const defaultValue = Object.assign({}, Datas.data, {\r\n          date: [\r\n            moment(Datas.data.MUTDDEB, \"YYYY-MM-DD HH:mm:ss\"),\r\n            moment(Datas.data.MUTDFIN, \"YYYY-MM-DD HH:mm:ss\"),\r\n          ],\r\n          MUTPROFID: Datas.data.MUTPROFID.ID_ROWID,\r\n        });\r\n        this.setState({ defaultValue: { ...defaultValue } });\r\n        this.setState({ isLoading: false });\r\n        console.log(\r\n          \"Inisial value of fomulaire => : \",\r\n          this.state.defaultValue\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Erreur: get user by id => \", error);\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"../403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"../500\");\r\n      } else this.props.goTo(\"../404\");\r\n    }\r\n    console.log(\"-------------------Fin-GetProfileById-------------------\");\r\n  }\r\n  handleInputChange = (event) => {\r\n    if (!this.state.changecome) {\r\n      this.props.onFormulaireChange(false);\r\n      this.setState({ changecome: true });\r\n    }\r\n  };\r\n\r\n  labelComposant = (label, Icon) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Icon\r\n          className=\"site-form-item-icon\"\r\n          style={{\r\n            marginRight: \"10px\",\r\n          }}\r\n        />{\" \"}\r\n        <Typography\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"80px\",\r\n            fontSize: \"14px\",\r\n            fontWeight: \"600\",\r\n          }}\r\n        >\r\n          {label}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div style={{ height: \"100%\", width: \"100%\" }}>\r\n        {!this.state.isLoading && (\r\n          <Spin spinning={this.state.loading} delay={500}>\r\n            <Row gutter={(16, 0)} justify=\"center\">\r\n              <Col span={18}>\r\n                <Row\r\n                  gutter={(16, 0)}\r\n                  justify=\"center\"\r\n                  align=\"stretch\"\r\n                  wrap={false}\r\n                >\r\n                  <Col\r\n                    // flex=\"auto\"\r\n                    span={24}\r\n                    style={{\r\n                      padding: \"0px\",\r\n                    }}\r\n                  >\r\n                    <Divider\r\n                      className={\"border-main-content\"}\r\n                      orientation=\"left\"\r\n                      style={{\r\n                        margin: \"-12px  -2px -12px 0px\",\r\n                      }}\r\n                    >\r\n                      Information\r\n                    </Divider>{\" \"}\r\n                    <Row\r\n                      gutter={[20, 20]}\r\n                      align=\"stretch\"\r\n                      justify=\"space-between\"\r\n                      className={\"border-main-content-2\"}\r\n                      style={{\r\n                        marginRight: \"0px\",\r\n                        marginLeft: \"0px\",\r\n                        padding: \"22px 10px 9px 10px\",\r\n                        borderRadius: \"3px\",\r\n                        borderWidth: \"0px 1px 1px 1px\",\r\n                        borderStyle: \"solid\",\r\n                      }}\r\n                    >\r\n                      <Col span={24}>\r\n                        <ConfigProvider form={{ validateMessages }}>\r\n                          <Form\r\n                            ref={this.formRef}\r\n                            name=\"control-ref\"\r\n                            initialValues={{ ...this.state.defaultValue }}\r\n                            onFinish={this.onFinish}\r\n                            // encType=\"multipart/form-data\"\r\n                          >\r\n                            <Row\r\n                              gutter={[20, 20]}\r\n                              justify=\"center\"\r\n                              align=\"stretch\"\r\n                            >\r\n                              <Col span={5}>\r\n                                <Row gutter={[0, 0]} align=\"stretch\">\r\n                                  <Col flex=\"auto\">\r\n                                    <AvatarUpdate\r\n                                      setImage={(img) => this.setImage(img)}\r\n                                      defaultValue={\r\n                                        this.state.defaultValue != null\r\n                                          ? this.state.defaultValue.MUTPHOTOS\r\n                                          : null\r\n                                      }\r\n                                      readOnly={\r\n                                        this.state.update ? false : true\r\n                                      }\r\n                                    />\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>{\" \"}\r\n                              <Col span={19}>\r\n                                <Row\r\n                                  gutter={[0, 0]}\r\n                                  align=\"stretch\"\r\n                                  justify=\"space-between\"\r\n                                >\r\n                                  <Col span={11}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Form.Item\r\n                                          name={\"username\"}\r\n                                          style={{ marginBottom: \"10px\" }}\r\n                                          rules={[\r\n                                            {\r\n                                              required: true,\r\n                                              max: 150,\r\n                                            },\r\n                                          ]}\r\n                                        >\r\n                                          {/* {this.state.update ? ( */}\r\n                                          <Input\r\n                                            addonBefore={this.labelComposant(\r\n                                              \"Username\",\r\n                                              UserOutlined\r\n                                            )}\r\n                                            readOnly={\r\n                                              this.state.update ? false : true\r\n                                            }\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                          {/* ) : (\r\n                                            <Typography\r\n                                              style={{ display: \"flex\" }}\r\n                                            >\r\n                                              {this.state.defaultValue.username}\r\n                                            </Typography>\r\n                                          )} */}\r\n                                        </Form.Item>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>\r\n                                  <Col span={11}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        {/* {this.state.update ? ( */}\r\n                                        <Input.Group compact>\r\n                                          <div\r\n                                            style={{\r\n                                              border: \"1px solid #dcdcdc\",\r\n                                              display: \"inline-flex\",\r\n                                              width: \"128px\",\r\n                                              backgroundColor: \"#fafafa\",\r\n                                              paddingLeft: \"10px\",\r\n                                              height: \"32px\",\r\n                                              width: \"34%\",\r\n                                            }}\r\n                                          >\r\n                                            {this.labelComposant(\r\n                                              \"Profile\",\r\n                                              UserOutlined\r\n                                            )}\r\n                                          </div>\r\n                                          <Form.Item\r\n                                            name={\"MUTPROFID\"}\r\n                                            style={{\r\n                                              marginBottom: \"10px\",\r\n                                              width: \"66%\",\r\n                                            }}\r\n                                            hasFeedback\r\n                                            rules={[\r\n                                              {\r\n                                                required: true,\r\n                                              },\r\n                                            ]}\r\n                                          >\r\n                                            <Select\r\n                                              onChange={this.handleInputChange}\r\n                                              allowClear\r\n                                              disabled={\r\n                                                this.state.update ? false : true\r\n                                              }\r\n                                            >\r\n                                              {this.state.Profiles.map(\r\n                                                (data, index) => (\r\n                                                  <Select.Option\r\n                                                    value={data.ID_ROWID}\r\n                                                  >\r\n                                                    {data.MPRLIBCOUR}\r\n                                                  </Select.Option>\r\n                                                )\r\n                                              )}\r\n                                            </Select>\r\n                                          </Form.Item>\r\n                                        </Input.Group>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>\r\n                                  <Col span={11}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Form.Item\r\n                                          style={{ marginBottom: \"10px\" }}\r\n                                          name={\"email\"}\r\n                                          rules={[\r\n                                            {\r\n                                              required: true,\r\n                                              max: 254,\r\n                                              type: \"email\",\r\n                                            },\r\n                                          ]}\r\n                                        >\r\n                                          <Input\r\n                                            addonBefore={this.labelComposant(\r\n                                              \"Email\",\r\n                                              MailOutlined\r\n                                            )}\r\n                                            readOnly={\r\n                                              this.state.update ? false : true\r\n                                            }\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        </Form.Item>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>{\" \"}\r\n                                  {this.state.defaultValue == null && (\r\n                                    <Col span={11}>\r\n                                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                                        <Col flex=\"auto\">\r\n                                          <Form.Item\r\n                                            style={{ marginBottom: \"10px\" }}\r\n                                            label={\r\n                                              !this.state.update && (\r\n                                                <Typography\r\n                                                  style={{\r\n                                                    fontSize: \"14px\",\r\n                                                    fontWeight: \"600\",\r\n                                                  }}\r\n                                                >\r\n                                                  Password\r\n                                                </Typography>\r\n                                              )\r\n                                            }\r\n                                            name={\"password1\"}\r\n                                            rules={[\r\n                                              {\r\n                                                required: true,\r\n                                                max: 128,\r\n                                              },\r\n                                            ]}\r\n                                            hasFeedback\r\n                                          >\r\n                                            <Input.Password\r\n                                              addonBefore={this.labelComposant(\r\n                                                \"Password\",\r\n                                                LockOutlined\r\n                                              )}\r\n                                              onChange={this.handleInputChange}\r\n                                              iconRender={(visible) =>\r\n                                                visible ? (\r\n                                                  <EyeTwoTone />\r\n                                                ) : (\r\n                                                  <EyeInvisibleOutlined />\r\n                                                )\r\n                                              }\r\n                                            />\r\n                                            {/* ) : (\r\n                                            <Typography\r\n                                              style={{ display: \"flex\" }}\r\n                                            >\r\n                                              {\r\n                                                this.state.defaultValue\r\n                                                  .password2\r\n                                              }\r\n                                            </Typography> */}\r\n                                          </Form.Item>\r\n                                        </Col>\r\n                                      </Row>\r\n                                    </Col>\r\n                                  )}\r\n                                  <Col span={11}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Form.Item\r\n                                          style={{ marginBottom: \"10px\" }}\r\n                                          name={\"first_name\"}\r\n                                          hasFeedback\r\n                                          rules={[\r\n                                            {\r\n                                              required: true,\r\n                                              max: 128,\r\n                                            },\r\n                                          ]}\r\n                                        >\r\n                                          <Input\r\n                                            addonBefore={this.labelComposant(\r\n                                              \"First name\",\r\n                                              UserOutlined\r\n                                            )}\r\n                                            readOnly={\r\n                                              this.state.update ? false : true\r\n                                            }\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        </Form.Item>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>{\" \"}\r\n                                  {this.state.defaultValue == null && (\r\n                                    <Col span={11}>\r\n                                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                                        <Col flex=\"auto\">\r\n                                          <Form.Item\r\n                                            style={{ marginBottom: \"10px\" }}\r\n                                            name={\"password2\"}\r\n                                            dependencies={[\"password1\"]}\r\n                                            hasFeedback\r\n                                            label={\r\n                                              !this.state.update && (\r\n                                                <Typography\r\n                                                  style={{\r\n                                                    fontSize: \"14px\",\r\n                                                    fontWeight: \"600\",\r\n                                                  }}\r\n                                                >\r\n                                                  Password\r\n                                                </Typography>\r\n                                              )\r\n                                            }\r\n                                            rules={[\r\n                                              {\r\n                                                required: true,\r\n                                                message:\r\n                                                  \"Please confirm your password!\",\r\n                                              },\r\n                                              ({ getFieldValue }) => ({\r\n                                                validator(_, value) {\r\n                                                  if (\r\n                                                    !value ||\r\n                                                    getFieldValue(\r\n                                                      \"password1\"\r\n                                                    ) === value\r\n                                                  ) {\r\n                                                    return Promise.resolve();\r\n                                                  }\r\n\r\n                                                  return Promise.reject(\r\n                                                    new Error(\r\n                                                      \"The two passwords that you entered do not match!\"\r\n                                                    )\r\n                                                  );\r\n                                                },\r\n                                              }),\r\n                                            ]}\r\n                                          >\r\n                                            <Input.Password\r\n                                              addonBefore={this.labelComposant(\r\n                                                \"Password\",\r\n                                                LockOutlined\r\n                                              )}\r\n                                              onChange={this.handleInputChange}\r\n                                              iconRender={(visible) =>\r\n                                                visible ? (\r\n                                                  <EyeTwoTone />\r\n                                                ) : (\r\n                                                  <EyeInvisibleOutlined />\r\n                                                )\r\n                                              }\r\n                                            />\r\n                                            {/* ) : (\r\n                                            <Typography\r\n                                              style={{ display: \"flex\" }}\r\n                                            >\r\n                                              {\r\n                                                this.state.defaultValue\r\n                                                  .password1\r\n                                              }\r\n                                            </Typography> */}\r\n                                          </Form.Item>\r\n                                        </Col>\r\n                                      </Row>\r\n                                    </Col>\r\n                                  )}\r\n                                  <Col span={11}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Form.Item\r\n                                          style={{ marginBottom: \"10px\" }}\r\n                                          name={\"last_name\"}\r\n                                          hasFeedback\r\n                                          rules={[\r\n                                            {\r\n                                              required: true,\r\n                                              max: 150,\r\n                                            },\r\n                                          ]}\r\n                                        >\r\n                                          <Input\r\n                                            addonBefore={this.labelComposant(\r\n                                              \"Last name\",\r\n                                              UserOutlined\r\n                                            )}\r\n                                            readOnly={\r\n                                              this.state.update ? false : true\r\n                                            }\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        </Form.Item>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>\r\n                                  <Col span={11}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Form.Item\r\n                                          style={{ marginBottom: \"10px\" }}\r\n                                          name={\"MUTUTLEXT\"}\r\n                                          hasFeedback\r\n                                          rules={[\r\n                                            {\r\n                                              required: false,\r\n                                              max: 10,\r\n                                            },\r\n                                          ]}\r\n                                        >\r\n                                          <Input\r\n                                            addonBefore={this.labelComposant(\r\n                                              \"Code externe\",\r\n                                              UserOutlined\r\n                                            )}\r\n                                            readOnly={\r\n                                              this.state.update ? false : true\r\n                                            }\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        </Form.Item>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>\r\n                                  <Col span={11}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        {/* {this.state.update ? ( */}\r\n                                        <Input.Group compact>\r\n                                          <div\r\n                                            style={{\r\n                                              border: \"1px solid #dcdcdc\",\r\n                                              display: \"inline-flex\",\r\n                                              width: \"128px\",\r\n                                              backgroundColor: \"#fafafa\",\r\n                                              paddingLeft: \"10px\",\r\n                                              height: \"32px\",\r\n                                              width: \"34%\",\r\n                                            }}\r\n                                          >\r\n                                            {this.labelComposant(\r\n                                              \"Langue\",\r\n                                              GlobalOutlined\r\n                                            )}\r\n                                          </div>\r\n                                          <Form.Item\r\n                                            name={\"MUTLANGUE\"}\r\n                                            style={{\r\n                                              marginBottom: \"10px\",\r\n                                              width: \"66%\",\r\n                                            }}\r\n                                            hasFeedback\r\n                                            rules={[\r\n                                              {\r\n                                                required: false,\r\n                                              },\r\n                                            ]}\r\n                                          >\r\n                                            <Select\r\n                                              onChange={this.handleInputChange}\r\n                                              allowClear\r\n                                              disabled={\r\n                                                this.state.update ? false : true\r\n                                              }\r\n                                            >\r\n                                              <Select.Option value={\"Anglais\"}>\r\n                                                Anglais\r\n                                              </Select.Option>\r\n                                              <Select.Option value={\"Français\"}>\r\n                                                Français\r\n                                              </Select.Option>\r\n                                              <Select.Option value={\"Arabe\"}>\r\n                                                Arabe\r\n                                              </Select.Option>\r\n                                            </Select>\r\n                                          </Form.Item>\r\n                                        </Input.Group>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>{\" \"}\r\n                                  <Col span={11}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Form.Item\r\n                                          style={{ marginBottom: \"10px\" }}\r\n                                          name={\"date\"}\r\n                                          hasFeedback\r\n                                          rules={[\r\n                                            {\r\n                                              required: true,\r\n                                            },\r\n                                          ]}\r\n                                        >\r\n                                          <DatePicker.RangePicker\r\n                                            style={{ width: \"100%\" }}\r\n                                            addonBefore={this.labelComposant(\r\n                                              \"Periode\",\r\n                                              LockOutlined\r\n                                            )}\r\n                                            showTime\r\n                                            disabled={\r\n                                              this.state.update ? false : true\r\n                                            }\r\n                                            format=\"YYYY-MM-DD HH:mm:ss\"\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        </Form.Item>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>{\" \"}\r\n                                </Row>\r\n                                {/* <input type=\"file\" onChange=/> */}\r\n                              </Col>{\" \"}\r\n                            </Row>\r\n                          </Form>\r\n                        </ConfigProvider>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col span={18}>\r\n                <div>\r\n                  <Tabs type=\"card\" className=\"tabs-formulaire dms-tabs\">\r\n                    <Tabs.TabPane tab={<Tab title={\"Contact\"} />} key=\"2\">\r\n                      <div\r\n                        className={\"template-tabs-panel\"}\r\n                        style={{ padding: \"15px\", height: \"342px\" }}\r\n                      >\r\n                        <TabInput\r\n                          isLoading={this.state.isLoading}\r\n                          changecome={this.state.changecome}\r\n                          updateCtc={this.state.update}\r\n                          ref={this.formContactRef}\r\n                          contact={\r\n                            this.state.defaultValue != null\r\n                              ? this.state.defaultValue.contact\r\n                              : null\r\n                          }\r\n                          // id={this.state.defaultValue.}\r\n                          onFormulaireChange={(value) =>\r\n                            this.props.onFormulaireChange(value)\r\n                          }\r\n                          token={this.state.token}\r\n                          hostStorage={this.props.hostStorage}\r\n                          goTo={(link) => this.props.goTo(link)}\r\n                          handleInputChange={this.handleInputChange}\r\n                          user_id={this.props.match.params.id}\r\n                          service={this.props.service}\r\n                        />\r\n                      </div>\r\n                    </Tabs.TabPane>{\" \"}\r\n                    {/* <Tabs.TabPane tab={<Tab title={\"Adresse\"} />} key=\"1\">\r\n                      <div className={\"template-tabs-panel\"}>\r\n                        <TabTable />\r\n                      </div>\r\n                    </Tabs.TabPane> */}\r\n                    <Tabs.TabPane tab={<Tab title={\"Adresse\"} />} key=\"3\">\r\n                      <div\r\n                        className={\"template-tabs-panel\"}\r\n                        style={{ height: \"342px\" }}\r\n                      >\r\n                        <EditableTable\r\n                          ref={this.adressRef}\r\n                          updateAdress={this.state.update}\r\n                          datasource={\r\n                            this.state.defaultValue != null\r\n                              ? this.state.defaultValue.contact != null\r\n                                ? this.state.defaultValue.contact[0].Adresses\r\n                                : null\r\n                              : null\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Tabs.TabPane>\r\n                  </Tabs>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Spin>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouterAndRef(Formulaire);\r\n","import React, { useImperativeHandle } from \"react\";\r\nimport {\r\n  MemoryRouter,\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n  Redirect,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport DMSProfileHomeSearch from \"./pages/Searche\";\r\nimport DMSProfileInserting from \"./pages/Formulaire\";\r\nimport DMSProfileAdvancedSearch from \"./pages/Results\";\r\nimport Error404 from \"../../templates/template1/Pages/Error404\";\r\nimport {\r\n  userCreationPath,\r\n  userAdvancedSearchPath,\r\n  userHomeSearchPath,\r\n  userUpdatePath,\r\n} from \"../../config\";\r\nconst DMSRoute = React.forwardRef((props, ref) => {\r\n  const history = useHistory();\r\n  const refFormulaire = React.createRef();\r\n  const refHistory = React.createRef();\r\n  useImperativeHandle(ref, () => ({\r\n    Route: {\r\n      search: userHomeSearchPath,\r\n      create: userCreationPath,\r\n      update: userUpdatePath,\r\n      result: userAdvancedSearchPath,\r\n    },\r\n    removeElem: (datefin) => {\r\n      refFormulaire.current.removeElem(datefin);\r\n    },\r\n    activerUpdate: () => {\r\n      refFormulaire.current.activerUpdate();\r\n    },\r\n    history: () => {\r\n      return refHistory.current.history;\r\n    },\r\n    onReset: () => {\r\n      refFormulaire.current.onReset();\r\n    },\r\n    onSubmit: () => {\r\n      refFormulaire.current.onSubmit();\r\n    },\r\n    loadingFormulaire: (value) => {\r\n      refFormulaire.current.loading(value);\r\n      // refFormulaire\r\n    },\r\n    CleanInputChange: (value) => {\r\n      refFormulaire.current.CleanInputChange();\r\n    },\r\n\r\n    history: refHistory.current.history,\r\n    goBack: () => {\r\n      refHistory.current.history.goBack();\r\n    },\r\n    goForward: () => {\r\n      refHistory.current.history.goForward();\r\n    },\r\n  }));\r\n  // history.push(profileHomeSearchPath);\r\n  return (\r\n    <MemoryRouter\r\n      ref={refHistory}\r\n      initialEntries={[userHomeSearchPath]}\r\n      initialIndex={0}\r\n    >\r\n      <Switch>\r\n        {/*  */}\r\n        <Route exact path={userHomeSearchPath}>\r\n          <DMSProfileHomeSearch\r\n            history={history}\r\n            hostStorage={props.hostStorage}\r\n            service={props.service}\r\n            goTo={(link) => props.goTo(link)}\r\n          />\r\n        </Route>\r\n        <Route exact path={userCreationPath}>\r\n          <DMSProfileInserting\r\n            history={history}\r\n            hostStorage={props.hostStorage}\r\n            icon={props.icon}\r\n            disabelEditButton={(value) => props.disabelEditButton(value)}\r\n            service={props.service}\r\n            services={props.services.formulaire}\r\n            ref={refFormulaire}\r\n            goTo={(link) => props.goTo(link)}\r\n            // wrappedComponentRef={(c) => (refFormulaire = c)}\r\n            onFormulaireChange={(value) => props.onFormulaireChange(value)}\r\n          />\r\n        </Route>\r\n        <Route exact path={userAdvancedSearchPath}>\r\n          <DMSProfileAdvancedSearch\r\n            history={history}\r\n            hostStorage={props.hostStorage}\r\n            service={props.service}\r\n            services={props.services.result}\r\n            goTo={(link) => props.goTo(link)}\r\n          />\r\n        </Route>\r\n        <Route exact path={userUpdatePath + \":id\"}>\r\n          <DMSProfileInserting\r\n            history={history}\r\n            hostStorage={props.hostStorage}\r\n            icon={props.icon}\r\n            ref={refFormulaire}\r\n            disabelEditButton={(value) => props.disabelEditButton(value)}\r\n            service={props.service}\r\n            services={props.services.formulaire}\r\n            onFormulaireChange={(value) => props.onFormulaireChange(value)}\r\n            goTo={(link) => props.goTo(link)}\r\n          />\r\n        </Route>\r\n        <Route path=\"404\">\r\n          <Error404 />\r\n        </Route>\r\n        <Redirect from=\"*\" to=\"404\" />\r\n      </Switch>\r\n    </MemoryRouter>\r\n  );\r\n});\r\n\r\nexport default DMSRoute;\r\n","const typeTemplate = \"Le champ ${label} is not a valid ${type}\";\r\nexport const validateMessages = {\r\n  fr: {\r\n    required: \"Le champ ${label} is Required!\",\r\n    default: \"Validation error on field '${name}'\",\r\n    enum: \"Le champ ${label} must be one of [${enum}]\",\r\n    whitespace: \"Le champ ${label} cannot be empty\",\r\n    date: {\r\n      format: \"Le champ ${label} is invalid for format date\",\r\n      parse: \"Le champ ${label} could not be parsed as date\",\r\n      invalid: \"Le champ ${label} is invalid date\",\r\n    },\r\n    types: {\r\n      string: typeTemplate,\r\n      method: typeTemplate,\r\n      array: typeTemplate,\r\n      object: typeTemplate,\r\n      number: typeTemplate,\r\n      date: typeTemplate,\r\n      boolean: typeTemplate,\r\n      integer: typeTemplate,\r\n      float: typeTemplate,\r\n      regexp: typeTemplate,\r\n      email: typeTemplate,\r\n      url: typeTemplate,\r\n      hex: typeTemplate,\r\n    },\r\n    string: {\r\n      len: \"Le champ ${label} must be exactly ${len} characters\",\r\n      min: \"Le champ ${label} must be at least ${min} characters\",\r\n      max: \"Le champ ${label} cannot be longer than ${max} characters\",\r\n      range: \"Le champ ${label} must be between ${min} and ${max} characters\",\r\n    },\r\n    number: {\r\n      len: \"Le champ ${label} must equal ${len}\",\r\n      min: \"Le champ ${label} cannot be less than ${min}\",\r\n      max: \"Le champ ${label} cannot be greater than ${max}\",\r\n      range: \"Le champ ${label} must be between ${min} and ${max}\",\r\n    },\r\n    array: {\r\n      len: \"Le champ ${label} must be exactly ${len} in length\",\r\n      min: \"Le champ ${label} cannot be less than ${min} in length\",\r\n      max: \"Le champ ${label} cannot be greater than ${max} in length\",\r\n      range: \"Le champ ${label} must be between ${min} and ${max} in length\",\r\n    },\r\n    pattern: {\r\n      mismatch: \"Le champ ${label} does not match pattern ${pattern}\",\r\n    },\r\n  },\r\n};\r\nexport const SMExemple = [\r\n  { title: \"categorie 0\", value: 0, mere: null },\r\n  { title: \"categorie 0-1\", value: 1, mere: 0 },\r\n  { title: \"categorie 0-2\", value: 2, mere: 0 },\r\n  { title: \"categorie 1-0\", value: 3, mere: 1 },\r\n  { title: \"categorie 1-1\", value: 4, mere: 1 },\r\n  { title: \"categorie 4-0\", value: 6, mere: 4 },\r\n  { title: \"categorie 2-0\", value: 5, mere: 2 },\r\n];\r\nexport const SMExemple1 = [\r\n  {\r\n    value: \"0\",\r\n    title: \"categorie 0\",\r\n    child: [\r\n      { value: \"0-0\", title: \"categorie 0-0\" },\r\n      {\r\n        value: \"0-1\",\r\n        title: \"categorie 0-1\",\r\n        child: [\r\n          { value: \"0-1-0\", title: \"categorie 0-1-0\" },\r\n          { value: \"0-1-1\", title: \"categorie 0-1-1\" },\r\n          { value: \"0-1-2\", title: \"categorie 0-1-2\" },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    value: \"1\",\r\n    title: \"categorie 1\",\r\n    child: [\r\n      { value: \"1-0\", title: \"categorie 1-0\" },\r\n      { value: \"1-1\", title: \"categorie 1-1\" },\r\n    ],\r\n  },\r\n];\r\nexport const Pays = {\r\n  AF: \"Afghanistan\",\r\n  ZA: \"Afrique du Sud\",\r\n  AL: \"Albanie\",\r\n  DZ: \"Algérie\",\r\n  DE: \"Allemagne\",\r\n  AD: \"Andorre\",\r\n  AO: \"Angola\",\r\n  AI: \"Anguilla\",\r\n  AQ: \"Antarctique\",\r\n  AG: \"Antigua-et-Barbuda\",\r\n  AN: \"Antilles néerlandaises\",\r\n  SA: \"Arabie saoudite\",\r\n  AR: \"Argentine\",\r\n  AM: \"Arménie\",\r\n  AW: \"Aruba\",\r\n  AU: \"Australie\",\r\n  AT: \"Autriche\",\r\n  AZ: \"Azerbaïdjan\",\r\n  BS: \"Bahamas\",\r\n  BH: \"Bahreïn\",\r\n  BD: \"Bangladesh\",\r\n  BB: \"Barbade\",\r\n  BY: \"Bélarus\",\r\n  BE: \"Belgique\",\r\n  BZ: \"Belize\",\r\n  BJ: \"Bénin\",\r\n  BM: \"Bermudes\",\r\n  BT: \"Bhoutan\",\r\n  BO: \"Bolivie\",\r\n  BA: \"Bosnie-Herzégovine\",\r\n  BW: \"Botswana\",\r\n  BR: \"Brésil\",\r\n  BN: \"Brunéi Darussalam\",\r\n  BG: \"Bulgarie\",\r\n  BF: \"Burkina Faso\",\r\n  BI: \"Burundi\",\r\n  KH: \"Cambodge\",\r\n  CM: \"Cameroun\",\r\n  CA: \"Canada\",\r\n  CV: \"Cap-Vert\",\r\n  EA: \"Ceuta et Melilla\",\r\n  CL: \"Chili\",\r\n  CN: \"Chine\",\r\n  CY: \"Chypre\",\r\n  CO: \"Colombie\",\r\n  KM: \"Comores\",\r\n  CG: \"Congo-Brazzaville\",\r\n  KP: \"Corée du Nord\",\r\n  KR: \"Corée du Sud\",\r\n  CR: \"Costa Rica\",\r\n  CI: \"Côte d’Ivoire\",\r\n  HR: \"Croatie\",\r\n  CU: \"Cuba\",\r\n  DK: \"Danemark\",\r\n  DG: \"Diego Garcia\",\r\n  DJ: \"Djibouti\",\r\n  DM: \"Dominique\",\r\n  EG: \"Égypte\",\r\n  SV: \"El Salvador\",\r\n  AE: \"Émirats arabes unis\",\r\n  EC: \"Équateur\",\r\n  ER: \"Érythrée\",\r\n  ES: \"Espagne\",\r\n  EE: \"Estonie\",\r\n  VA: \"État de la Cité du Vatican\",\r\n  FM: \"États fédérés de Micronésie\",\r\n  US: \"États-Unis\",\r\n  ET: \"Éthiopie\",\r\n  FJ: \"Fidji\",\r\n  FI: \"Finlande\",\r\n  FR: \"France\",\r\n  GA: \"Gabon\",\r\n  GM: \"Gambie\",\r\n  GE: \"Géorgie\",\r\n  GS: \"Géorgie du Sud et les îles Sandwich du Sud\",\r\n  GH: \"Ghana\",\r\n  GI: \"Gibraltar\",\r\n  GR: \"Grèce\",\r\n  GD: \"Grenade\",\r\n  GL: \"Groenland\",\r\n  GP: \"Guadeloupe\",\r\n  GU: \"Guam\",\r\n  GT: \"Guatemala\",\r\n  GG: \"Guernesey\",\r\n  GN: \"Guinée\",\r\n  GQ: \"Guinée équatoriale\",\r\n  GW: \"Guinée-Bissau\",\r\n  GY: \"Guyana\",\r\n  GF: \"Guyane française\",\r\n  HT: \"Haïti\",\r\n  HN: \"Honduras\",\r\n  HU: \"Hongrie\",\r\n  BV: \"Île Bouvet\",\r\n  CX: \"Île Christmas\",\r\n  CP: \"Île Clipperton\",\r\n  AC: \"Île de l'Ascension\",\r\n  IM: \"Île de Man\",\r\n  NF: \"Île Norfolk\",\r\n  AX: \"Îles Åland\",\r\n  KY: \"Îles Caïmans\",\r\n  IC: \"Îles Canaries\",\r\n  CC: \"Îles Cocos - Keeling\",\r\n  CK: \"Îles Cook\",\r\n  FO: \"Îles Féroé\",\r\n  HM: \"Îles Heard et MacDonald\",\r\n  FK: \"Îles Malouines\",\r\n  MP: \"Îles Mariannes du Nord\",\r\n  MH: \"Îles Marshall\",\r\n  UM: \"Îles Mineures Éloignées des États-Unis\",\r\n  SB: \"Îles Salomon\",\r\n  TC: \"Îles Turks et Caïques\",\r\n  VG: \"Îles Vierges britanniques\",\r\n  VI: \"Îles Vierges des États-Unis\",\r\n  IN: \"Inde\",\r\n  ID: \"Indonésie\",\r\n  IQ: \"Irak\",\r\n  IR: \"Iran\",\r\n  IE: \"Irlande\",\r\n  IS: \"Islande\",\r\n  IL: \"Israël\",\r\n  IT: \"Italie\",\r\n  JM: \"Jamaïque\",\r\n  JP: \"Japon\",\r\n  JE: \"Jersey\",\r\n  JO: \"Jordanie\",\r\n  KZ: \"Kazakhstan\",\r\n  KE: \"Kenya\",\r\n  KG: \"Kirghizistan\",\r\n  KI: \"Kiribati\",\r\n  KW: \"Koweït\",\r\n  LA: \"Laos\",\r\n  LS: \"Lesotho\",\r\n  LV: \"Lettonie\",\r\n  LB: \"Liban\",\r\n  LR: \"Libéria\",\r\n  LY: \"Libye\",\r\n  LI: \"Liechtenstein\",\r\n  LT: \"Lituanie\",\r\n  LU: \"Luxembourg\",\r\n  MK: \"Macédoine\",\r\n  MG: \"Madagascar\",\r\n  MY: \"Malaisie\",\r\n  MW: \"Malawi\",\r\n  MV: \"Maldives\",\r\n  ML: \"Mali\",\r\n  MT: \"Malte\",\r\n  MA: \"Maroc\",\r\n  MQ: \"Martinique\",\r\n  MU: \"Maurice\",\r\n  MR: \"Mauritanie\",\r\n  YT: \"Mayotte\",\r\n  MX: \"Mexique\",\r\n  MD: \"Moldavie\",\r\n  MC: \"Monaco\",\r\n  MN: \"Mongolie\",\r\n  ME: \"Monténégro\",\r\n  MS: \"Montserrat\",\r\n  MZ: \"Mozambique\",\r\n  MM: \"Myanmar\",\r\n  NA: \"Namibie\",\r\n  NR: \"Nauru\",\r\n  NP: \"Népal\",\r\n  NI: \"Nicaragua\",\r\n  NE: \"Niger\",\r\n  NG: \"Nigéria\",\r\n  NU: \"Niue\",\r\n  NO: \"Norvège\",\r\n  NC: \"Nouvelle-Calédonie\",\r\n  NZ: \"Nouvelle-Zélande\",\r\n  OM: \"Oman\",\r\n  UG: \"Ouganda\",\r\n  UZ: \"Ouzbékistan\",\r\n  PK: \"Pakistan\",\r\n  PW: \"Palaos\",\r\n  PA: \"Panama\",\r\n  PG: \"Papouasie-Nouvelle-Guinée\",\r\n  PY: \"Paraguay\",\r\n  NL: \"Pays-Bas\",\r\n  PE: \"Pérou\",\r\n  PH: \"Philippines\",\r\n  PN: \"Pitcairn\",\r\n  PL: \"Pologne\",\r\n  PF: \"Polynésie française\",\r\n  PR: \"Porto Rico\",\r\n  PT: \"Portugal\",\r\n  QA: \"Qatar\",\r\n  HK: \"R.A.S. chinoise de Hong Kong\",\r\n  MO: \"R.A.S. chinoise de Macao\",\r\n  QO: \"régions éloignées de l’Océanie\",\r\n  CF: \"République centrafricaine\",\r\n  CD: \"République démocratique du Congo\",\r\n  DO: \"République dominicaine\",\r\n  CZ: \"République tchèque\",\r\n  RE: \"Réunion\",\r\n  RO: \"Roumanie\",\r\n  GB: \"Royaume-Uni\",\r\n  RU: \"Russie\",\r\n  RW: \"Rwanda\",\r\n  EH: \"Sahara occidental\",\r\n  BL: \"Saint-Barthélémy\",\r\n  KN: \"Saint-Kitts-et-Nevis\",\r\n  SM: \"Saint-Marin\",\r\n  MF: \"Saint-Martin\",\r\n  PM: \"Saint-Pierre-et-Miquelon\",\r\n  VC: \"Saint-Vincent-et-les Grenadines\",\r\n  SH: \"Sainte-Hélène\",\r\n  LC: \"Sainte-Lucie\",\r\n  WS: \"Samoa\",\r\n  AS: \"Samoa américaines\",\r\n  ST: \"Sao Tomé-et-Principe\",\r\n  SN: \"Sénégal\",\r\n  RS: \"Serbie\",\r\n  CS: \"Serbie-et-Monténégro\",\r\n  SC: \"Seychelles\",\r\n  SL: \"Sierra Leone\",\r\n  SG: \"Singapour\",\r\n  SK: \"Slovaquie\",\r\n  SI: \"Slovénie\",\r\n  SO: \"Somalie\",\r\n  SD: \"Soudan\",\r\n  LK: \"Sri Lanka\",\r\n  SE: \"Suède\",\r\n  CH: \"Suisse\",\r\n  SR: \"Suriname\",\r\n  SJ: \"Svalbard et Île Jan Mayen\",\r\n  SZ: \"Swaziland\",\r\n  SY: \"Syrie\",\r\n  TJ: \"Tadjikistan\",\r\n  TW: \"Taïwan\",\r\n  TZ: \"Tanzanie\",\r\n  TD: \"Tchad\",\r\n  TF: \"Terres australes françaises\",\r\n  IO: \"Territoire britannique de l'océan Indien\",\r\n  PS: \"Territoire palestinien\",\r\n  TH: \"Thaïlande\",\r\n  TL: \"Timor oriental\",\r\n  TG: \"Togo\",\r\n  TK: \"Tokelau\",\r\n  TO: \"Tonga\",\r\n  TT: \"Trinité-et-Tobago\",\r\n  TA: \"Tristan da Cunha\",\r\n  TN: \"Tunisie\",\r\n  TM: \"Turkménistan\",\r\n  TR: \"Turquie\",\r\n  TV: \"Tuvalu\",\r\n  UA: \"Ukraine\",\r\n  EU: \"Union européenne\",\r\n  UY: \"Uruguay\",\r\n  VU: \"Vanuatu\",\r\n  VE: \"Venezuela\",\r\n  VN: \"Viêt Nam\",\r\n  WF: \"Wallis-et-Futuna\",\r\n  YE: \"Yémen\",\r\n  ZM: \"Zambie\",\r\n  ZW: \"Zimbabwe\",\r\n};\r\n","import { notification } from \"dmsui\";\r\nimport { domaine, userApiEndPoint } from \"../config\";\r\nimport http from \"./httpService\";\r\nexport const getAllProduits = (produitApiEndPoint, search, token, filter) => {\r\n  return http.get(\r\n    produitApiEndPoint + (search != null ? \"?search=\" + search : \"?\" + filter),\r\n    {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\",\r\n        accept: \"application/json\",\r\n      },\r\n    }\r\n  );\r\n};\r\nexport const getAllSM = (produitApiEndPoint, search, token) => {\r\n  return http.get(produitApiEndPoint + \"Reseau-Structures/?search=\" + search, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\nexport const getAllTVA = (TVAApiEndPoint, token) => {\r\n  return http.get(TVAApiEndPoint, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\nexport const getUlByPrd = (produitApiEndPoint, idPrd, token) => {\r\n  return http.get(\r\n    produitApiEndPoint + \"Unite-Logistiques/?RPULCINPRD=\" + idPrd,\r\n    {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\",\r\n        accept: \"application/json\",\r\n      },\r\n    }\r\n  );\r\n};\r\nexport const getTarifeBySite = (produitApiEndPoint, idSite, token) => {\r\n  return http.get(produitApiEndPoint + \"Tarife-vente/?RTVSITE=\" + idSite, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\nexport const getProduitByID = (produitApiEndPoint, id, token) => {\r\n  return http.get(`${produitApiEndPoint}${id}`, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\nexport const insertProduit = async (\r\n  produitApiEndPoint,\r\n  token,\r\n  produit,\r\n  photoPrd,\r\n  SM,\r\n  VL,\r\n  // VV,\r\n  // photoVV,\r\n  files\r\n) => {\r\n  SM != null &&\r\n    SM.New.map(async (dataSM, index) => {\r\n      const { data } = await http.post(\r\n        produitApiEndPoint + \"Reseau-Structures/\",\r\n        dataSM,\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n            \"Content-Type\": \"application/json\",\r\n            accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      var LienSM = {\r\n        RLRDDEB: dataSM.RLRDDEB,\r\n        RLRCINSMM: dataSM.RLRINSMM,\r\n        RLRCINSMF: data.ID_ROWID,\r\n      };\r\n      await http.post(produitApiEndPoint + \"Lien-Structures/\", LienSM, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n          \"Content-Type\": \"application/json\",\r\n          accept: \"application/json\",\r\n        },\r\n      });\r\n    });\r\n  const PRD = await http.post(produitApiEndPoint, produit, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n  photoPrd != null &&\r\n    http.patch(`${produitApiEndPoint}${PRD.data.ID_ROWID}/`, photoPrd, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\":\r\n          \"multipart/form-data; boundary=----WebKitFormBoundaryEwxlBBDdYQdWdUgK\",\r\n      },\r\n    });\r\n  VL != null &&\r\n    VL.New.map(async (dataVL, index) => {\r\n      dataVL.RPLLCINPRD = PRD.data.ID_ROWID;\r\n      const ResVl = await http.post(\r\n        produitApiEndPoint + \"Variante-Logistiques/\",\r\n        dataVL,\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n            \"Content-Type\": \"application/json\",\r\n            accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      dataVL.ASC != null &&\r\n        dataVL.ASC.map(async (dataASC, index) => {\r\n          dataASC.RACCINVL = ResVl.data.ID_ROWID;\r\n          const ResUl = await http.post(\r\n            produitApiEndPoint + \"Assortiment-Commendable/\",\r\n            dataASC,\r\n            {\r\n              headers: {\r\n                Authorization: \"Bearer \" + token,\r\n                \"Content-Type\": \"application/json\",\r\n                accept: \"application/json\",\r\n              },\r\n            }\r\n          );\r\n        });\r\n      dataVL.UL != null &&\r\n        dataVL.UL.map(async (dataUL, index) => {\r\n          dataUL.RPULCINVL = ResVl.data.ID_ROWID;\r\n          const ResUl = await http.post(\r\n            produitApiEndPoint + \"Unite-Logistiques/\",\r\n            dataUL,\r\n            {\r\n              headers: {\r\n                Authorization: \"Bearer \" + token,\r\n                \"Content-Type\": \"application/json\",\r\n                accept: \"application/json\",\r\n              },\r\n            }\r\n          );\r\n          dataUL.VV != null &&\r\n            dataUL.VV.map(async (dataVV, index) => {\r\n              // dataVV.RPVVCINUL = ResUl.data.ID_ROWID;\r\n              let VVToSend = new FormData();\r\n              VVToSend.append(\"RPVVCEXT\", dataVV.RPVVCEXT);\r\n              VVToSend.append(\"RPVVLIBL\", dataVV.RPVVLIBL);\r\n              VVToSend.append(\"RPVVLIBC\", dataVV.RPVVLIBC);\r\n              // VVToSend.append(\"RPVVETAT\", dataVV.RPVVETAT);\r\n              VVToSend.append(\"RPVVETAT\", 1);\r\n              VVToSend.append(\"RPVVPUVC\", dataVV.RPVVPUVC);\r\n              dataVV.RPVVPHOTO != null &&\r\n                VVToSend.append(\"RPVVPHOTO\", dataVV.RPVVPHOTO);\r\n              VVToSend.append(\"RPVVCINUL\", ResUl.data.ID_ROWID);\r\n              const ResVV = await http.post(\r\n                produitApiEndPoint + \"Variante-Ventes/\",\r\n                VVToSend,\r\n                {\r\n                  headers: {\r\n                    Authorization: \"Bearer \" + token,\r\n                    \"Content-Type\":\r\n                      \"multipart/form-data; boundary=----WebKitFormBoundaryEwxlBBDdYQdWdUgK\",\r\n                  },\r\n                }\r\n              );\r\n              dataVV.ASV != null &&\r\n                dataVV.ASV.map(async (dataASV, index) => {\r\n                  dataASV.RAVCINVV = ResVV.data.ID_ROWID;\r\n                  await http.post(\r\n                    produitApiEndPoint + \"Assortiment-Vendable/\",\r\n                    dataASV,\r\n                    {\r\n                      headers: {\r\n                        Authorization: \"Bearer \" + token,\r\n                        \"Content-Type\": \"application/json\",\r\n                        accept: \"application/json\",\r\n                      },\r\n                    }\r\n                  );\r\n                });\r\n              await http.post(\r\n                produitApiEndPoint + \"Prix-Vente/\",\r\n                {\r\n                  RPVPRIX: dataVV.RPVPRIX,\r\n\r\n                  RPVCINVV: ResVV.data.ID_ROWID,\r\n                },\r\n                {\r\n                  headers: {\r\n                    Authorization: \"Bearer \" + token,\r\n                    \"Content-Type\": \"application/json\",\r\n                    accept: \"application/json\",\r\n                  },\r\n                }\r\n              );\r\n              await http.post(\r\n                produitApiEndPoint + \"Code-Caisses/\",\r\n                {\r\n                  PRCDDEB: dataVV.PRCDDEB,\r\n                  PRCCODE: dataVV.PRCCODE,\r\n                  PRCDFIN: dataVV.PRCDFIN,\r\n                  RPCINUV: ResVV.data.ID_ROWID,\r\n                },\r\n                {\r\n                  headers: {\r\n                    Authorization: \"Bearer \" + token,\r\n                    \"Content-Type\": \"application/json\",\r\n                    accept: \"application/json\",\r\n                  },\r\n                }\r\n              );\r\n            });\r\n        });\r\n    });\r\n  files != null &&\r\n    files.New.map(async (file, index) => {\r\n      let File = new FormData();\r\n      File.append(\"RPTFILE\", file.RPTFILE);\r\n      File.append(\"RPTNAMFIL\", file.RPTNAMFIL);\r\n      File.append(\"RPTTYPDOC\", file.RPTTYPDOC);\r\n      File.append(\"RPTCINPRD\", PRD.data.ID_ROWID);\r\n      await http.post(produitApiEndPoint + \"Attachement-Files/\", File, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n          \"Content-Type\":\r\n            \"multipart/form-data; boundary=----WebKitFormBoundaryEwxlBBDdYQdWdUgK\",\r\n        },\r\n      });\r\n    });\r\n\r\n  return;\r\n};\r\n\r\nexport const updateProduit = async (\r\n  produitApiEndPoint,\r\n  prd_id,\r\n  token,\r\n  produit,\r\n  SM,\r\n  VL,\r\n  files,\r\n  VV,\r\n  UL,\r\n  ASV\r\n) => {\r\n  SM != null &&\r\n    SM.New.map(async (dataSM, index) => {\r\n      const { data } = await http.post(\r\n        produitApiEndPoint + \"Reseau-Structures/\",\r\n        dataSM,\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n            \"Content-Type\": \"application/json\",\r\n            accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      var LienSM = {\r\n        RLRDDEB: dataSM.RLRDDEB,\r\n        RLRCINSMM: dataSM.RLRINSMM,\r\n        RLRCINSMF: data.ID_ROWID,\r\n      };\r\n      await http.post(produitApiEndPoint + \"Lien-Structures/\", LienSM, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n          \"Content-Type\": \"application/json\",\r\n          accept: \"application/json\",\r\n        },\r\n      });\r\n    });\r\n  let prdToSend = new FormData();\r\n  prdToSend.append(\"RPRCEXT\", produit.RPRCEXT);\r\n  prdToSend.append(\"RPRLIBL\", produit.RPRLIBL);\r\n  prdToSend.append(\"RPRLIBC\", produit.RPRLIBC);\r\n  prdToSend.append(\"RPRLANGUE\", produit.RPRLANGUE);\r\n  prdToSend.append(\"RPRDSC\", produit.RPRDSC);\r\n  prdToSend.append(\"RPRTYPE\", produit.RPRTYPE);\r\n  prdToSend.append(\"RPRETAT\", produit.RPRETAT);\r\n\r\n  prdToSend.append(\"RPRCINSM\", produit.RPRCINSM);\r\n  prdToSend.append(\"RPRUSTOCK\", produit.RPRUSTOCK);\r\n  prdToSend.append(\"RPRIGARANTI\", produit.RPRIGARANTI);\r\n\r\n  prdToSend.append(\"RPRIDAnger\", produit.RPRIDAnger);\r\n  !!produit.RPRPHOTO &&\r\n    prdToSend.append(\"RPRPHOTO\", produit.RPRPHOTO.originFileObj);\r\n  await http.put(`${produitApiEndPoint}${prd_id}/`, prdToSend, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\":\r\n        \"multipart/form-data; boundary=----WebKitFormBoundaryEwxlBBDdYQdWdUgK\",\r\n    },\r\n  });\r\n\r\n  VV != null &&\r\n    VV.New.map(async (dataVV, index) => {\r\n      let VVToSend = new FormData();\r\n      VVToSend.append(\"RPVVCEXT\", dataVV.RPVVCEXT);\r\n      VVToSend.append(\"RPVVLIBL\", dataVV.RPVVLIBL);\r\n      VVToSend.append(\"RPVVLIBC\", dataVV.RPVVLIBC);\r\n      // VVToSend.append(\"RPVVETAT\", dataVV.RPVVETAT);\r\n      VVToSend.append(\"RPVVETAT\", 1);\r\n      VVToSend.append(\"RPVVPUVC\", dataVV.RPVVPUVC);\r\n      dataVV.RPVVPHOTO && VVToSend.append(\"RPVVPHOTO\", dataVV.RPVVPHOTO);\r\n      VVToSend.append(\"RPVVCINUL\", dataVV.RPVVCINUL);\r\n      const ResVV = await http.post(\r\n        produitApiEndPoint + \"Variante-Ventes/\",\r\n        VVToSend,\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n            \"Content-Type\":\r\n              \"multipart/form-data; boundary=----WebKitFormBoundaryEwxlBBDdYQdWdUgK\",\r\n          },\r\n        }\r\n      );\r\n      dataVV.ASV != null &&\r\n        dataVV.ASV.map(async (dataASV, index) => {\r\n          dataASV.RAVCINVV = ResVV.data.ID_ROWID;\r\n          await http.post(\r\n            produitApiEndPoint + \"Assortiment-Vendable/\",\r\n            dataASV,\r\n            {\r\n              headers: {\r\n                Authorization: \"Bearer \" + token,\r\n                \"Content-Type\": \"application/json\",\r\n                accept: \"application/json\",\r\n              },\r\n            }\r\n          );\r\n        });\r\n      await http.post(\r\n        produitApiEndPoint + \"Prix-Vente/\",\r\n        {\r\n          RPVPRIX: dataVV.RPVPRIX,\r\n\r\n          RPVCINVV: ResVV.data.ID_ROWID,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n            \"Content-Type\": \"application/json\",\r\n            accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      await http.post(\r\n        produitApiEndPoint + \"Code-Caisses/\",\r\n        {\r\n          PRCDDEB: dataVV.PRCDDEB,\r\n          PRCCODE: dataVV.PRCCODE,\r\n          PRCDFIN: dataVV.PRCDFIN,\r\n          RPCINUV: ResVV.data.ID_ROWID,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n            \"Content-Type\": \"application/json\",\r\n            accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    });\r\n  VV != null &&\r\n    VV.update.map(async (dataVV, index) => {\r\n      let VVToSend = new FormData();\r\n      VVToSend.append(\"RPVVCEXT\", dataVV.RPVVCEXT);\r\n      VVToSend.append(\"RPVVLIBL\", dataVV.RPVVLIBL);\r\n      VVToSend.append(\"RPVVLIBC\", dataVV.RPVVLIBC);\r\n      VVToSend.append(\"RPVVETAT\", dataVV.RPVVETAT);\r\n      VVToSend.append(\"RPVVPUVC\", dataVV.RPVVPUVC);\r\n      // dataVV.RPVVPHOTO && VVToSend.append(\"RPVVPHOTO\", dataVV.RPVVPHOTO);\r\n      VVToSend.append(\"RPVVCINUL\", dataVV.RPVVCINUL);\r\n      const ResVV = await http.put(\r\n        produitApiEndPoint + \"Variante-Ventes/\" + dataVV.ID_ROWID + \"/\",\r\n        VVToSend,\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n            \"Content-Type\":\r\n              \"multipart/form-data; boundary=----WebKitFormBoundaryEwxlBBDdYQdWdUgK\",\r\n          },\r\n        }\r\n      );\r\n    });\r\n  VV != null &&\r\n    VV.delete.map(async (dataVV, index) => {\r\n      http.delete(produitApiEndPoint + \"Variante-Ventes/\" + dataVV.ID_ROWID, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n          \"Content-Type\": \"application/json\",\r\n          accept: \"application/json\",\r\n        },\r\n      });\r\n    });\r\n  VL != null &&\r\n    VL.New.map(async (dataVL, index) => {\r\n      dataVL.RPLLCINPRD = prd_id;\r\n      const ResVl = await http.post(\r\n        produitApiEndPoint + \"Variante-Logistiques/\",\r\n        dataVL,\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n            \"Content-Type\": \"application/json\",\r\n            accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      dataVL.UL != null &&\r\n        dataVL.UL.map(async (dataUL, index) => {\r\n          dataUL.RPULCINVL = ResVl.data.ID_ROWID;\r\n          const ResUl = await http.post(\r\n            produitApiEndPoint + \"Unite-Logistiques/\",\r\n            dataUL,\r\n            {\r\n              headers: {\r\n                Authorization: \"Bearer \" + token,\r\n                \"Content-Type\": \"application/json\",\r\n                accept: \"application/json\",\r\n              },\r\n            }\r\n          );\r\n          dataUL.VV != null &&\r\n            dataUL.VV.map(async (dataVV, index) => {\r\n              // dataVV.RPVVCINUL = ResUl.data.ID_ROWID;\r\n              let VVToSend = new FormData();\r\n              VVToSend.append(\"RPVVCEXT\", dataVV.RPVVCEXT);\r\n              VVToSend.append(\"RPVVLIBL\", dataVV.RPVVLIBL);\r\n              VVToSend.append(\"RPVVLIBC\", dataVV.RPVVLIBC);\r\n              VVToSend.append(\"RPVVETAT\", dataVV.RPVVETAT);\r\n              VVToSend.append(\"RPVVPUVC\", dataVV.RPVVPUVC);\r\n              dataVV.RPVVPHOTO &&\r\n                VVToSend.append(\"RPVVPHOTO\", dataVV.RPVVPHOTO);\r\n              VVToSend.append(\"RPVVCINUL\", ResUl.data.ID_ROWID);\r\n              const ResVV = await http.post(\r\n                produitApiEndPoint + \"Variante-Ventes/\",\r\n                VVToSend,\r\n                {\r\n                  headers: {\r\n                    Authorization: \"Bearer \" + token,\r\n                    \"Content-Type\":\r\n                      \"multipart/form-data; boundary=----WebKitFormBoundaryEwxlBBDdYQdWdUgK\",\r\n                  },\r\n                }\r\n              );\r\n              dataVV.ASV != null &&\r\n                dataVV.ASV.map(async (dataASV, index) => {\r\n                  dataASV.RAVCINVV = ResVV.data.ID_ROWID;\r\n                  await http.post(\r\n                    produitApiEndPoint + \"Assortiment-Vendable/\",\r\n                    dataASV,\r\n                    {\r\n                      headers: {\r\n                        Authorization: \"Bearer \" + token,\r\n                        \"Content-Type\": \"application/json\",\r\n                        accept: \"application/json\",\r\n                      },\r\n                    }\r\n                  );\r\n                });\r\n              await http.post(\r\n                produitApiEndPoint + \"Prix-Vente/\",\r\n                {\r\n                  RPVPRIX: dataVV.RPVPRIX,\r\n\r\n                  RPVCINVV: ResVV.data.ID_ROWID,\r\n                },\r\n                {\r\n                  headers: {\r\n                    Authorization: \"Bearer \" + token,\r\n                    \"Content-Type\": \"application/json\",\r\n                    accept: \"application/json\",\r\n                  },\r\n                }\r\n              );\r\n              await http.post(\r\n                produitApiEndPoint + \"Code-Caisses/\",\r\n                {\r\n                  PRCDDEB: dataVV.PRCDDEB,\r\n                  PRCCODE: dataVV.PRCCODE,\r\n                  PRCDFIN: dataVV.PRCDFIN,\r\n                  RPCINUV: ResVV.data.ID_ROWID,\r\n                },\r\n                {\r\n                  headers: {\r\n                    Authorization: \"Bearer \" + token,\r\n                    \"Content-Type\": \"application/json\",\r\n                    accept: \"application/json\",\r\n                  },\r\n                }\r\n              );\r\n            });\r\n        });\r\n    });\r\n  VL != null &&\r\n    VL.update.map(async (dataVL, index) => {\r\n      const ResVV = await http.put(\r\n        produitApiEndPoint + \"Variante-Logistiques/\" + dataVL.ID_ROWID + \"/\",\r\n        dataVL,\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n            \"Content-Type\": \"application/json\",\r\n            accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    });\r\n  VL != null &&\r\n    VL.delete.map(async (dataVL, index) => {\r\n      http.delete(\r\n        produitApiEndPoint + \"Variante-Logistiques/\" + dataVL.ID_ROWID,\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n            \"Content-Type\": \"application/json\",\r\n            accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    });\r\n  files != null &&\r\n    files.New.map(async (file, index) => {\r\n      let File = new FormData();\r\n      File.append(\"RPTFILE\", file.RPTFILE);\r\n      File.append(\"RPTNAMFIL\", file.RPTNAMFIL);\r\n      File.append(\"RPTTYPDOC\", file.RPTTYPDOC);\r\n      File.append(\"RPTCINPRD\", prd_id);\r\n      await http.post(produitApiEndPoint + \"Attachement-Files/\", File, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n          \"Content-Type\":\r\n            \"multipart/form-data; boundary=----WebKitFormBoundaryEwxlBBDdYQdWdUgK\",\r\n        },\r\n      });\r\n    });\r\n  files != null &&\r\n    files.delete.map(async (file, index) => {\r\n      await http.delete(\r\n        produitApiEndPoint + \"Attachement-Files/\" + file.ID_ROWID,\r\n\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n            \"Content-Type\": \"application/json\",\r\n            accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    });\r\n  ASV != null &&\r\n    ASV.New.map(async (dataASV, index) => {\r\n      const ResASV = await http.post(\r\n        produitApiEndPoint + \"Assortiment-Vendable/\",\r\n        dataASV,\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n            \"Content-Type\": \"application/json\",\r\n            accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    });\r\n  ASV != null &&\r\n    ASV.update.map(async (dataASV, index) => {\r\n      const ResASV = await http.put(\r\n        produitApiEndPoint + \"Assortiment-Vendable/\" + dataASV.ID_ROWID + \"/\",\r\n        dataASV,\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n            \"Content-Type\": \"application/json\",\r\n            accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    });\r\n  ASV != null &&\r\n    ASV.delete.map(async (dataASV, index) => {\r\n      const ResASV = await http.delete(\r\n        produitApiEndPoint + \"Assortiment-Vendable/\" + dataASV.ID_ROWID,\r\n\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n            \"Content-Type\": \"application/json\",\r\n            accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    });\r\n  UL != null &&\r\n    UL.New.map(async (dataUL, index) => {\r\n      // dataUL.RPULCINVL = ResVl.data.ID_ROWID;\r\n      const ResUl = await http.post(\r\n        produitApiEndPoint + \"Unite-Logistiques/\",\r\n        dataUL,\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n            \"Content-Type\": \"application/json\",\r\n            accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    });\r\n  UL != null &&\r\n    UL.update.map(async (dataUL, index) => {\r\n      // dataUL.RPULCINVL = ResVl.data.ID_ROWID;\r\n      const ResUl = await http.put(\r\n        produitApiEndPoint + \"Unite-Logistiques/\" + dataUL.ID_ROWID + \"/\",\r\n        dataUL,\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n            \"Content-Type\": \"application/json\",\r\n            accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    });\r\n  UL != null &&\r\n    UL.delete.map(async (dataUL, index) => {\r\n      // dataUL.RPULCINVL = ResVl.data.ID_ROWID;\r\n      const ResUl = await http.delete(\r\n        produitApiEndPoint + \"Unite-Logistiques/\" + dataUL.ID_ROWID,\r\n\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n            \"Content-Type\": \"application/json\",\r\n            accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    });\r\n  return;\r\n};\r\n\r\nexport const updateUser = async (\r\n  userApiEndPoint,\r\n  id,\r\n  userObjet,\r\n  ctc_id,\r\n  ctcObject,\r\n  photo,\r\n  token\r\n) => {\r\n  var res = 1;\r\n\r\n  try {\r\n    !!userObjet &&\r\n      (await http.patch(`${userApiEndPoint}${id}/`, userObjet, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n          \"Content-Type\": \"application/json\",\r\n          accept: \"application/json\",\r\n        },\r\n      }));\r\n  } catch (error) {\r\n    res = 0;\r\n    notification.open({\r\n      message: \"warning\",\r\n      description: \"Sorry we can't update user data.\",\r\n      className: \"custom-class\",\r\n      type: \"warning\",\r\n      placement: \"bottomRight\",\r\n      style: {\r\n        width: 400,\r\n      },\r\n    });\r\n  }\r\n  try {\r\n    !!photo.FormData &&\r\n      (await http.patch(`${userApiEndPoint}${id}/`, photo, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n          \"Content-Type\":\r\n            \"multipart/form-data; boundary=----WebKitFormBoundaryEwxlBBDdYQdWdUgK\",\r\n        },\r\n      }));\r\n  } catch (error) {\r\n    res = 0;\r\n    notification.open({\r\n      message: \"warning\",\r\n      description: \"Sorry we can't update your profile picture.\",\r\n      className: \"custom-class\",\r\n      type: \"warning\",\r\n      placement: \"bottomRight\",\r\n      style: {\r\n        width: 400,\r\n      },\r\n    });\r\n  }\r\n  try {\r\n    !!userObjet.adresse &&\r\n      (await userObjet.adresse.map(async (data, index) => {\r\n        if (data.ID_ROWID != null) {\r\n          console.log(\"put =>\", data);\r\n          await http.put(\r\n            `${userApiEndPoint + \"adresses/\"}${data.ID_ROWID}/`,\r\n            data,\r\n            {\r\n              headers: {\r\n                Authorization: \"Bearer \" + token,\r\n                \"Content-Type\": \"application/json\",\r\n                accept: \"application/json\",\r\n              },\r\n            }\r\n          );\r\n        } else {\r\n          const adressToPost = Object.assign(\r\n            {},\r\n            data,\r\n\r\n            {\r\n              MADCNTID: ctc_id,\r\n            }\r\n          );\r\n          console.log(\"post =>\", adressToPost);\r\n          http.post(`${userApiEndPoint + \"adresses/\"}`, adressToPost, {\r\n            headers: {\r\n              Authorization: \"Bearer \" + token,\r\n              \"Content-Type\": \"application/json\",\r\n              accept: \"application/json\",\r\n            },\r\n          });\r\n        }\r\n      }));\r\n  } catch (error) {\r\n    res = 0;\r\n    notification.open({\r\n      message: \"warning\",\r\n      description: \"Sorry we can't update your addresses.\",\r\n      className: \"custom-class\",\r\n      type: \"warning\",\r\n      placement: \"bottomRight\",\r\n      style: {\r\n        width: 400,\r\n      },\r\n    });\r\n  }\r\n  try {\r\n    !!ctcObject &&\r\n      (await http.put(`${userApiEndPoint + \"contacts/\"}${ctc_id}/`, ctcObject, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n          \"Content-Type\": \"application/json\",\r\n          accept: \"application/json\",\r\n        },\r\n      }));\r\n  } catch (error) {\r\n    res = 0;\r\n    notification.open({\r\n      message: \"warning\",\r\n      description: \"Sorry we can't update your contact.\",\r\n      className: \"custom-class\",\r\n      type: \"warning\",\r\n      placement: \"bottomRight\",\r\n      style: {\r\n        width: 400,\r\n      },\r\n    });\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const deleteUser = (userApiEndPoint, id, token) => {\r\n  return http.delete(`${userApiEndPoint}${id}`, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\nexport const ActiveDesactiveUser = (userApiEndPoint, object, token) => {\r\n  return http.post(`${userApiEndPoint}Etat/`, object, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const GetApplications = (token) => {\r\n  return http.get(domaine + \"DMERP/v1/applications/\", {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\nexport const GetMenus = (id, token) => {\r\n  return http.get(domaine + \"DMERP/v1/menus/application/\" + id, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\n","import { Col, Input, Row, Space, message, ConfigProvider } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  AudioOutlined,\r\n  ClearOutlined,\r\n  FileAddOutlined,\r\n  FilterOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Affix,\r\n  Button,\r\n  Checkbox,\r\n  DatePicker,\r\n  Divider,\r\n  Form,\r\n  InputNumber,\r\n  Modal,\r\n  Radio,\r\n  Select,\r\n  TreeSelect,\r\n  Typography,\r\n} from \"dmsui\";\r\nimport {\r\n  authApp,\r\n  userAdvancedSearchPath,\r\n  userCreationPath,\r\n} from \"../../../config\";\r\nimport { validateMessages } from \"../../../Constante\";\r\nimport { connexion } from \"../../../DjangoService/authnService\";\r\nimport { getAllSM } from \"../../../DjangoService/ProduitService\";\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nfunction makeTree(nodes, parentId) {\r\n  return nodes\r\n    .filter((node) => node.mere === parentId)\r\n    .reduce(\r\n      (tree, node) => [\r\n        ...tree,\r\n        {\r\n          // ...node,\r\n          title: node.RRSMLIBL,\r\n          value: node.ID_ROWID,\r\n          children: makeTree(nodes, node.ID_ROWID),\r\n        },\r\n      ],\r\n      []\r\n    );\r\n}\r\nclass Searche extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { width: \"\", visible: false, TreeSM: [] };\r\n    this.getRefrechToken = this.getRefrechToken.bind(this);\r\n    this.getToken = this.getToken.bind(this);\r\n  }\r\n  formRef = React.createRef();\r\n\r\n  async componentDidMount() {\r\n    this.props.hostStorage.get(\"refresh_token\", await this.getRefrechToken);\r\n  }\r\n  getToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    if (value == null) {\r\n      //  window.location.href = authApp;\r\n      console.log(\"tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ token: value });\r\n    console.log(\"tokne from host => :\", this.state.token);\r\n    console.log(\"-------------------fin-GetToken-------------------\");\r\n    await this.getSM();\r\n  };\r\n  getRefrechToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetRefrechToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"403\");\r\n    }\r\n    if (value == null) {\r\n      //  window.location.href = authApp;\r\n      console.log(\"Refech tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ Refrech: value });\r\n    console.log(\"Refech tokne from host => :\", this.state.Refrech);\r\n    console.log(\"-------------------fin-GetRefrechToken-------------------\");\r\n    this.props.hostStorage.get(\"access_token\", await this.getToken);\r\n  };\r\n  async getSM() {\r\n    console.log(\r\n      \"------------------debut-GetStructures-Marchandise------------------\"\r\n    );\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n    );\r\n    try {\r\n      const res = await getAllSM(\r\n        this.props.service,\r\n        \"\",\r\n        !!verifyToken ? verifyToken : this.state.token\r\n      );\r\n      console.log(\r\n        \"succes from api : Produit =>  (getStructures-Marchandise()) => :\",\r\n        res\r\n      );\r\n      var TreeSM = makeTree(res.data, null);\r\n      console.log(res.data, \"=> tree =>\", TreeSM);\r\n\r\n      this.setState({\r\n        TreeSM,\r\n      });\r\n      console.log(\r\n        \"-------------------fin-GetStructures-Marchandise-------------------\"\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"Error from api : Produit =>  getStructures-Marchandise  => : \",\r\n        error\r\n      );\r\n\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"500\");\r\n      }\r\n      console.log(\r\n        \"-------------------fin-GetStructures-Marchandise-------------------\"\r\n      );\r\n    }\r\n  }\r\n  onSearch = (value) => {\r\n    console.log(\"------------------debut-onSearch------------------\");\r\n    console.log(\"Rechercher par => :\", value);\r\n    this.props.goTo(userAdvancedSearchPath + \"?search=\" + value);\r\n    console.log(\"-------------------fin-onSearch-------------------\");\r\n  };\r\n  onFilter = (value) => {\r\n    console.log(\"------------------debut-onSearch------------------\");\r\n    console.log(\"Filtrer par => :\", value);\r\n    this.props.goTo(userAdvancedSearchPath + \"?\" + value);\r\n    console.log(\"-------------------fin-onSearch-------------------\");\r\n  };\r\n  onFinish = async (values) => {\r\n    console.log(\r\n      \"------------------debut-Submit-NewVarianteVente------------------\"\r\n    );\r\n    // const rangeTimeValue = values[\"date\"];\r\n    // MUTDDEB: rangeTimeValue[0].format(\"YYYY-MM-DD HH:mm:ss\"),\r\n    //     MUTDFIN: rangeTimeValue[1].format(\"YYYY-MM-DD HH:mm:ss\"),\r\n    var loadingOnsubmit = true;\r\n    message.loading(\"Loading..\", loadingOnsubmit);\r\n    try {\r\n      // console.log(\"filtre => : \", values);\r\n      const filtre =\r\n        \"&RPRTYPE=\" +\r\n        (values.RPRTYPE != null ? values.RPRTYPE : \"\") +\r\n        \"&RPRCINSM=\" +\r\n        (values.RPRCINSM != null ? values.RPRCINSM : \"\") +\r\n        \"&RPRETAT=\" +\r\n        (values.RPRETAT != null ? values.RPRETAT : \"\") +\r\n        \"&RPRUSTOCK=\" +\r\n        (values.RPRUSTOCK != null ? values.RPRUSTOCK : \"\") +\r\n        \"&RPRIGARANTI=\" +\r\n        (values.RPRIGARANTI != null ? values.RPRIGARANTI : \"\") +\r\n        \"&RPRIDAnger=\" +\r\n        (values.RPRIDAnger != null ? values.RPRIDAnger : \"\");\r\n      console.log(\"filtre => : \", filtre);\r\n      this.onFilter(filtre);\r\n      // console.log(\r\n      //   \"vlul => \",\r\n      //   this.state.VLUL[values.RPVVCINUL],\r\n      //   !!this.state.VLUL[values.RPVVCINUL] &&\r\n      //     this.state.VLUL[values.RPVVCINUL].VL != null\r\n      // );\r\n      // values.RPVVCINUL =\r\n      //   !!this.state.VLUL[values.RPVVCINUL] &&\r\n      //   this.state.VLUL[values.RPVVCINUL].VL != null\r\n      //     ? this.state.VLUL[values.RPVVCINUL]\r\n      //     : values.RPVVCINUL;\r\n      // if (rangeTimeValue != null) {\r\n      //   values.PRCDDEB = rangeTimeValue[0].format(\"YYYY-MM-DD HH:mm:ss\");\r\n      //   values.PRCDFIN = rangeTimeValue[1].format(\"YYYY-MM-DD HH:mm:ss\");\r\n      // }\r\n      // values.RPVVPHOTO =\r\n      //   values.RPVVPHOTO != null && values.RPVVPHOTO.fileList[0].originFileObj;\r\n      // values.imageUrl = this.state.imageUrl;\r\n      // console.log(values);\r\n      // this.props.setNewVV(values);\r\n      // this.props.closeDrawer();\r\n      // this.props.addVV(values);\r\n      // this.onReset();\r\n      // this.setState({ VLUL: [] });\r\n      console.log(\r\n        \"------------------fin-Submit-NewVarianteVente------------------\"\r\n      );\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      console.log(\r\n        \"------------------fin-Submit-NewVarianteVente------------------\"\r\n      );\r\n    }\r\n  };\r\n\r\n  onSubmit = () => {\r\n    this.formRef.current.submit();\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n    // console.log(this.formRef.current);\r\n  };\r\n  render() {\r\n    const { visible } = this.state;\r\n    return (\r\n      <div\r\n        style={{ height: \"100%\", width: this.state.width, paddingTop: \"90px\" }}\r\n      >\r\n        <Affix\r\n          offsetTop={150}\r\n          style={{ position: \"fixed\", left: \"95%\", top: \"90%\" }}\r\n        >\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"circle\"\r\n            size={\"large\"}\r\n            onClick={() => this.props.goTo(userCreationPath)}\r\n            // style={{ width: \"50px\", height: \"50px\" }}\r\n          >\r\n            <PlusOutlined />\r\n          </Button>\r\n        </Affix>\r\n        <Modal\r\n          title=\"Recherche avancée\"\r\n          centered\r\n          visible={visible}\r\n          onOk={() => {\r\n            this.onSubmit();\r\n            this.setState({ visible: false });\r\n          }}\r\n          onCancel={() => {\r\n            this.setState({ visible: false });\r\n            this.onReset();\r\n          }}\r\n          okText=\"Apply filter\"\r\n          // cancelText=\"取消\"\r\n          width={800}\r\n        >\r\n          <ConfigProvider form={{ validateMessages: validateMessages.fr }}>\r\n            {/* <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"baseline\",\r\n              }}\r\n            >\r\n              <Typography\r\n                style={{\r\n                  display: \"flex\",\r\n                  fontSize: \"15px\",\r\n                  fontWeight: \"600\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                Recherche avancée\r\n              </Typography>\r\n              <Button\r\n                type=\"text\"\r\n                icon={<ClearOutlined />}\r\n                onClick={() => this.onReset()}\r\n              />\r\n            </div> */}\r\n            <Form\r\n              ref={this.formRef}\r\n              layout=\"vertical\"\r\n              name=\"control-ref\"\r\n              // initialValues={{\r\n              //   RPRTYPE: 1,\r\n              //   RPRETAT: 1,\r\n              //   RPRCINSM: 1,\r\n              //   RPRUSTOCK: 1,\r\n              //   RPRIGARANTI: false,\r\n              //   RPRIDAnger: false,\r\n              // }}\r\n              onFinish={this.onFinish}\r\n            >\r\n              <Row gutter={[20, 20]} justify=\"center\" align=\"stretch\">\r\n                <Col span={24}>\r\n                  <Row gutter={[16, 0]} align=\"stretch\" justify=\"space-between\">\r\n                    <Col span={8}>\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col flex=\"auto\">\r\n                          <Form.Item\r\n                            label=\"Acronyme\"\r\n                            style={{\r\n                              marginBottom: \"15px\",\r\n                            }}\r\n                            name={\"RPRLIBC\"}\r\n                          >\r\n                            <Input placeholder=\"Entrer l'acronyme...\" />\r\n                          </Form.Item>{\" \"}\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>{\" \"}\r\n                    <Col span={16}>\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col flex=\"auto\">\r\n                          <Form.Item\r\n                            style={{\r\n                              marginBottom: \"15px\",\r\n                            }}\r\n                            label=\"Libelle\"\r\n                            name={\"RPRLIBL\"}\r\n                          >\r\n                            <Input placeholder=\"Entrer libelle...\" />\r\n                          </Form.Item>{\" \"}\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col flex=\"auto\">\r\n                          <Form.Item\r\n                            style={{\r\n                              marginBottom: \"15px\",\r\n                            }}\r\n                            label=\"Type\"\r\n                            name={\"RPRTYPE\"}\r\n                          >\r\n                            <Select\r\n                              allowClear\r\n                              placeholder=\"Selectionner le type...\"\r\n                            >\r\n                              <Select.Option value={2}>\r\n                                Consommable\r\n                              </Select.Option>\r\n                              <Select.Option value={1}>Service</Select.Option>\r\n                            </Select>\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>{\" \"}\r\n                    <Col span={8}>\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col flex=\"auto\">\r\n                          <Form.Item\r\n                            name={\"RPRCINSM\"}\r\n                            label=\"Catégorie\"\r\n                            style={{\r\n                              marginBottom: \"15px\",\r\n                            }}\r\n                          >\r\n                            <TreeSelect\r\n                              // treeDataSimpleMode\r\n                              style={{ width: \"100%\" }}\r\n                              // value={this.state.value}\r\n                              dropdownStyle={{\r\n                                maxHeight: 190,\r\n                                overflow: \"auto\",\r\n                              }}\r\n                              onChange={this.onChange}\r\n                              // loadData={this.onLoadData}\r\n                              showSearch\r\n                              style={{ width: \"100%\" }}\r\n                              placeholder=\"Selectionner la catégorie​...\"\r\n                              allowClear\r\n                              treeDefaultExpandAll\r\n                              treeData={this.state.TreeSM}\r\n                              // onChange={onChange}\r\n                            ></TreeSelect>\r\n                          </Form.Item>\r\n                          {/* <Form.Item\r\n                            style={{\r\n                              marginBottom: \"15px\",\r\n                            }}\r\n                            label=\"Catégorie\"\r\n                            name={\"RPRCINSM\"}\r\n                          >\r\n                            <Select\r\n                              allowClear\r\n                              placeholder=\"Selectionner l'unité logistique...\"\r\n                            >\r\n                              <Select.Option>service</Select.Option>\r\n                              <Select.Option>consomable</Select.Option>{\" \"}\r\n                            </Select>\r\n                          </Form.Item> */}\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>{\" \"}\r\n                    <Col span={8}>\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col flex=\"auto\">\r\n                          <Form.Item\r\n                            style={{\r\n                              marginBottom: \"15px\",\r\n                            }}\r\n                            label=\"Unite de stock\"\r\n                            name={\"RPRUSTOCK\"}\r\n                          >\r\n                            <Select\r\n                              allowClear\r\n                              placeholder=\"Selectionner l'Unite de stock...\"\r\n                            >\r\n                              <Select.Option value={1}>Piece</Select.Option>\r\n                              <Select.Option value={2}>Kilo fix</Select.Option>\r\n                              <Select.Option value={3}>\r\n                                Kilo moyen\r\n                              </Select.Option>\r\n                              <Select.Option value={4}>kilo Pese</Select.Option>{\" \"}\r\n                            </Select>\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col flex=\"auto\">\r\n                          <Form.Item\r\n                            style={{\r\n                              marginBottom: \"15px\",\r\n                            }}\r\n                            label=\"Etat\"\r\n                            style={{\r\n                              // marginBottom: \"10px\",\r\n                              width: \"100%\",\r\n                            }}\r\n                            name={\"RPRETAT\"}\r\n                          >\r\n                            <InputNumber\r\n                              style={{\r\n                                width: \"100%\",\r\n                              }}\r\n                              // placeholder=\"...\"\r\n                            />\r\n                          </Form.Item>{\" \"}\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>{\" \"}\r\n                    <Col\r\n                      span={8}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignContent: \"center\",\r\n                        flexWrap: \"wrap\",\r\n                        // marginBottom: \"15px\",\r\n                      }}\r\n                    >\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col flex=\"auto\">\r\n                          <Form.Item\r\n                            style={{ marginBottom: \"15px\" }}\r\n                            name={\"RPRIGARANTI\"}\r\n                            valuePropName=\"checked\"\r\n                            // hasFeedback\r\n                          >\r\n                            <Checkbox>​Garantie</Checkbox>\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>{\" \"}\r\n                    <Col\r\n                      span={8}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignContent: \"center\",\r\n                        flexWrap: \"wrap\",\r\n                      }}\r\n                    >\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col flex=\"auto\">\r\n                          <Form.Item\r\n                            style={{ marginBottom: \"15px\" }}\r\n                            name={\"RPRIDAnger\"}\r\n                            valuePropName=\"checked\"\r\n                            // hasFeedback\r\n                          >\r\n                            <Checkbox>Produit dangereux</Checkbox>\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>{\" \"}\r\n                    {/* <Divider style={{ margin: \"0px\" }} />\r\n                    <Col span={24}>\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col\r\n                          flex=\"auto\"\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"flex-end\",\r\n                            marginTop: \"10px\",\r\n                          }}\r\n                        >\r\n                          <Space>\r\n                            <Button\r\n                              onClick={(e) => {\r\n                                this.props.closeDrawer();\r\n                                this.onReset();\r\n                              }}\r\n                            >\r\n                              close\r\n                            </Button>\r\n                            <Button\r\n                              type=\"primary\"\r\n                              onClick={(e) => {\r\n                                this.onSubmit();\r\n                              }}\r\n                            >\r\n                              Apply Filter\r\n                            </Button>\r\n                          </Space>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>{\" \"} */}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </ConfigProvider>\r\n        </Modal>\r\n        <Row gutter={[16, 30]} align=\"middle\" justify=\"space-around\">\r\n          <Col span={24}>\r\n            <Space>\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/search3.png\"}\r\n                alt=\"ooo\"\r\n                style={{ width: \"410px\" }}\r\n              />\r\n            </Space>\r\n          </Col>{\" \"}\r\n          <Col span={this.state.width == \"\" ? 9 : 15}>\r\n            {\" \"}\r\n            <Row align=\"stretch\" justify=\"space-between\">\r\n              <Col span={2}>\r\n                <Button\r\n                  type=\"primary\"\r\n                  style={{ height: \"100%\" }}\r\n                  onClick={(e) => {\r\n                    this.setState({ visible: true });\r\n                    // this.props.showDrawer(e);\r\n                    // this.setState({ width: 1435 - 400 + \"px\" });\r\n                    // // this.props.setSiseForm(1435 - 350 + \"px\");\r\n                    // this.props.setDrawerState(\r\n                    //   \"\",\r\n                    //   \"ee\",\r\n\r\n                    //   400,\r\n                    //   () => {\r\n                    //     console.log(\"en close drawer\");\r\n                    //     this.setState({ width: \"\" });\r\n                    //     // this.props.setSiseForm(\"\");\r\n                    //   }\r\n                    // );\r\n                  }}\r\n                >\r\n                  <FilterOutlined />\r\n                </Button>\r\n              </Col>\r\n              <Col span={22}>\r\n                <Input.Search\r\n                  placeholder=\"what are you looking for ?\"\r\n                  enterButton=\"Search\"\r\n                  size=\"large\"\r\n                  suffix={suffix}\r\n                  // enterButton\r\n                  onSearch={(e) => this.onSearch(e)}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Searche);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Upload, Form } from \"antd\";\r\n// import ImgCrop from \"antd-img-crop\";\r\n\r\nconst AvatarUpdate = (props) => {\r\n  const [fileList, setFileList] = useState(\r\n    props.defaultValue != null\r\n      ? [\r\n          {\r\n            uid: \"-1\",\r\n            name: \"imagex.png\",\r\n            status: \"done\",\r\n            url: props.defaultValue != null ? props.defaultValue : \"\",\r\n          },\r\n        ]\r\n      : []\r\n  );\r\n  useEffect(async () => {\r\n    console.log(props.defaultValue);\r\n  }, []);\r\n  const onChange = ({ fileList: newFileList }) => {\r\n    setFileList(newFileList);\r\n    console.log(newFileList[0]);\r\n    props.setImage(newFileList[0]);\r\n  };\r\n\r\n  const onPreview = async (file) => {\r\n    let src = file.url;\r\n    if (!src) {\r\n      src = await new Promise((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file.originFileObj);\r\n        reader.onload = () => resolve(reader.result);\r\n      });\r\n    }\r\n    const image = new Image();\r\n    image.src = src;\r\n    const imgWindow = window.open(src);\r\n    imgWindow.document.write(image.outerHTML);\r\n  };\r\n\r\n  return (\r\n    // <ImgCrop rotate>\r\n    // <Form.Item\r\n    //   name={\"MUTPHOTOS\"}\r\n    //   // style={{ marginBottom: \"10px\" }}\r\n    //   rules={[\r\n    //     {\r\n    //       required: true,\r\n    //       // max: 150,\r\n    //     },\r\n    //   ]}\r\n    // >\r\n    <Upload\r\n      className=\"user-avatar\"\r\n      // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n      listType=\"picture-card\"\r\n      fileList={fileList}\r\n      onChange={onChange}\r\n      onPreview={onPreview}\r\n      disabled={props.readOnly}\r\n      style={{ width: \"100%\", objectFit: \"cover\" }}\r\n    >\r\n      {fileList.length < 1 && \"+ Upload\"}\r\n    </Upload>\r\n    // </Form.Item>\r\n    // </ImgCrop>\r\n  );\r\n};\r\nexport default AvatarUpdate;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Divider, Input, Row, message, ConfigProvider } from \"antd\";\r\nimport {\r\n  Button,\r\n  DatePicker,\r\n  Form,\r\n  InputNumber,\r\n  Space,\r\n  TreeSelect,\r\n  Typography,\r\n} from \"dmsui\";\r\nimport { ClearOutlined } from \"@ant-design/icons\";\r\nimport { validateMessages } from \"../../../../Constante\";\r\n\r\nexport default class StructureMarchandiseDrawer extends Component {\r\n  static propTypes = {\r\n    prop: PropTypes,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      value: null,\r\n    };\r\n  }\r\n  formRef = React.createRef();\r\n\r\n  onFinish = async (values) => {\r\n    console.log(\r\n      \"------------------debut-Submit-NewSTMarchandise------------------\"\r\n    );\r\n    var loadingOnsubmit = true;\r\n    message.loading(\"Loading..\", loadingOnsubmit);\r\n    try {\r\n      console.log(values);\r\n      this.props.setNewSM(values);\r\n      this.props.closeDrawer();\r\n      this.onReset();\r\n      console.log(\r\n        \"------------------fin-Submit-NewSTMarchandise------------------\"\r\n      );\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      console.log(\r\n        \"------------------fin-Submit-NewSTMarchandise------------------\"\r\n      );\r\n    }\r\n  };\r\n\r\n  onSubmit = () => {\r\n    this.formRef.current.submit();\r\n    console.log(this.formRef.current);\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n\r\n  labelComposant = (label, Icon) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100px\",\r\n            fontSize: \"14px\",\r\n            fontWeight: \"600\",\r\n          }}\r\n        >\r\n          {label}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  };\r\n  onChange = (value) => {\r\n    console.log(value);\r\n    this.setState({ value });\r\n  };\r\n  render() {\r\n    return (\r\n      <ConfigProvider form={{ validateMessages: validateMessages.fr }}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"baseline\",\r\n          }}\r\n        >\r\n          <Typography\r\n            style={{\r\n              display: \"flex\",\r\n              fontSize: \"15px\",\r\n              fontWeight: \"600\",\r\n              marginBottom: \"15px\",\r\n            }}\r\n          >\r\n            New Categorie\r\n          </Typography>\r\n          <Button\r\n            type=\"text\"\r\n            icon={<ClearOutlined />}\r\n            onClick={() => this.onReset()}\r\n          />\r\n        </div>\r\n        <Form\r\n          ref={this.formRef}\r\n          layout=\"vertical\"\r\n          name=\"control-ref\"\r\n          // initialValues={{ ...this.state.defaultValue }}\r\n          onFinish={this.onFinish}\r\n        >\r\n          <Row gutter={[20, 20]} justify=\"center\" align=\"stretch\">\r\n            <Col span={24}>\r\n              <Row gutter={[16, 0]} align=\"stretch\" justify=\"space-between\">\r\n                <Col span={16}>\r\n                  <Row gutter={[0, 0]} align=\"stretch\">\r\n                    <Col flex=\"auto\">\r\n                      <Form.Item\r\n                        label=\"Code\"\r\n                        name={\"RRSMCEXT\"}\r\n                        //   style={{ marginBottom: \"10px\" }}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            max: 50,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input placeholder=\"Entrer le code...\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Row gutter={[0, 0]} align=\"stretch\">\r\n                    <Col flex=\"auto\">\r\n                      <Form.Item\r\n                        label=\"Max niveaux\"\r\n                        name={\"RRSMNIV\"}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            type: \"number\",\r\n                          },\r\n                        ]}\r\n                        hasFeedback\r\n                      >\r\n                        <InputNumber\r\n                          style={{\r\n                            width: \"100%\",\r\n                          }}\r\n                          placeholder=\"max niveau...\"\r\n                        />\r\n                      </Form.Item>{\" \"}\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <Row gutter={[0, 0]} align=\"stretch\">\r\n                    <Col flex=\"auto\">\r\n                      <Form.Item\r\n                        label=\"Acronyme\"\r\n                        //   style={{ marginBottom: \"10px\" }}\r\n                        name={\"RRSMLIBC\"}\r\n                        rules={[\r\n                          {\r\n                            required: false,\r\n                            max: 35,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input placeholder=\"Entrer l'acronyme'...\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>{\" \"}\r\n                <Col span={24}>\r\n                  <Row gutter={[0, 0]} align=\"stretch\">\r\n                    <Col flex=\"auto\">\r\n                      <Form.Item\r\n                        label=\"Libellé\"\r\n                        name={\"RRSMLIBL\"}\r\n                        rules={[\r\n                          {\r\n                            required: false,\r\n                            max: 50,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input placeholder=\"Entrer libellé...\" />\r\n                      </Form.Item>{\" \"}\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <Row gutter={[0, 0]} align=\"stretch\">\r\n                    <Col flex=\"auto\">\r\n                      <Form.Item\r\n                        name={\"RLRINSMM\"}\r\n                        label=\"Categorie Mére\"\r\n                        style={{\r\n                          // marginBottom: \"10px\",\r\n                          width: \"100%\",\r\n                        }}\r\n                        hasFeedback\r\n                        rules={[\r\n                          {\r\n                            required: false,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <TreeSelect\r\n                          style={{ width: \"100%\" }}\r\n                          value={this.state.value}\r\n                          dropdownStyle={{\r\n                            maxHeight: 190,\r\n                            overflow: \"auto\",\r\n                          }}\r\n                          onChange={this.onChange}\r\n                          showSearch\r\n                          style={{ width: \"100%\" }}\r\n                          placeholder=\"Selectionner la catégorie​...\"\r\n                          allowClear\r\n                          treeDefaultExpandAll\r\n                          treeData={this.props.SMListes}\r\n                        ></TreeSelect>\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <Row gutter={[0, 0]} align=\"stretch\">\r\n                    <Col flex=\"auto\">\r\n                      <Form.Item\r\n                        label=\"Date Début\"\r\n                        style={{\r\n                          width: \"100%\",\r\n                        }}\r\n                        name={\"RLRDDEB\"}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                          },\r\n                        ]}\r\n                        hasFeedback\r\n                      >\r\n                        <DatePicker\r\n                          showTime\r\n                          format=\"YYYY-MM-DD HH:mm:ss\"\r\n                          style={{\r\n                            width: \"100%\",\r\n                          }}\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                      </Form.Item>{\" \"}\r\n                    </Col>\r\n                  </Row>\r\n                </Col>{\" \"}\r\n                <Divider />\r\n                <Col span={24}>\r\n                  <Row gutter={[0, 0]} align=\"stretch\">\r\n                    <Col\r\n                      flex=\"auto\"\r\n                      style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n                    >\r\n                      <Space>\r\n                        <Button\r\n                          onClick={(e) => {\r\n                            this.props.closeDrawer();\r\n                            this.onReset();\r\n                          }}\r\n                        >\r\n                          close\r\n                        </Button>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e) => {\r\n                            this.onSubmit();\r\n                          }}\r\n                        >\r\n                          submit\r\n                        </Button>\r\n                      </Space>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>{\" \"}\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </ConfigProvider>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Input, Row } from \"antd\";\r\nimport { Button, Checkbox, Form, Select, TreeSelect, Typography } from \"dmsui\";\r\n\r\nimport { AppstoreAddOutlined, GlobalOutlined } from \"@ant-design/icons\";\r\n\r\nimport StructureMarchandiseDrawer from \"./StructureMarchandiseDrawer\";\r\n\r\nfunction makeTree(nodes, parentId) {\r\n  return nodes\r\n    .filter((node) => node.mere === parentId)\r\n    .reduce(\r\n      (tree, node) => [\r\n        ...tree,\r\n        {\r\n          // ...node,\r\n          title: node.RRSMLIBL,\r\n          value: node.ID_ROWID,\r\n          children: makeTree(nodes, node.ID_ROWID),\r\n        },\r\n      ],\r\n      []\r\n    );\r\n}\r\nexport default class TabInput extends Component {\r\n  static propTypes = {\r\n    prop: PropTypes,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      TreeSM: [],\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.AllSM !== this.props.AllSM) {\r\n      var TreeSM = makeTree(this.props.AllSM, null);\r\n      console.log(this.props.AllSM, \"=> tree =>\", TreeSM);\r\n      this.setState({ TreeSM });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    var TreeSM = makeTree(this.props.AllSM, null);\r\n    console.log(this.props.AllSM, \"=> tree =>\", TreeSM);\r\n    this.setState({ TreeSM });\r\n  }\r\n\r\n  labelComposant = (label, Icon) => {\r\n    return (\r\n      <div\r\n        className={\"ant-input-group-addon\"}\r\n        style={{\r\n          border: \"1px solid #dcdcdc\",\r\n          display: \"inline-flex\",\r\n          width: \"128px\",\r\n          // backgroundColor: \"#fafafa\",\r\n          paddingLeft: \"10px\",\r\n          height: \"32px\",\r\n          width: \"25%\",\r\n        }}\r\n      >\r\n        <div\r\n          //\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          <Typography\r\n            className={\"text-input-group\"}\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"120px\",\r\n              // color: \"#fff\",\r\n              fontSize: \"14px\",\r\n              fontWeight: \"600\",\r\n            }}\r\n          >\r\n            {label}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { update, handleInputChange } = this.props;\r\n    return (\r\n      <Row gutter={[20, 20]} justify=\"center\" align=\"stretch\">\r\n        <Col span={24}>\r\n          <Row gutter={[16, 0]} align=\"stretch\" justify=\"space-between\">\r\n            <Col span={12}>\r\n              <Row gutter={[0, 0]} align=\"stretch\">\r\n                <Col flex=\"auto\">\r\n                  <Input.Group compact>\r\n                    {this.labelComposant(\"Type\", GlobalOutlined)}\r\n\r\n                    <Form.Item\r\n                      name={\"RPRTYPE\"}\r\n                      style={{\r\n                        marginBottom: \"15px\",\r\n                        width: \"75%\",\r\n                      }}\r\n                      hasFeedback\r\n                      rules={[\r\n                        {\r\n                          required: false,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        onChange={handleInputChange}\r\n                        allowClear\r\n                        placeholder=\"Selectionner le type...\"\r\n                        disabled={this.props.update ? false : true}\r\n                      >\r\n                        <Select.Option value={2}>Consommable</Select.Option>\r\n                        <Select.Option value={1}>Service</Select.Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Input.Group>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Row gutter={[0, 0]} align=\"stretch\">\r\n                <Col flex=\"auto\">\r\n                  <Input.Group compact>\r\n                    {this.labelComposant(\"Etat\", GlobalOutlined)}\r\n\r\n                    <Form.Item\r\n                      name={\"RPRETAT\"}\r\n                      style={{\r\n                        marginBottom: \"15px\",\r\n                        width: \"75%\",\r\n                      }}\r\n                      hasFeedback\r\n                      rules={[\r\n                        {\r\n                          required: false,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        onChange={handleInputChange}\r\n                        allowClear\r\n                        placeholder=\"Selectionner l'etat'...\"\r\n                        disabled={this.props.update ? false : true}\r\n                      >\r\n                        <Select.Option value={0}>1</Select.Option>\r\n                        <Select.Option value={1}>2</Select.Option>\r\n                        <Select.Option value={2}>3</Select.Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Input.Group>\r\n                </Col>\r\n              </Row>\r\n            </Col>{\" \"}\r\n            <Col span={12}>\r\n              <Row gutter={[0, 0]} align=\"stretch\">\r\n                <Col flex=\"auto\">\r\n                  <Input.Group compact>\r\n                    {this.labelComposant(\"Unité de stock\", GlobalOutlined)}\r\n                    <Form.Item\r\n                      name={\"RPRUSTOCK\"}\r\n                      style={{\r\n                        marginBottom: \"15px\",\r\n                        width: \"75%\",\r\n                      }}\r\n                      hasFeedback\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        onChange={handleInputChange}\r\n                        allowClear\r\n                        placeholder=\"Selectionner l'unité de stock'...\"\r\n                        disabled={this.props.update ? false : true}\r\n                      >\r\n                        <Select.Option value={1}>Piece</Select.Option>\r\n                        <Select.Option value={2}>Kilo fix</Select.Option>\r\n                        <Select.Option value={3}>Kilo moyen</Select.Option>\r\n                        <Select.Option value={4}>kilo Pese</Select.Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Input.Group>\r\n                </Col>\r\n              </Row>\r\n            </Col>{\" \"}\r\n            <Col span={12}>\r\n              <Row gutter={[0, 0]} align=\"stretch\">\r\n                <Col flex=\"auto\">\r\n                  <Input.Group compact>\r\n                    {this.labelComposant(\"Langue\", GlobalOutlined)}\r\n\r\n                    <Form.Item\r\n                      name={\"RPRLANGUE\"}\r\n                      style={{\r\n                        marginBottom: \"15px\",\r\n                        width: \"75%\",\r\n                      }}\r\n                      hasFeedback\r\n                      rules={[\r\n                        {\r\n                          required: false,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        onChange={handleInputChange}\r\n                        allowClear\r\n                        placeholder=\"Selectionner la langue...\"\r\n                        disabled={this.props.update ? false : true}\r\n                      >\r\n                        <Select.Option value={\"en\"}>Anglais</Select.Option>\r\n                        <Select.Option value={\"fr\"}>Français</Select.Option>\r\n                        <Select.Option value={\"ar\"}>Arabe</Select.Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Input.Group>\r\n                </Col>\r\n              </Row>\r\n            </Col>{\" \"}\r\n            <Col span={12}>\r\n              <Row gutter={[0, 0]} align=\"stretch\" wrap={false}>\r\n                <Col flex=\"auto\">\r\n                  <Input.Group compact>\r\n                    {this.labelComposant(\"Categorie\", GlobalOutlined)}\r\n\r\n                    <Form.Item\r\n                      name={\"RPRCINSM\"}\r\n                      style={{\r\n                        marginBottom: \"15px\",\r\n                        width: \"75%\",\r\n                      }}\r\n                      hasFeedback\r\n                      rules={[\r\n                        {\r\n                          required: false,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <TreeSelect\r\n                        disabled={this.props.update ? false : true}\r\n                        // treeDataSimpleMode\r\n                        style={{ width: \"100%\" }}\r\n                        // value={this.state.value}\r\n                        dropdownStyle={{\r\n                          maxHeight: 190,\r\n                          overflow: \"auto\",\r\n                        }}\r\n                        onChange={this.onChange}\r\n                        // loadData={this.onLoadData}\r\n                        showSearch\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"Selectionner la catégorie​...\"\r\n                        allowClear\r\n                        treeDefaultExpandAll\r\n                        treeData={this.state.TreeSM}\r\n                        // onChange={onChange}\r\n                      ></TreeSelect>\r\n                    </Form.Item>\r\n                  </Input.Group>\r\n                </Col>\r\n                <Col\r\n                  flex=\"40px\"\r\n                  style={{\r\n                    marginBottom: \"15px\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={this.props.update ? false : true}\r\n                    onClick={(e) => {\r\n                      this.props.showDrawer(e);\r\n                      this.props.setSiseForm(1435 - 500 + \"px\");\r\n                      this.props.setDrawerState(\r\n                        \"\",\r\n                        <StructureMarchandiseDrawer\r\n                          SMListes={this.state.TreeSM}\r\n                          setNewSM={(datas) => this.props.setNewSM(datas)}\r\n                          closeDrawer={() => this.props.closeDrawer()}\r\n                        />,\r\n                        500,\r\n                        () => {\r\n                          console.log(\"en close drawer\");\r\n                          this.props.setSiseForm(\"\");\r\n                        }\r\n                      );\r\n                    }}\r\n                    icon={<AppstoreAddOutlined />}\r\n                    size={\"small\"}\r\n                    style={{\r\n                      height: \"100%\",\r\n                      width: \"100%\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col\r\n              span={6}\r\n              style={{\r\n                display: \"flex\",\r\n                alignContent: \"center\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              <Row gutter={[0, 0]} align=\"stretch\">\r\n                <Col flex=\"auto\">\r\n                  <Form.Item\r\n                    style={{ marginBottom: \"15px\" }}\r\n                    name={\"RPRIGARANTI\"}\r\n                    valuePropName=\"checked\"\r\n                    // hasFeedback\r\n                  >\r\n                    <Checkbox disabled={this.props.update ? false : true}>\r\n                      ​Garantie\r\n                    </Checkbox>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </Col>{\" \"}\r\n            <Col\r\n              span={6}\r\n              style={{\r\n                display: \"flex\",\r\n                alignContent: \"center\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              <Row gutter={[0, 0]} align=\"stretch\">\r\n                <Col flex=\"auto\">\r\n                  <Form.Item\r\n                    style={{ marginBottom: \"15px\" }}\r\n                    name={\"RPRIDAnger\"}\r\n                    valuePropName=\"checked\"\r\n                    // hasFeedback\r\n                  >\r\n                    <Checkbox disabled={this.props.update ? false : true}>\r\n                      Produit dangereux\r\n                    </Checkbox>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </Col>{\" \"}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport { Table, Input, Button, Popconfirm, Form } from \"antd\";\r\nimport {\r\n  Avatar,\r\n  Col,\r\n  DataTable,\r\n  DatePicker,\r\n  Divider,\r\n  InputNumber,\r\n  Modal,\r\n  Row,\r\n  Select,\r\n  Typography,\r\n} from \"dmsui\";\r\nimport {\r\n  BarcodeOutlined,\r\n  CodeSandboxOutlined,\r\n  DeleteOutlined,\r\n} from \"@ant-design/icons\";\r\nimport VarianteVenteDrawer from \"./VarianteVenteDrawer\";\r\nimport TitleCustomize from \"./TitleCustomize\";\r\nimport moment from \"moment\";\r\nconst expandable = {\r\n  expandedRowRender: (record) => <p>{record.description}</p>,\r\n};\r\nconst pagination = { position: \"bottom\" };\r\nconst vueSysteme = [];\r\nfor (let i = 1; i <= 1; i++) {\r\n  vueSysteme.push({\r\n    titre: \"Vue systéme \" + i,\r\n    check: true,\r\n  });\r\n}\r\nconst vuesPersonnalises = [];\r\nfor (let i = 1; i <= 3; i++) {\r\n  vuesPersonnalises.push({\r\n    titre: \"Vues personnalisés \" + i,\r\n    check: false,\r\n  });\r\n}\r\n\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(\r\n      `selectedRowKeys: ${selectedRowKeys}`,\r\n      \"selectedRows: \",\r\n      selectedRows\r\n    );\r\n  },\r\n  onSelect: (record, selected, selectedRows) => {\r\n    console.log(record, selected, selectedRows);\r\n  },\r\n  onSelectAll: (selected, selectedRows, changeRows) => {\r\n    console.log(selected, selectedRows, changeRows);\r\n  },\r\n};\r\n//befor\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  pattern,\r\n  max,\r\n  required,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  setUpdateVV,\r\n  Uls,\r\n  disabled,\r\n  type,\r\n  update,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n  useEffect(() => {\r\n    // console.log(\"tinane voila la\", max, \"record\", record, \"update => \", update);\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n  const getUlType = (type) => {\r\n    switch (type) {\r\n      case 0:\r\n        return \"uvc\";\r\n      case 1:\r\n        return \"sub-carton\";\r\n      case 2:\r\n        return \"carton\";\r\n      case 3:\r\n        return \"couche\";\r\n      case 3:\r\n        return \"palette\";\r\n      default:\r\n        return \"autre\";\r\n    }\r\n  };\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      console.log(\"variante vente update => \", values, \"recorde\", record);\r\n\r\n      toggleEdit();\r\n      setUpdateVV(record, values);\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log(\"Save failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        // rules={[\r\n        //   {\r\n        //     // required: required,\r\n        //     // max: max,\r\n        //     // pattern: pattern,\r\n        //     // message: `${title} is required.`,\r\n        //   },\r\n        // ]}\r\n      >\r\n        {type == \"number\" ? (\r\n          <InputNumber\r\n            size=\"small\"\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n            // readOnly={!update}\r\n          />\r\n        ) : type == \"select\" ? (\r\n          <Select\r\n            size=\"small\"\r\n            // style={{ width: \"100%\" }}\r\n            showSearch\r\n            // style={{ width: 200 }}\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n            optionFilterProp=\"children\"\r\n          >\r\n            {Uls != null &&\r\n              Uls.map((Ul, index) => (\r\n                <Select.Option value={!!Ul.titre ? index : Ul.ID_ROWID}>\r\n                  {!!Ul.titre\r\n                    ? Ul.titre\r\n                    : getUlType(Ul.RPULTYPUL) + \", (\" + Ul.cextVl + \")\"}\r\n                </Select.Option>\r\n              ))}\r\n            {/* <Select.Option value={0}>UVC</Select.Option> */}\r\n            {/* <Select.Option value={1}>Sub-carton</Select.Option>\r\n            <Select.Option value={2}>Carton</Select.Option>\r\n            <Select.Option value={3}>Layer</Select.Option>\r\n            <Select.Option value={4}>Palette</Select.Option> */}\r\n          </Select>\r\n        ) : (\r\n          <Input\r\n            size=\"small\"\r\n            // readOnly={!update}\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n          />\r\n        )}\r\n        {/* <Input\r\n          bordered={false}\r\n          ref={inputRef}\r\n          onPressEnter={save}\r\n          onBlur={save}\r\n          readOnly={!update}\r\n          //\r\n        /> */}\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{\r\n          paddingRight: 24,\r\n        }}\r\n        onClick={toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\nconst DescriptionItem = ({ title, content }) => (\r\n  <div style={{ display: \"flex\" }}>\r\n    <p style={{ marginRight: \"10px\" }}>{title}:</p>\r\n    <Typography.Paragraph type=\"secondary\">\r\n      {content}\r\n      {/* editable={{ onChange: null }} */}\r\n    </Typography.Paragraph>{\" \"}\r\n  </div>\r\n);\r\nexport default class VarianteVenteTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"RPVVPHOTO\",\r\n        width: \"5%\",\r\n        ellipsis: true,\r\n        fixed: \"left\",\r\n        render: (_, record) => {\r\n          return (\r\n            // !this.state.loading && (\r\n            <Avatar\r\n              src={\r\n                !!record.imageUrl\r\n                  ? record.imageUrl\r\n                  : !!record.RPVVPHOTO && record.RPVVPHOTO\r\n                // : process.env.PUBLIC_URL + \"/photo.png\"\r\n              }\r\n              // tag ? tag : process.env.PUBLIC_URL + \"/photo.png\"}\r\n              size={40}\r\n              shape=\"circle\"\r\n              // icon={<UserOutlined />}\r\n            >\r\n              {record.RPVVLIBC}\r\n            </Avatar>\r\n            // <img src={record.imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\r\n            // )\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        title: \"code\",\r\n        max: 30,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        disabled: this.props.update,\r\n        dataIndex: \"RPVVCEXT\",\r\n        width: \"15%\",\r\n        type: \"\",\r\n        fixed: \"left\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n\r\n      {\r\n        title: \"libelle\",\r\n        max: 10,\r\n        pattern: \"^[a-zA-Z0-9_-]+$\",\r\n        required: false,\r\n        type: \"\",\r\n        disabled: this.props.update,\r\n        dataIndex: \"RPVVLIBL\",\r\n        width: \"15%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n      },\r\n\r\n      {\r\n        title: \"acronym\",\r\n        max: 4,\r\n        pattern: \"^[0-9]*$\",\r\n        required: false,\r\n        dataIndex: \"RPVVLIBC\",\r\n        width: \"15%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Unity Logistique\",\r\n        max: 15,\r\n        type: \"select\",\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RPVVCINUL\",\r\n        // render: (_, record) => (\r\n        //   <Button\r\n        //     type=\"text\"\r\n        //     icon={<CodeSandboxOutlined />}\r\n        //     onClick={() => {\r\n        //       console.log(record);\r\n        //       this.showModalUL(record.RPVVCINUL);\r\n        //     }}\r\n        //   />\r\n        // ),\r\n        width: \"25%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Etat\",\r\n        max: 5,\r\n        type: \"number\",\r\n        required: false,\r\n        dataIndex: \"RPVVETAT\",\r\n        width: \"7%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Poid\",\r\n        max: 15,\r\n        type: \"number\",\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RPVVPUVC\",\r\n\r\n        width: \"7%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n      },\r\n\r\n      {\r\n        title: \"Code caisse\",\r\n        max: 15,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"PRCCODE\",\r\n        render: (_, record) => (\r\n          <Button\r\n            type=\"text\"\r\n            icon={<BarcodeOutlined />}\r\n            onClick={() => this.showModal(record.CodeCaise)}\r\n          />\r\n        ),\r\n        width: \"11%\",\r\n        ellipsis: true,\r\n        editable: false,\r\n      },\r\n\r\n      {\r\n        title: \"\",\r\n        fixed: \"right\",\r\n\r\n        width: \"5%\",\r\n        dataIndex: \"operation\",\r\n        render: (_, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              {/* <a>Delete</a> */}\r\n              <DeleteOutlined style={{ color: \"#f44336\" }} />\r\n            </Popconfirm>\r\n          ) : null,\r\n      },\r\n    ];\r\n    this.state = {\r\n      // after\r\n      VLUL: [],\r\n      visible: false,\r\n      confirmLoading: false,\r\n      modalText: \"Content of the modal\",\r\n      bordered: false,\r\n      loading: false,\r\n      pagination,\r\n\r\n      expandable,\r\n      showHeader: true,\r\n      rowSelection: {},\r\n      scroll: undefined,\r\n      hasData: true,\r\n      tableLayout: undefined,\r\n      top: \"none\",\r\n      bottom: \"bottomRight\",\r\n\r\n      //before\r\n      dataSource: [],\r\n      count: 2,\r\n    };\r\n  }\r\n  // componentDidUpdate(prevProps) {\r\n  //   if (prevProps.updateAdress !== this.props.updateAdress) {\r\n  //     this.\r\n  //   }\r\n  // }\r\n  getDataSource() {\r\n    return this.state.dataSource;\r\n  }\r\n  handleDelete = (keyy) => {\r\n    const dataSource = [...this.state.dataSource];\r\n    // console.log(dataSource, key);\r\n    const result = dataSource.findIndex(({ key }) => key == keyy);\r\n    console.log(dataSource, result);\r\n    this.props.setDeleteVV(dataSource[result]);\r\n    this.setState({\r\n      dataSource: dataSource.filter((item) => item.key !== keyy),\r\n    });\r\n  };\r\n  handleAdd = (datas) => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = datas;\r\n    newData.key = dataSource.length;\r\n    // const newData = {\r\n    //   key: count,\r\n    //   RPVVCEXT: \"...\",\r\n    //   RPVVLIBL: \"...\",\r\n    //   RPVVETAT: \"...\",\r\n    //   RPVVPUVC: \"...\",\r\n    //   // PRCCODE: \"...\",\r\n    // };\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n  handleSave = (row) => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, { ...item, ...row });\r\n    this.setState({\r\n      dataSource: newData,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    console.log(\"datas\", this.props.datasource);\r\n    this.props.datasource != null &&\r\n      this.props.datasource.map((data, index) => {\r\n        Object.assign(data, {\r\n          key: index,\r\n        });\r\n      });\r\n    this.setState({\r\n      dataSource: this.props.datasource != null ? this.props.datasource : [],\r\n    });\r\n\r\n    //ul\r\n    console.log(\"all ul\", this.props.ListAllUL);\r\n    this.props.ListUL != null &&\r\n      this.props.ListUL.map((Vl, indexVl) => {\r\n        // console.log(\"ul nta3 vl => \", Vl);\r\n\r\n        Vl.UL != null &&\r\n          Vl.UL.map((Ul, indexUl) => {\r\n            const { VLUL } = this.state;\r\n            VLUL.push({\r\n              VL: indexVl,\r\n              UL: indexUl,\r\n              titre: Vl.RPLLCEXT + \" \" + Ul.RPULTYPUL,\r\n            });\r\n          });\r\n      });\r\n    this.setState({\r\n      loading: false,\r\n      VLUL: this.props.ListAllUL.concat(this.state.VLUL),\r\n    });\r\n    console.log(\"all ul finale\", this.state.VLUL);\r\n  }\r\n\r\n  showModal = (data) => {\r\n    console.log(data);\r\n    this.setState({\r\n      visible: true,\r\n      width: 380,\r\n      contenu: (\r\n        <Row\r\n          gutter={[5, 5]}\r\n          // align=\"top\"\r\n          style={{\r\n            minHeight: \"180px\",\r\n            maxHeight: \"180px\",\r\n            // overflowY: \"auto\",\r\n          }}\r\n        >\r\n          {!!data && (\r\n            <Col\r\n              span={24}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <DatePicker.RangePicker\r\n                showTime\r\n                bordered={false}\r\n                defaultValue={[\r\n                  moment(data[0].PRCDDEB, \"YYYY-MM-DD HH:mm:ss\"),\r\n                  moment(data[0].PRCDFIN, \"YYYY-MM-DD HH:mm:ss\"),\r\n                ]}\r\n              />\r\n              {/* <DatePicker.RangePicker showTime /> */}\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/codeBarre.png\"}\r\n                style={{ width: \"300px\" }}\r\n              />{\" \"}\r\n              <Typography style={{ fontSize: \"17px\" }}>\r\n                {data[0].PRCCODE + \"\"}\r\n              </Typography>{\" \"}\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      ),\r\n      title: \"Code Bare\",\r\n    });\r\n  };\r\n  showModalUL = (Ul) => {\r\n    this.setState({\r\n      visible: true,\r\n      width: 500,\r\n      contenu: (\r\n        <div>\r\n          <Row>\r\n            <Col span={12}>\r\n              <DescriptionItem\r\n                title=\"Code\"\r\n                content={this.props.ListAllUL[Ul].RPULCEXT}\r\n              />\r\n            </Col>\r\n            <Col span={12}>\r\n              <DescriptionItem\r\n                title=\"Type\"\r\n                content={this.props.ListAllUL[Ul].RPULTYPUL}\r\n              />\r\n            </Col>\r\n          </Row>{\" \"}\r\n          <Row>\r\n            <Col span={12}>\r\n              <DescriptionItem title=\"Etat\" content=\"---\" />\r\n            </Col>\r\n            <Col span={12}>\r\n              <DescriptionItem\r\n                title=\"Poid\"\r\n                content={this.props.ListAllUL[Ul].RPULPOID}\r\n              />\r\n            </Col>\r\n          </Row>{\" \"}\r\n          <Row>\r\n            <Col span={12}>\r\n              <DescriptionItem\r\n                title=\"Longueur\"\r\n                content={this.props.ListAllUL[Ul].RPULLANG}\r\n              />\r\n            </Col>\r\n            <Col span={12}>\r\n              <DescriptionItem\r\n                title=\"Largeur\"\r\n                content={this.props.ListAllUL[Ul].RPULLARG}\r\n              />\r\n            </Col>{\" \"}\r\n          </Row>{\" \"}\r\n          <Row>\r\n            <Col span={12}>\r\n              <DescriptionItem\r\n                title=\"Coefition\"\r\n                content={this.props.ListAllUL[Ul].RPULCOEF}\r\n              />\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n              <DescriptionItem\r\n                title=\"Hauteur\"\r\n                content={this.props.ListAllUL[Ul].RPULHAUT}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={24}>\r\n              <div>\r\n                <p>Description</p>\r\n                <Typography.Paragraph type=\"secondary\">\r\n                  {this.props.ListAllUL[Ul].RPULDSC}\r\n                </Typography.Paragraph>{\" \"}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      ),\r\n      title: \"Unité logistique\",\r\n    });\r\n  };\r\n  handleOk = () => {\r\n    this.setState({\r\n      modalText: \"The modal will be closed after two seconds\",\r\n      confirmLoading: true,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({ visible: false, confirmLoading: false });\r\n    }, 2000);\r\n  };\r\n  handleCancel = () => {\r\n    console.log(\"Clicked cancel button\", this.state.VLUL);\r\n\r\n    this.setState({ visible: false });\r\n  };\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable || !this.props.update) {\r\n        return col;\r\n      }\r\n      console.log(\"boom ka => \", this.props.update);\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          max: col.max,\r\n          required: col.required,\r\n          disabled: col.disabled,\r\n          pattern: col.pattern,\r\n          type: col.type,\r\n          update: this.props.update,\r\n          handleSave: this.handleSave,\r\n          Uls: this.state.VLUL,\r\n          setUpdateVV: this.props.setUpdateVV,\r\n        }),\r\n      };\r\n    });\r\n\r\n    // ajouter de datatable\r\n    const { xScroll, yScroll, ...state } = this.state;\r\n    const scroll = {};\r\n    if (yScroll) {\r\n      scroll.y = 240;\r\n    }\r\n    if (xScroll) {\r\n      scroll.x = \"100vw\";\r\n    }\r\n\r\n    // const tableColumns = this.state.columns.map((item) => ({\r\n    //   ...item,\r\n    //   ellipsis: state.ellipsis,\r\n    // }));\r\n    // if (xScroll === \"fixed\") {\r\n    //   tableColumns[0].fixed = true;\r\n    //   tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n    // }\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <Table\r\n          className=\"template-dms\"\r\n          title={() => (\r\n            <TitleCustomize\r\n              vues={{\r\n                vueSysteme: vueSysteme,\r\n                vuesPersonnalises: vuesPersonnalises,\r\n              }}\r\n              title={\"Variante de vente\"}\r\n              enAdd={(e) => {\r\n                this.props.showDrawer(e);\r\n                this.props.setSiseForm(1435 - 500 + \"px\");\r\n                this.props.setDrawerState(\r\n                  \"\",\r\n                  <VarianteVenteDrawer\r\n                    ListAllUL={this.props.ListAllUL}\r\n                    ListUL={this.props.ListUL}\r\n                    setNewVV={(VV) => this.props.setNewVL(VV)}\r\n                    closeDrawer={() => this.props.closeDrawer()}\r\n                    addVV={(datas) => this.handleAdd(datas)}\r\n                    isLoading={this.props.isLoading}\r\n                    changecome={this.props.changecome}\r\n                    updateCtc={this.props.updateCtc}\r\n                    onFormulaireChange={(value) =>\r\n                      this.props.onFormulaireChange(value)\r\n                    }\r\n                    token={this.props.token}\r\n                    hostStorage={this.props.hostStorage}\r\n                    goTo={(link) => this.props.goTo(link)}\r\n                    handleInputChange={this.props.handleInputChange}\r\n                    user_id={this.props.user_id}\r\n                    service={this.props.service}\r\n                  />,\r\n                  500,\r\n                  () => {\r\n                    console.log(\"en close drawer\");\r\n                    this.props.setSiseForm(\"\");\r\n                  }\r\n                );\r\n              }}\r\n              // {this.showModal}\r\n              // {this.handleAdd}\r\n              type=\"primary\"\r\n              style={{\r\n                marginBottom: 16,\r\n              }}\r\n            />\r\n          )}\r\n          // {...this.state}\r\n          // vues={{\r\n          //   vueSysteme: vueSysteme,\r\n          //   vuesPersonnalises: vuesPersonnalises,\r\n          // }}\r\n          size=\"small\"\r\n          pagination={{ position: [this.state.top, this.state.bottom] }}\r\n          // columns={tableColumns}\r\n          // dataSource={state.hasData ? this.state.data : null}\r\n          // scroll={scroll}\r\n          scroll={{ x: 500 }}\r\n          components={components}\r\n          rowSelection={{ ...rowSelection }}\r\n          rowClassName={() => \"editable-row\"}\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n        />{\" \"}\r\n        <Modal\r\n          title={this.state.title}\r\n          // style={{ display: \"flex\" }}\r\n          // centered\r\n          width={this.state.width}\r\n          visible={this.state.visible}\r\n          onOk={this.handleCancel}\r\n          confirmLoading={this.state.confirmLoading}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          {/* <p>{this.state.modalText}</p> */}\r\n\r\n          {this.state.contenu}\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Divider, Input, Row, message, ConfigProvider } from \"antd\";\r\nimport {\r\n  Button,\r\n  DatePicker,\r\n  Form,\r\n  InputNumber,\r\n  Select,\r\n  Space,\r\n  Typography,\r\n  Upload,\r\n} from \"dmsui\";\r\n\r\nimport {\r\n  ClearOutlined,\r\n  DollarOutlined,\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport { validateMessages } from \"../../../../Constante\";\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\nexport default class VarianteVenteDrawer extends Component {\r\n  static propTypes = {\r\n    prop: PropTypes,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      VLUL: [],\r\n      userData: [],\r\n      loadingPhoto: false,\r\n      changecome: false,\r\n      Profiles: [],\r\n      loading: true,\r\n      form: {},\r\n      photo: null,\r\n      targetKeys: [],\r\n      update: true,\r\n      defaultValue: this.props.contact != null ? this.props.contact[0] : null,\r\n      // null,\r\n\r\n      datas: { US_EMAIL: \"\", US_NOMUSR: \"\", US_PRNUSR: \"\", US_TYPUSR: \"\" },\r\n    };\r\n  }\r\n  formRef = React.createRef();\r\n\r\n  activerUpdate() {}\r\n  onChange = (keys) => {\r\n    this.setState({ targetKeys: keys });\r\n  };\r\n  getUlType(type) {\r\n    switch (type) {\r\n      case 0:\r\n        return \"uvc\";\r\n      case 1:\r\n        return \"sub-carton\";\r\n      case 2:\r\n        return \"carton\";\r\n      case 3:\r\n        return \"couche\";\r\n      case 3:\r\n        return \"palette\";\r\n      default:\r\n        return \"autre\";\r\n    }\r\n  }\r\n  onFinish = async (values) => {\r\n    console.log(\r\n      \"------------------debut-Submit-NewVarianteVente------------------\"\r\n    );\r\n    const rangeTimeValue = values[\"date\"];\r\n    // MUTDDEB: rangeTimeValue[0].format(\"YYYY-MM-DD HH:mm:ss\"),\r\n    //     MUTDFIN: rangeTimeValue[1].format(\"YYYY-MM-DD HH:mm:ss\"),\r\n    var loadingOnsubmit = true;\r\n    message.loading(\"Loading..\", loadingOnsubmit);\r\n    try {\r\n      console.log(\r\n        \"vlul => \",\r\n        this.state.VLUL[values.RPVVCINUL],\r\n        !!this.state.VLUL[values.RPVVCINUL] &&\r\n          this.state.VLUL[values.RPVVCINUL].VL != null\r\n      );\r\n      values.RPVVCINUL =\r\n        !!this.state.VLUL[values.RPVVCINUL] &&\r\n        this.state.VLUL[values.RPVVCINUL].VL != null\r\n          ? this.state.VLUL[values.RPVVCINUL]\r\n          : values.RPVVCINUL;\r\n      if (rangeTimeValue != null) {\r\n        values.PRCDDEB = rangeTimeValue[0].format(\"YYYY-MM-DD HH:mm:ss\");\r\n        values.PRCDFIN = rangeTimeValue[1].format(\"YYYY-MM-DD HH:mm:ss\");\r\n      }\r\n      values.RPVVPHOTO =\r\n        values.RPVVPHOTO != null && values.RPVVPHOTO.fileList[0].originFileObj;\r\n      values.imageUrl = this.state.imageUrl;\r\n      console.log(values);\r\n      this.props.setNewVV(values);\r\n      this.props.closeDrawer();\r\n      this.props.addVV(values);\r\n      this.onReset();\r\n      this.setState({ VLUL: [] });\r\n      console.log(\r\n        \"------------------fin-Submit-NewVarianteVente------------------\"\r\n      );\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      console.log(\r\n        \"------------------fin-Submit-NewVarianteVente------------------\"\r\n      );\r\n    }\r\n  };\r\n\r\n  onSubmit = () => {\r\n    this.formRef.current.submit();\r\n    console.log(this.formRef.current);\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n    this.setState({ changecome: false });\r\n    // console.log(this.formRef.current);\r\n  };\r\n  handleChange = (info) => {\r\n    getBase64(info.file.originFileObj, (imageUrl) =>\r\n      this.setState({\r\n        imageUrl,\r\n        loadingPhoto: false,\r\n      })\r\n    );\r\n    // }\r\n  };\r\n\r\n  labelComposant = (label, Icon) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100px\",\r\n            fontSize: \"14px\",\r\n            fontWeight: \"600\",\r\n          }}\r\n        >\r\n          {label}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  };\r\n  componentDidMount() {\r\n    console.log(\"all ul\", this.props.ListAllUL);\r\n    this.props.ListUL != null &&\r\n      this.props.ListUL.map((Vl, indexVl) => {\r\n        // console.log(\"ul nta3 vl => \", Vl);\r\n\r\n        Vl.UL != null &&\r\n          Vl.UL.map((Ul, indexUl) => {\r\n            const { VLUL } = this.state;\r\n            VLUL.push({\r\n              VL: indexVl,\r\n              UL: indexUl,\r\n              titre: Vl.RPLLCEXT + \" \" + Ul.RPULTYPUL,\r\n            });\r\n          });\r\n      });\r\n    this.setState({\r\n      loading: false,\r\n      VLUL: this.props.ListAllUL.concat(this.state.VLUL),\r\n    });\r\n    console.log(\"all ul finale\", this.state.VLUL);\r\n  }\r\n  render() {\r\n    const { isLoading, handleInputChange } = this.props;\r\n    const { loadingPhoto, imageUrl } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        {loadingPhoto ? <LoadingOutlined /> : <PlusOutlined />}\r\n        <div style={{ marginTop: 8 }}>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      !this.state.loading && (\r\n        <ConfigProvider form={{ validateMessages: validateMessages.fr }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"baseline\",\r\n            }}\r\n          >\r\n            <Typography\r\n              style={{\r\n                display: \"flex\",\r\n                fontSize: \"15px\",\r\n                fontWeight: \"600\",\r\n                marginBottom: \"15px\",\r\n              }}\r\n            >\r\n              New variante de vente\r\n            </Typography>\r\n            <Button\r\n              type=\"text\"\r\n              icon={<ClearOutlined />}\r\n              onClick={() => this.onReset()}\r\n            />\r\n          </div>\r\n          <Form\r\n            ref={this.formRef}\r\n            layout=\"vertical\"\r\n            name=\"control-ref\"\r\n            initialValues={{ ...this.state.defaultValue }}\r\n            onFinish={this.onFinish}\r\n          >\r\n            <Row gutter={[20, 20]} justify=\"center\" align=\"stretch\">\r\n              <Col span={24}>\r\n                <Row gutter={[16, 0]} align=\"stretch\" justify=\"space-between\">\r\n                  <Col span={24}>\r\n                    {\" \"}\r\n                    <Row\r\n                      gutter={[16, 0]}\r\n                      align=\"stretch\"\r\n                      justify=\"space-between\"\r\n                    >\r\n                      <Col span={14}>\r\n                        {\" \"}\r\n                        <Row gutter={[0, 0]} align=\"stretch\">\r\n                          {/* <Col flex=\"auto\">\r\n                            <Form.Item\r\n                              label=\"Code\"\r\n                              name={\"RPVVCEXT\"}\r\n                              hasFeedback\r\n                              rules={[\r\n                                {\r\n                                  required: false,\r\n                                  // max: 50,\r\n                                },\r\n                              ]}\r\n                            >\r\n                           \r\n                              <Input placeholder=\"Entrer le code...\" />\r\n                            </Form.Item>\r\n                          </Col> */}\r\n                          <Col flex=\"auto\">\r\n                            <Form.Item\r\n                              label=\"Code\"\r\n                              name={\"RPVVCEXT\"}\r\n                              rules={[\r\n                                {\r\n                                  required: true,\r\n                                  max: 50,\r\n                                },\r\n                              ]}\r\n                              hasFeedback\r\n                            >\r\n                              <Input placeholder=\"Entrer le Code...\" />\r\n                            </Form.Item>{\" \"}\r\n                          </Col>\r\n                          <Col flex=\"auto\">\r\n                            <Form.Item\r\n                              label=\"Libelle\"\r\n                              name={\"RPVVLIBL\"}\r\n                              rules={[\r\n                                {\r\n                                  required: true,\r\n                                  max: 150,\r\n                                },\r\n                              ]}\r\n                              hasFeedback\r\n                            >\r\n                              <Input placeholder=\"Entrer le libellé...\" />\r\n                            </Form.Item>{\" \"}\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>{\" \"}\r\n                      <Col span={10}>\r\n                        {\" \"}\r\n                        <Col flex=\"auto\">\r\n                          <Form.Item\r\n                            // label=\"Code\"\r\n                            style={{ margin: \"28px 0 0 0\" }}\r\n                            name={\"RPVVPHOTO\"}\r\n                            // hasFeedback\r\n                            rules={[\r\n                              {\r\n                                required: false,\r\n                              },\r\n                            ]}\r\n                          >\r\n                            <Upload\r\n                              name=\"avatar\"\r\n                              listType=\"picture-card\"\r\n                              className=\"vv-uploader\"\r\n                              showUploadList={false}\r\n                              style={{ width: \"500px\", objectFit: \"cover\" }}\r\n                              action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                              // beforeUpload={beforeUpload}\r\n                              onChange={this.handleChange}\r\n                            >\r\n                              {imageUrl ? (\r\n                                <img\r\n                                  src={imageUrl}\r\n                                  alt=\"avatar\"\r\n                                  style={{ width: \"100%\", objectFit: \"cover\" }}\r\n                                />\r\n                              ) : (\r\n                                uploadButton\r\n                              )}\r\n                            </Upload>\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col span={8}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          label=\"Acronyme\"\r\n                          name={\"RPVVLIBC\"}\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                              max: 35,\r\n                            },\r\n                          ]}\r\n                          hasFeedback\r\n                        >\r\n                          <Input placeholder=\"Entrer l'acronyme...\" />\r\n                        </Form.Item>{\" \"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                  <Col span={16}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          label=\"Unité logistique\"\r\n                          name={\"RPVVCINUL\"}\r\n                          hasFeedback\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            allowClear\r\n                            placeholder=\"Selectionner l'unité logistique...\"\r\n                          >\r\n                            {/* {this.props.ListUL != null &&\r\n                              this.props.ListUL.map((Vl, indexVl) => {\r\n                                console.log(\"ul nta3 vl => \", Vl);\r\n                                return (\r\n                                  Vl.UL != null &&\r\n                                  Vl.UL.map((Ul, indexUl) => {\r\n                                    const { VLUL } = this.state;\r\n                                    VLUL.push({ VL: indexVl, UL: indexUl });\r\n                                    return (\r\n                                      <Select.Option value={VLUL.length - 1}>\r\n                                        {Vl.RPLLCEXT + \" \" + Ul.RPULTYPUL}\r\n                                      </Select.Option>\r\n                                    );\r\n                                  })\r\n                                );\r\n                              })} */}\r\n                            {this.state.VLUL != null &&\r\n                              this.state.VLUL.map((Ul, index) => (\r\n                                <Select.Option\r\n                                  value={!!Ul.titre ? index : Ul.ID_ROWID}\r\n                                >\r\n                                  {!!Ul.titre\r\n                                    ? Ul.titre\r\n                                    : this.getUlType(Ul.RPULTYPUL) +\r\n                                      \", (\" +\r\n                                      Ul.cextVl +\r\n                                      \")\"}\r\n                                </Select.Option>\r\n                              ))}\r\n                            {/* {this.props.ListAllUL.map((Ul, index) => (\r\n                              <Select.Option value={index}>\r\n                                {Ul.RPULCEXT}\r\n                              </Select.Option>\r\n                            ))} */}\r\n                          </Select>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                  <Col span={12}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          label=\"Code barre\"\r\n                          style={{\r\n                            // marginBottom: \"10px\",\r\n                            width: \"100%\",\r\n                          }}\r\n                          name={\"PRCCODE\"}\r\n                          hasFeedback\r\n                        >\r\n                          <InputNumber\r\n                            style={{\r\n                              width: \"100%\",\r\n                            }}\r\n                            //\r\n                            placeholder=\"ABC-abc-1234\"\r\n                          />\r\n                        </Form.Item>{\" \"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                  <Col span={12}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          label=\"Periode validité\"\r\n                          style={{\r\n                            // marginBottom: \"10px\",\r\n                            width: \"100%\",\r\n                          }}\r\n                          name={\"date\"}\r\n                          hasFeedback\r\n                        >\r\n                          <DatePicker.RangePicker\r\n                            showTime\r\n                            style={{\r\n                              width: \"100%\",\r\n                            }}\r\n                          />\r\n                        </Form.Item>{\" \"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                  <Col span={9}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          name={\"RPVPRIX\"}\r\n                          label=\"Prix de ventes\"\r\n                          style={{\r\n                            // marginBottom: \"10px\",\r\n                            width: \"100%\",\r\n                          }}\r\n                          hasFeedback\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <InputNumber\r\n                            style={{\r\n                              width: \"100%\",\r\n                            }}\r\n                            addonAfter=\"$\"\r\n                            // addonBefore={<DollarOutlined />}\r\n                            // formatter={(value) => `${value}$`}\r\n                            placeholder=\"50.00$\"\r\n                          />\r\n                          {/* <Select\r\n                            allowClear\r\n                            placeholder=\"Selectionner l'etat...\"\r\n                          >\r\n                            <Select.Option value={\"0\"}>1</Select.Option>{\" \"}\r\n                            <Select.Option value={\"2\"}>2</Select.Option>\r\n                          </Select> */}\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col span={15}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          label=\"poid/contenance \"\r\n                          style={{\r\n                            // marginBottom: \"10px\",\r\n                            width: \"100%\",\r\n                          }}\r\n                          name={\"RPVVPUVC\"}\r\n                          hasFeedback\r\n                        >\r\n                          <InputNumber\r\n                            style={{\r\n                              width: \"100%\",\r\n                            }}\r\n                            addonAfter=\"$\"\r\n                            placeholder=\"1.00 kg\"\r\n                          />\r\n                        </Form.Item>{\" \"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                  <Divider style={{ margin: \"0px\", marginTop: \"40px\" }} />\r\n                  <Col span={24}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col\r\n                        flex=\"auto\"\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"flex-end\",\r\n                          marginTop: \"10px\",\r\n                        }}\r\n                      >\r\n                        <Space>\r\n                          <Button\r\n                            onClick={(e) => {\r\n                              this.props.closeDrawer();\r\n                              this.onReset();\r\n                            }}\r\n                          >\r\n                            close\r\n                          </Button>\r\n                          <Button\r\n                            type=\"primary\"\r\n                            onClick={(e) => {\r\n                              this.onSubmit();\r\n                            }}\r\n                          >\r\n                            submit\r\n                          </Button>\r\n                        </Space>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ConfigProvider>\r\n      )\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Space, Menu, Button, Divider, Row, Col, Dropdown } from \"dmsui\";\r\nimport {\r\n  MoreOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  PushpinOutlined,\r\n  SearchOutlined,\r\n  SyncOutlined,\r\n  PrinterOutlined,\r\n  DownloadOutlined,\r\n  FilterOutlined,\r\n  AppstoreAddOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nexport default class TitleCustomize extends Component {\r\n  render() {\r\n    return (\r\n      <Row justify=\"end\">\r\n        <Col span={20} style={{ display: \"flex\" }}>\r\n          <Space size={0}>\r\n            <Dropdown\r\n              overlay={\r\n                <Menu style={{ minWidth: \"250px\" }} className=\"dms-divder-menu\">\r\n                  <Divider orientation=\"left\" plain>\r\n                    Vues système\r\n                  </Divider>\r\n                  {this.props.vues.vueSysteme.map((data, indes) => (\r\n                    <Menu.Item key=\"1\">\r\n                      <Row>\r\n                        <Col span={2}>\r\n                          <Button\r\n                            type=\"text\"\r\n                            shape=\"circle\"\r\n                            icon={data.check && <PushpinOutlined />}\r\n                            size={\"small\"}\r\n                            // onClick={(e) => e.preventDefault()}\r\n                          />\r\n                        </Col>\r\n                        <Col span={17}>\r\n                          <Divider type=\"vertical\" />\r\n                          {data.titre}\r\n                        </Col>\r\n                        <Col span={5}>\r\n                          <Row wrap={false} justify=\"end\" align=\"middle\">\r\n                            <Col span={24}>\r\n                              <Space>\r\n                                <Button\r\n                                  type=\"text\"\r\n                                  shape=\"circle\"\r\n                                  icon={<EditOutlined />}\r\n                                  size={\"small\"}\r\n                                  // onClick={(e) => e.preventDefault()}\r\n                                />\r\n                                <Button\r\n                                  type=\"text\"\r\n                                  shape=\"circle\"\r\n                                  icon={<DeleteOutlined />}\r\n                                  size={\"small\"}\r\n                                  // onClick={(e) => e.preventDefault()}\r\n                                />\r\n                              </Space>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </Menu.Item>\r\n                  ))}\r\n\r\n                  <Divider orientation=\"left\" plain>\r\n                    Vues personnalisés\r\n                  </Divider>\r\n                  {this.props.vues.vuesPersonnalises.map((data, indes) => (\r\n                    <Menu.Item key=\"1\">\r\n                      <Row>\r\n                        <Col span={2}>\r\n                          <Button\r\n                            type=\"text\"\r\n                            shape=\"circle\"\r\n                            icon={data.check && <PushpinOutlined />}\r\n                            size={\"small\"}\r\n                            // onClick={(e) => e.preventDefault()}\r\n                          />\r\n                        </Col>\r\n                        <Col span={17}>\r\n                          <Divider type=\"vertical\" />\r\n                          {data.titre}\r\n                        </Col>\r\n                        <Col span={5}>\r\n                          <Row wrap={false} justify=\"end\" align=\"middle\">\r\n                            <Col span={24}>\r\n                              <Space>\r\n                                <Button\r\n                                  type=\"text\"\r\n                                  shape=\"circle\"\r\n                                  icon={<EditOutlined />}\r\n                                  size={\"small\"}\r\n                                  // onClick={(e) => e.preventDefault()}\r\n                                />\r\n                                <Button\r\n                                  type=\"text\"\r\n                                  shape=\"circle\"\r\n                                  icon={<DeleteOutlined />}\r\n                                  size={\"small\"}\r\n                                  // onClick={(e) => e.preventDefault()}\r\n                                />\r\n                              </Space>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </Menu.Item>\r\n                  ))}\r\n                  <Menu.Divider />\r\n                  <Menu.Item key=\"3\">\r\n                    <div className=\"vue-personnalisee\">\r\n                      Créer une vue personnalisée\r\n                    </div>\r\n                  </Menu.Item>\r\n                </Menu>\r\n              }\r\n              trigger={[\"click\"]}\r\n            >\r\n              <Button\r\n                type=\"text\"\r\n                // shape=\"circle\"\r\n                icon={\r\n                  <MoreOutlined\r\n                    className=\"dms-table-icon-secandary\"\r\n                    // style={{\r\n                    //   color: '#606060'e\r\n                    // }}\r\n                  />\r\n                }\r\n                // size={\"large\"}\r\n                onClick={(e) => e.preventDefault()}\r\n              />\r\n            </Dropdown>\r\n            {/* <Typography.Title level={5}> */}\r\n            <div\r\n              className=\"dms-table-icon-secandary\"\r\n              style={{\r\n                fontWeight: \"500\",\r\n                fontSize: \"17px\",\r\n                // color: '#444'\r\n              }}\r\n            >\r\n              {\" \"}\r\n              {this.props.title}\r\n            </div>\r\n            {/* </Typography.Title> */}\r\n            <Button\r\n              type=\"text\"\r\n              shape=\"circle\"\r\n              icon={<SyncOutlined className=\"dms-table-icon-primary\" />}\r\n              size={\"small\"}\r\n            />\r\n          </Space>\r\n        </Col>\r\n        <Col\r\n          span={4}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          <Space size={0}>\r\n            <Button\r\n              // shape=\"circle\"\r\n              type=\"text\"\r\n              icon={<SearchOutlined className=\"dms-table-icon-secandary\" />}\r\n              // size={\"large\"}\r\n            />\r\n            <Button\r\n              // shape=\"circle\"\r\n              type=\"text\"\r\n              icon={<PrinterOutlined className=\"dms-table-icon-secandary\" />}\r\n              // size={\"small\"}\r\n            />{\" \"}\r\n            <Button\r\n              // shape=\"circle\"\r\n              type=\"text\"\r\n              icon={<DownloadOutlined className=\"dms-table-icon-secandary\" />}\r\n              // size={\"large\"}\r\n            />{\" \"}\r\n            <Button\r\n              // shape=\"circle\"\r\n              type=\"text\"\r\n              icon={<FilterOutlined className=\"dms-table-icon-secandary\" />}\r\n              // size={\"large\"}\r\n            />\r\n            <Button\r\n              // shape=\"circle\"\r\n              type=\"text\"\r\n              onClick={(e) => this.props.enAdd(e)}\r\n              icon={<AppstoreAddOutlined className=\"dms-table-icon-primary\" />}\r\n              // size={\"large\"}\r\n            />\r\n          </Space>{\" \"}\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import { List, Avatar, Space, Input, ConfigProvider } from \"antd\";\r\nimport {\r\n  DownloadOutlined,\r\n  DeleteOutlined,\r\n  CloudUploadOutlined,\r\n  SelectOutlined,\r\n  AppstoreAddOutlined,\r\n  SearchOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Upload, Button } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Col,\r\n  Form,\r\n  Modal,\r\n  Popconfirm,\r\n  Row,\r\n  Select,\r\n  Tag,\r\n  Typography,\r\n} from \"dmsui\";\r\nimport { message } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { validateMessages } from \"../../../../Constante\";\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst props = {\r\n  name: \"file\",\r\n  multiple: true,\r\n  action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n  onChange(info) {\r\n    const { status } = info.file;\r\n    if (status !== \"uploading\") {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n\r\n    if (status === \"done\") {\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } else if (status === \"error\") {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n  onDrop(e) {\r\n    console.log(\"Dropped files\", e.dataTransfer.files);\r\n  },\r\n};\r\n\r\nvar listData = [];\r\nfunction confirmDelete() {\r\n  Modal.confirm({\r\n    title: \"Do you want to delete these items?\",\r\n    icon: <ExclamationCircleOutlined />,\r\n    content:\r\n      \"When clicked the OK button, this dialog will be closed after 1 second\",\r\n    onOk() {\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(Math.random() > 0.5 ? resolve : reject, 1000);\r\n      }).catch(() => console.log(\"Oops errors!\"));\r\n    },\r\n    onCancel() {},\r\n  });\r\n}\r\nexport class FileUpload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listData: [],\r\n      visible: false,\r\n      confirmLoading: false,\r\n      modalText: \"Content of the modal\",\r\n      loading: true,\r\n    };\r\n\r\n    this.deleteFiles = this.deleteFiles.bind(this);\r\n  }\r\n  formRef = React.createRef();\r\n  onFinish = async (values) => {\r\n    console.log(\"------------------debut-Submit-Newfiles------------------\");\r\n    // var loadingOnsubmit = true;\r\n    // message.loading(\"Loading..\", loadingOnsubmit);\r\n    try {\r\n      console.log(values);\r\n      var files = [];\r\n      values.RPTFILE.fileList.map((data, index) => {\r\n        this.state.listData.push({\r\n          RPTFILE: \"https://ant.design\",\r\n          RPTNAMFIL: values.RPTNAMFIL + \" \" + index,\r\n          avatar:\r\n            process.env.PUBLIC_URL +\r\n            \"/file/\" +\r\n            data.name.split(\".\").pop() +\r\n            \".png\",\r\n          extension: \".\" + data.name.split(\".\").pop(),\r\n          RPTTYPDOC: values.RPTTYPDOC,\r\n          key: this.state.listData.length + 1,\r\n        });\r\n        console.log(\"this.state.listData =>\", this.state.listData);\r\n        this.props.setNewFiles({\r\n          RPTFILE: data.originFileObj,\r\n          RPTNAMFIL: values.RPTNAMFIL + \" \" + index,\r\n          RPTTYPDOC: values.RPTTYPDOC,\r\n          key: this.state.listData.length,\r\n        });\r\n      });\r\n\r\n      this.setState({\r\n        modalText: \"The modal will be closed after two seconds\",\r\n        confirmLoading: true,\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({ visible: false, confirmLoading: false });\r\n        this.onReset();\r\n      }, 2000);\r\n      console.log(\"------------------fin-Submit-Newfiles------------------\");\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      console.log(\"------------------fin-Submit-Newfiles------------------\");\r\n    }\r\n  };\r\n  getfileimage(ext) {\r\n    switch (ext) {\r\n      case \".txt\":\r\n        return process.env.PUBLIC_URL + \"/file/doc.png\";\r\n      case \".doc\":\r\n        return process.env.PUBLIC_URL + \"/file/doc.png\";\r\n      case \".css\":\r\n        return process.env.PUBLIC_URL + \"/file/css.png\";\r\n      case \".gif\":\r\n        return process.env.PUBLIC_URL + \"/file/gif.png\";\r\n      case \".html\":\r\n        return process.env.PUBLIC_URL + \"/file/html.png\";\r\n      case \".mov\":\r\n        return process.env.PUBLIC_URL + \"/file/mov.png\";\r\n      case \".mp3\":\r\n        return process.env.PUBLIC_URL + \"/file/mp3.png\";\r\n      case \".pdf\":\r\n        return process.env.PUBLIC_URL + \"/file/pdf.png\";\r\n      case \".ppt\":\r\n        return process.env.PUBLIC_URL + \"/file/ppt.png\";\r\n      case \".xls\":\r\n        return process.env.PUBLIC_URL + \"/file/xls.png\";\r\n      case \".zip\":\r\n        return process.env.PUBLIC_URL + \"/file/zip.png\";\r\n      default:\r\n        return process.env.PUBLIC_URL + \"/file/jpg.png\";\r\n    }\r\n  }\r\n  getTypeDoc(value) {\r\n    switch (value) {\r\n      case 1:\r\n        return \"Image\";\r\n      case 2:\r\n        return \"Guide\";\r\n      case 3:\r\n        return \"Doc installation\";\r\n      default:\r\n        return \"autre\";\r\n    }\r\n  }\r\n  onSubmit = () => {\r\n    this.formRef.current.submit();\r\n    console.log(this.formRef.current);\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n  showModal = () => {\r\n    this.setState({ visible: true });\r\n  };\r\n  handleOk = () => {\r\n    this.onSubmit();\r\n  };\r\n  handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    this.setState({ visible: false });\r\n    this.onReset();\r\n  };\r\n  componentDidMount() {\r\n    this.state.listData = !!this.props.ListFiles ? this.props.ListFiles : [];\r\n    this.setState({ loading: false });\r\n  }\r\n  deleteFiles(itemm) {\r\n    console.log(\"itemm => \", itemm);\r\n    this.props.setDeleteFiles(itemm);\r\n    const listData = this.state.listData.filter((item) => item !== itemm);\r\n    this.setState({ listData });\r\n  }\r\n  render() {\r\n    return (\r\n      !this.state.loading && (\r\n        <div\r\n          style={{\r\n            padding: \"5px\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <Row gutter={[10, 10]} justify=\"space-between\" align=\"stretch\">\r\n            <Col\r\n              span={24}\r\n              style={{\r\n                height: \"100%\",\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n              }}\r\n            >\r\n              <Input\r\n                size=\"small\"\r\n                prefix={<SearchOutlined style={{ color: \"#aaa\" }} />}\r\n                bordered={false}\r\n                placeholder=\"Entrer le nom du fichier...\"\r\n              />\r\n              <Select defaultValue=\"Jiangsu\">\r\n                <Select.Option value=\"Zhejiang\">image</Select.Option>\r\n                <Select.Option value=\"Jxiangsu\"> Guide</Select.Option>\r\n                <Select.Option value=\"Jiangsu\"> Doc installation</Select.Option>\r\n              </Select>{\" \"}\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={this.showModal}\r\n                icon={<AppstoreAddOutlined />}\r\n              >\r\n                New\r\n              </Button>{\" \"}\r\n              <Modal\r\n                title=\"Title\"\r\n                style={{ display: \"flex\" }}\r\n                // centered\r\n                width={500}\r\n                visible={this.state.visible}\r\n                onOk={this.handleOk}\r\n                confirmLoading={this.state.confirmLoading}\r\n                onCancel={this.handleCancel}\r\n              >\r\n                <ConfigProvider\r\n                  form={{ validateMessages: validateMessages.fr }}\r\n                >\r\n                  {/* <p>{this.state.modalText}</p> */}\r\n                  <Form\r\n                    ref={this.formRef}\r\n                    layout=\"vertical\"\r\n                    name=\"control-ref\"\r\n                    initialValues={{ ...this.state.defaultValue }}\r\n                    onFinish={this.onFinish}\r\n                  >\r\n                    {\" \"}\r\n                    <Row\r\n                      gutter={[5, 5]}\r\n                      // align=\"top\"\r\n                      style={{\r\n                        minHeight: \"250px\",\r\n                        maxHeight: \"400px\",\r\n                        overflowY: \"auto\",\r\n                      }}\r\n                    >\r\n                      <Col span={8}>\r\n                        <Form.Item\r\n                          // label=\"Type\"\r\n                          name={\"RPTTYPDOC\"}\r\n                          hasFeedback\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select defaultValue={1} style={{ width: \"100%\" }}>\r\n                            <Select.Option value={1}>image</Select.Option>\r\n                            <Select.Option value={2}> Guide</Select.Option>\r\n                            <Select.Option value={3}>\r\n                              {\" \"}\r\n                              Doc installation\r\n                            </Select.Option>\r\n                          </Select>\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={16}>\r\n                        <Form.Item\r\n                          // label=\"Type\"\r\n                          name={\"RPTNAMFIL\"}\r\n                          hasFeedback\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input\r\n                            style={{ width: \"100%\" }}\r\n                            placeholder=\"Entrer le nom du fichier...\"\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      {/* </Input.Group> */}\r\n                      <Col span={24} style={{ height: \"200px\" }}>\r\n                        <Form.Item\r\n                          // label=\"Type\"\r\n                          name={\"RPTFILE\"}\r\n                          // hasFeedback\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Dragger {...props} listType=\"picture\">\r\n                            <p className=\"ant-upload-drag-icon\">\r\n                              <CloudUploadOutlined />\r\n                            </p>\r\n                            <p className=\"ant-upload-text\">\r\n                              Drop files to upload or <a>browse</a>\r\n                            </p>\r\n                          </Dragger>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </ConfigProvider>{\" \"}\r\n              </Modal>\r\n              {/* </Input.Group> */}\r\n            </Col>{\" \"}\r\n            <Col\r\n              span={24}\r\n              style={{\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              <List\r\n                // itemLayout=\"vertical\"\r\n                size=\"small\"\r\n                pagination={{\r\n                  onChange: (page) => {\r\n                    console.log(page);\r\n                  },\r\n                  pageSize: 4,\r\n                }}\r\n                dataSource={this.state.listData}\r\n                renderItem={(item) => (\r\n                  <List.Item\r\n                    key={item.title}\r\n                    actions={[\r\n                      <Link\r\n                        to={{\r\n                          pathname: process.env.PUBLIC_URL + \"cv.pdf\",\r\n                        }}\r\n                        target=\"_blank\"\r\n                        download\r\n                      >\r\n                        {\" \"}\r\n                        <Button\r\n                          type=\"text\"\r\n                          icon={\r\n                            <DownloadOutlined style={{ color: \"#69609e\" }} />\r\n                          }\r\n                          size=\"small\"\r\n                        />\r\n                      </Link>,\r\n                      <a\r\n                        href={process.env.PUBLIC_URL + \"/cv.pdf\"}\r\n                        target=\"_blank\"\r\n                      >\r\n                        <Button\r\n                          type=\"text\"\r\n                          icon={<SelectOutlined style={{ color: \"#69609e\" }} />}\r\n                          size=\"small\"\r\n                        />\r\n                      </a>,\r\n                      <Popconfirm\r\n                        title=\"Are you sure to delete this task?\"\r\n                        onConfirm={() => this.deleteFiles(item)}\r\n                        // onCancel={cancel}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                      >\r\n                        <a href=\"#\">\r\n                          <DeleteOutlined style={{ color: \"#69609e\" }} />\r\n                        </a>\r\n                      </Popconfirm>,\r\n                      // <EditOutlined />,\r\n                      // <Button\r\n                      //   type=\"text\"\r\n                      //   onClick={() => {\r\n                      //     this.deleteFiles(item);\r\n                      //     Modal.confirm({\r\n                      //       title: \"Do you want to delete these file?\",\r\n                      //       icon: <ExclamationCircleOutlined />,\r\n                      //       content:\r\n                      //         \"When clicked the OK button, this dialog will be closed after 1 second\",\r\n                      //       onOk() {\r\n                      //         console.log(\"file => :\", item);\r\n\r\n                      //         return new Promise((resolve, reject) => {\r\n                      //           setTimeout(\r\n                      //             Math.random() > 0.5 ? resolve : reject,\r\n                      //             1000\r\n                      //           );\r\n                      //         }).catch(() => console.log(\"Oops errors!\"));\r\n                      //       },\r\n                      //       onCancel() {},\r\n                      //     });\r\n                      //   }}\r\n                      //   icon={<DeleteOutlined style={{ color: \"#69609e\" }} />}\r\n                      //   size=\"small\"\r\n                      // />,\r\n                    ]}\r\n                  >\r\n                    <List.Item.Meta\r\n                      avatar={\r\n                        <Avatar\r\n                          src={this.getfileimage(item.extension)}\r\n                          shape=\"square\"\r\n                          style={{ padding: \"4px\" }}\r\n                        />\r\n                      }\r\n                      title={\r\n                        <Space style={{ display: \"flex\" }}>\r\n                          {\" \"}\r\n                          {/* <a href={item.href}></a> */}\r\n                          {/* <a href={\"cv.pdf\"} target=\"_blank\">\r\n                          {item.title}\r\n                        </a> */}\r\n                          <Link\r\n                            to={{\r\n                              pathname: process.env.PUBLIC_URL + \"cv.pdf\",\r\n                            }}\r\n                            target=\"_blank\"\r\n                            // download\r\n                          >\r\n                            {\" \"}\r\n                            {item.RPTNAMFIL}\r\n                          </Link>\r\n                          <Tag color=\"purple\">{item.extension}</Tag>\r\n                        </Space>\r\n                      }\r\n                      description={\r\n                        <div style={{ display: \"flex\" }}>\r\n                          <Typography.Text\r\n                            type=\"secondary\"\r\n                            style={{\r\n                              lineHeight: \"0.5715\",\r\n                              fontSize: \"12px\",\r\n                            }}\r\n                          >\r\n                            {this.getTypeDoc(item.RPTTYPDOC)}\r\n                          </Typography.Text>\r\n                        </div>\r\n                      }\r\n                    />\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            </Col>\r\n            <Col\r\n              span={10}\r\n              style={{\r\n                // border: \"1px solid #eee\",\r\n                // borderRadius: \"5px\",\r\n                padding: \"5px\",\r\n                // height: \"100%\",\r\n                overflowY: \"auto\",\r\n              }}\r\n            ></Col>{\" \"}\r\n          </Row>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n","import React, {\r\n  Component,\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Divider, Input, Row, message, ConfigProvider } from \"antd\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  InputNumber,\r\n  notification,\r\n  Select,\r\n  Space,\r\n  Table,\r\n  Typography,\r\n} from \"dmsui\";\r\n\r\nimport {\r\n  ClearOutlined,\r\n  MinusCircleOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport { insertUser, updateUser } from \"../../../../DjangoService/userService\";\r\nimport { userAdvancedSearchPath } from \"../../../../config\";\r\n//new\r\nimport { Popconfirm } from \"antd\";\r\nimport { DataTable } from \"dmsui\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport TitleCustomize from \"./TitleCustomize\";\r\nimport { validateMessages } from \"../../../../Constante\";\r\n//new\r\nconst expandable = {\r\n  expandedRowRender: (record) => <p>{record.description}</p>,\r\n};\r\nconst pagination = { position: \"bottom\" };\r\nconst vueSysteme = [];\r\nfor (let i = 1; i <= 1; i++) {\r\n  vueSysteme.push({\r\n    titre: \"Vue systéme \" + i,\r\n    check: true,\r\n  });\r\n}\r\nconst vuesPersonnalises = [];\r\nfor (let i = 1; i <= 3; i++) {\r\n  vuesPersonnalises.push({\r\n    titre: \"Vues personnalisés \" + i,\r\n    check: false,\r\n  });\r\n}\r\n\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(\r\n      `selectedRowKeys: ${selectedRowKeys}`,\r\n      \"selectedRows: \",\r\n      selectedRows\r\n    );\r\n  },\r\n  onSelect: (record, selected, selectedRows) => {\r\n    console.log(record, selected, selectedRows);\r\n  },\r\n  onSelectAll: (selected, selectedRows, changeRows) => {\r\n    console.log(selected, selectedRows, changeRows);\r\n  },\r\n};\r\n//befor\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  pattern,\r\n  max,\r\n  required,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  type,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n  useEffect(() => {\r\n    // console.log(\"tinane voila la\", max, \"record\", record);\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      console.log(\"variante vente update => \", values, \"recorde\", ...record);\r\n      toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log(\"Save failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        rules={[\r\n          {\r\n            required: required,\r\n            // max: max,\r\n            // pattern: pattern,\r\n            // message: `${title} is required.`,\r\n          },\r\n        ]}\r\n      >\r\n        {type == \"number\" ? (\r\n          <InputNumber\r\n            size=\"small\"\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n          />\r\n        ) : type == \"select\" ? (\r\n          <Select\r\n            size=\"small\"\r\n            // style={{ width: \"100%\" }}\r\n            showSearch\r\n            // style={{ width: 200 }}\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n            optionFilterProp=\"children\"\r\n          >\r\n            <Select.Option value={0}>UVC</Select.Option>\r\n            <Select.Option value={1}>Sub-carton</Select.Option>\r\n            <Select.Option value={2}>Carton</Select.Option>\r\n            <Select.Option value={3}>Layer</Select.Option>\r\n            <Select.Option value={4}>Palette</Select.Option>\r\n          </Select>\r\n        ) : (\r\n          <Input\r\n            size=\"small\"\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n          />\r\n        )}\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{\r\n          paddingRight: 24,\r\n        }}\r\n        onClick={toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\n//encien\r\n\r\nexport default class LogistiqueDrawer extends Component {\r\n  static propTypes = {\r\n    prop: PropTypes,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: \"Code\",\r\n        // max: 10,\r\n        type: \"text\",\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RPULCEXT\",\r\n        width: \"10%\",\r\n        fixed: \"left\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n\r\n      {\r\n        title: \"Type\",\r\n        // max: 10,\r\n        type: \"select\",\r\n        // pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RPULTYPUL\",\r\n        width: \"15%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n      {\r\n        title: \"Coefition\",\r\n        // max: 10,\r\n        type: \"number\",\r\n        // pattern: \"^[0-9]*$\",\r\n        required: true,\r\n        dataIndex: \"RPULCOEF\",\r\n        width: \"10%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n      {\r\n        title: \"Poid\",\r\n        type: \"number\",\r\n        // pattern: \"^[0-9]*$\",\r\n        required: false,\r\n        dataIndex: \"RPULPOID\",\r\n        width: \"8%\",\r\n        ellipsis: true,\r\n        showSorterTooltip: true,\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Longueur \",\r\n        type: \"number\",\r\n        // pattern: \"^[0-9]*$\",\r\n        required: false,\r\n        dataIndex: \"RPULLANG\",\r\n        width: \"11%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n      {\r\n        title: \"Largeur \",\r\n        type: \"number\",\r\n        // pattern: \"^[0-9]*$\",\r\n        required: false,\r\n        dataIndex: \"RPULLARG\",\r\n        width: \"10%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n      {\r\n        title: \"Hauteur \",\r\n        type: \"number\",\r\n        // pattern: \"^[0-9]*$\",\r\n        required: false,\r\n        dataIndex: \"RPULHAUT\",\r\n        width: \"10%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n      {\r\n        title: \"Description\",\r\n        type: \"text\",\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RPULDSC\",\r\n        width: \"20%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n      {\r\n        title: \"\",\r\n        fixed: \"right\",\r\n\r\n        width: \"5%\",\r\n        dataIndex: \"operation\",\r\n        render: (_, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              {/* <a>Delete</a> */}\r\n              <DeleteOutlined style={{ color: \"#f44336\" }} />\r\n            </Popconfirm>\r\n          ) : null,\r\n      },\r\n    ];\r\n    this.state = {\r\n      typeUniteL: [\r\n        { value: 0, titel: \"uvc\", active: true },\r\n        { value: 1, titel: \"sub-carton\", active: true },\r\n        { value: 2, titel: \"carton\", active: true },\r\n\r\n        { value: 3, titel: \"couche\", active: true },\r\n        { value: 4, titel: \"palette\", active: true },\r\n      ],\r\n      //new\r\n      bordered: false,\r\n      loading: false,\r\n      pagination,\r\n\r\n      expandable,\r\n      showHeader: true,\r\n      rowSelection: {},\r\n      scroll: undefined,\r\n      hasData: true,\r\n      tableLayout: undefined,\r\n      top: \"none\",\r\n      bottom: \"bottomRight\",\r\n\r\n      //before\r\n      dataSource: [],\r\n      count: 2,\r\n      //encien\r\n      userData: [],\r\n\r\n      changecome: false,\r\n      Profiles: [],\r\n      loading: false,\r\n      form: {},\r\n      photo: null,\r\n      // isLoading: this.props.match.params.id != null ? true : false,\r\n      // ii: false,\r\n      targetKeys: [],\r\n      update: true,\r\n      defaultValue: this.props.contact != null ? this.props.contact[0] : null,\r\n      // null,\r\n\r\n      datas: { US_EMAIL: \"\", US_NOMUSR: \"\", US_PRNUSR: \"\", US_TYPUSR: \"\" },\r\n    };\r\n  }\r\n  formRef = React.createRef();\r\n  onTypeChange = (value) => {\r\n    const { typeUniteL } = this.state;\r\n    typeUniteL[value].active = false;\r\n  };\r\n  activerUpdate() {}\r\n  onChange = (keys) => {\r\n    this.setState({ targetKeys: keys });\r\n  };\r\n  onFinish = async (values) => {\r\n    console.log(\r\n      \"------------------debut-Submit-NewPlanPalitisation------------------\"\r\n    );\r\n    var loadingOnsubmit = true;\r\n    message.loading(\"Loading..\", loadingOnsubmit);\r\n    try {\r\n      console.log(values);\r\n      values.UL != null\r\n        ? values.UL.map((data, index) => ((data.VV = []), (data.key = index)))\r\n        : (values.UL = []);\r\n      values.UL0 = this.state.dataSource;\r\n      values.ASC = [];\r\n      this.props.setNewVL(values);\r\n      this.props.setListeAllUl(this.state.dataSource);\r\n      this.props.closeDrawer();\r\n      this.props.addVL(values);\r\n      this.onReset();\r\n      console.log(\r\n        \"------------------fin-Submit-NewPlanPalitisation------------------\"\r\n      );\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      console.log(\r\n        \"------------------fin-Submit-NewPlanPalitisation------------------\"\r\n      );\r\n    }\r\n  };\r\n  onSubmit = () => {\r\n    this.formRef.current.submit();\r\n    console.log(this.formRef.current);\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n    this.setState({ dataSource: [] });\r\n    // console.log(this.formRef.current);\r\n  };\r\n\r\n  labelComposant = (label, Icon) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100px\",\r\n            fontSize: \"14px\",\r\n            fontWeight: \"600\",\r\n          }}\r\n        >\r\n          {label}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  };\r\n  getDataSource() {\r\n    return this.state.dataSource;\r\n  }\r\n  handleDelete = (key) => {\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({\r\n      dataSource: dataSource.filter((item) => item.key !== key),\r\n    });\r\n  };\r\n  handleAdd = () => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = {\r\n      key: count,\r\n      RPULTYPUL: 0,\r\n      RPULCEXT: \"code..\",\r\n      RPULDSC: \"description..\",\r\n      RPULCOEF: 0,\r\n      RPULETAT: 0,\r\n      RPULPOID: 0,\r\n      RPULLANG: 0,\r\n      RPULLARG: 0,\r\n      RPULHAUT: 0,\r\n      VV: [],\r\n    };\r\n    this.setState({\r\n      dataSource: [newData, ...dataSource],\r\n      count: count + 1,\r\n    });\r\n  };\r\n  handleSave = (row) => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, { ...item, ...row });\r\n    this.setState({\r\n      dataSource: newData,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, handleInputChange } = this.props;\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          max: col.max,\r\n          required: col.required,\r\n          pattern: col.pattern,\r\n          type: col.type,\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n\r\n    // ajouter de datatable\r\n    const { xScroll, yScroll, ...state } = this.state;\r\n    const scroll = {};\r\n    if (yScroll) {\r\n      scroll.y = 240;\r\n    }\r\n    if (xScroll) {\r\n      scroll.x = \"100vw\";\r\n    }\r\n    return (\r\n      !isLoading && (\r\n        <ConfigProvider form={{ validateMessages: validateMessages.fr }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"baseline\",\r\n              borderBottom: \"1px solid #eee\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n          >\r\n            <Typography\r\n              style={{\r\n                display: \"flex\",\r\n                fontSize: \"15px\",\r\n                fontWeight: \"600\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              New plan de paltisation\r\n            </Typography>\r\n            <Button\r\n              type=\"text\"\r\n              icon={<ClearOutlined />}\r\n              onClick={() => this.onReset()}\r\n            />\r\n          </div>\r\n\r\n          <Form\r\n            ref={this.formRef}\r\n            layout=\"horizontal\"\r\n            name=\"control-ref\"\r\n            initialValues={{ ...this.state.defaultValue }}\r\n            onFinish={this.onFinish}\r\n          >\r\n            <Row\r\n              gutter={[20, 20]}\r\n              justify=\"center\"\r\n              align=\"stretch\"\r\n              style={{\r\n                overflowY: \"auto\",\r\n                height: \"430px\",\r\n              }}\r\n            >\r\n              <Col span={24}>\r\n                <Row gutter={[16, 0]} align=\"stretch\" justify=\"space-between\">\r\n                  <Col span={14}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          label=\"Code\"\r\n                          name={\"RPLLCEXT\"}\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                              max: 50,\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input placeholder=\"Entrer le code...\" />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col span={10}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item label=\"Etat\" name={\"RPLLETAT\"} hasFeedback>\r\n                          <InputNumber\r\n                            style={{\r\n                              width: \"100%\",\r\n                            }}\r\n                            placeholder=\"...\"\r\n                          />\r\n                        </Form.Item>{\" \"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                  <Col span={24}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          name={\"RPLLDSC\"}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              max: 2024,\r\n                            },\r\n                          ]}\r\n                          hasFeedback\r\n                        >\r\n                          <Input.TextArea\r\n                            rows={3}\r\n                            placeholder=\"Entrer le libellé Lang...\"\r\n                          />\r\n                        </Form.Item>{\" \"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.List name=\"UL\">\r\n                          {(fields, { add, remove }) => (\r\n                            <>\r\n                              <div\r\n                                style={{\r\n                                  width: \"100%\",\r\n                                  display: \"flex\",\r\n                                  justifyContent: \"space-between\",\r\n                                  alignItems: \"baseline\",\r\n                                  marginBottom: \"20px\",\r\n                                }}\r\n                              >\r\n                                <Typography.Title\r\n                                  level={5}\r\n                                  style={{\r\n                                    fontSize: \"16px\",\r\n                                    fontWeight: \"400px\",\r\n                                  }}\r\n                                >\r\n                                  Unité logistique\r\n                                </Typography.Title>\r\n                                <Button\r\n                                  type=\"dashed\"\r\n                                  onClick={() => add()}\r\n                                  style={{ width: \"6%\" }}\r\n                                  icon={<PlusOutlined />}\r\n                                >\r\n                                  {/* Add field */}\r\n                                </Button>\r\n                              </div>{\" \"}\r\n                              <Row\r\n                                gutter={[10, 10]}\r\n                                justify=\"space-between\"\r\n                                align=\"stretch\"\r\n                                style={{ marginBottom: \"10px\" }}\r\n                                // lets get it started\r\n                              >\r\n                                <Col span={7} style={{ display: \"flex\" }}>\r\n                                  Type\r\n                                </Col>{\" \"}\r\n                                <Col span={3} style={{ whiteSpace: \"nowrap\" }}>\r\n                                  Coefition\r\n                                </Col>{\" \"}\r\n                                <Col span={3} style={{ whiteSpace: \"nowrap\" }}>\r\n                                  Poid\r\n                                </Col>\r\n                                <Col span={3} style={{ whiteSpace: \"nowrap\" }}>\r\n                                  Langeur\r\n                                </Col>{\" \"}\r\n                                <Col span={3} style={{ whiteSpace: \"nowrap\" }}>\r\n                                  Largeur\r\n                                </Col>\r\n                                <Col span={3} style={{ whiteSpace: \"nowrap\" }}>\r\n                                  Hauteur\r\n                                </Col>\r\n                                <Col span={2}></Col>\r\n                              </Row>\r\n                              {/* <div\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  marginBottom: 8,\r\n                                  width: \"100%\",\r\n                                  justifyContent: \"space-between\",\r\n                                }}\r\n                              >\r\n                                {\" \"}\r\n                                <Space key={8} align=\"baseline\">\r\n                                  {\" \"}\r\n                                  <Row\r\n                                    gutter={[10, 10]}\r\n                                    justify=\"space-between\"\r\n                                    align=\"stretch\"\r\n                                    // wrap={false}\r\n                                  >\r\n                                    <Col span={7}>\r\n                                      {\" \"}\r\n                                      <Form.Item\r\n                                        // {...restField}\r\n                                        name={[\"UL\", \"RPULTYPUL\"]}\r\n                                        fieldKey={[\"UL\", \"RPULTYPUL\"]}\r\n                                        rules={[\r\n                                          {\r\n                                            required: true,\r\n                                          },\r\n                                        ]}\r\n                                      >\r\n                                        <Select\r\n                                          onChange={this.onTypeChange}\r\n                                          showSearch\r\n                                        >\r\n                                          {this.state.typeUniteL.map(\r\n                                            (data, index) => (\r\n                                              <Select.Option\r\n                                                value={data.value}\r\n                                                disabled={!data.active}\r\n                                              >\r\n                                                {data.titel}\r\n                                              </Select.Option>\r\n                                            )\r\n                                          )}\r\n                                        </Select>\r\n                                      </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={3}>\r\n                                      <Form.Item\r\n                                        // {...restField}\r\n                                        name={[\"UL\", \"RPULCOEF\"]}\r\n                                        fieldKey={[\"UL\", \"RPULCOEF\"]}\r\n                                        rules={[\r\n                                          {\r\n                                            required: true,\r\n                                          },\r\n                                        ]}\r\n                                      >\r\n                                        <InputNumber\r\n                                          style={{ width: \"100%\" }}\r\n                                        />\r\n                                      </Form.Item>{\" \"}\r\n                                    </Col>\r\n                                    <Col span={3}>\r\n                                      <Form.Item\r\n                                        // {...restField}\r\n                                        name={[\"UL\", \"RPULPOID\"]}\r\n                                        fieldKey={[\"UL\", \"RPULPOID\"]}\r\n                                        rules={[\r\n                                          {\r\n                                            required: false,\r\n                                          },\r\n                                        ]}\r\n                                      >\r\n                                        <InputNumber\r\n                                          style={{ width: \"100%\" }}\r\n                                        />\r\n                                      </Form.Item>{\" \"}\r\n                                    </Col>\r\n                                    <Col span={3}>\r\n                                      {\" \"}\r\n                                      <Form.Item\r\n                                        name={[\"UL\", \"RPULLANG\"]}\r\n                                        fieldKey={[\"UL\", \"RPULLANG\"]}\r\n                                        rules={[\r\n                                          {\r\n                                            required: false,\r\n                                          },\r\n                                        ]}\r\n                                      >\r\n                                        <InputNumber\r\n                                          style={{ width: \"100%\" }}\r\n                                        />\r\n                                      </Form.Item>\r\n                                    </Col>{\" \"}\r\n                                    <Col span={3}>\r\n                                      <Form.Item\r\n                                        name={[\"UL\", \"RPULLARG\"]}\r\n                                        fieldKey={[\"UL\", \"RPULLARG\"]}\r\n                                        rules={[\r\n                                          {\r\n                                            required: false,\r\n                                          },\r\n                                        ]}\r\n                                      >\r\n                                        <InputNumber\r\n                                          style={{ width: \"100%\" }}\r\n                                        />\r\n                                      </Form.Item>{\" \"}\r\n                                    </Col>\r\n                                    <Col span={3}>\r\n                                      {\" \"}\r\n                                      <Form.Item\r\n                                        name={[\"UL\", \"RPULHAUT\"]}\r\n                                        fieldKey={[\"UL\", \"RPULHAUT\"]}\r\n                                        rules={[\r\n                                          {\r\n                                            required: false,\r\n                                          },\r\n                                        ]}\r\n                                      >\r\n                                        <InputNumber\r\n                                          style={{ width: \"100%\" }}\r\n                                        />\r\n                                      </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={2}>\r\n                                      <MinusCircleOutlined\r\n                                        onClick={() => remove(\"UL\")}\r\n                                      />\r\n                                    </Col>\r\n                                  </Row>\r\n                                </Space>{\" \"}\r\n                              </div> */}\r\n                              {fields.map(\r\n                                ({ key, name, fieldKey, ...restField }) => (\r\n                                  <div\r\n                                    style={{\r\n                                      display: \"flex\",\r\n                                      marginBottom: 8,\r\n                                      width: \"100%\",\r\n                                      justifyContent: \"space-between\",\r\n                                    }}\r\n                                  >\r\n                                    {\" \"}\r\n                                    <Space key={key} align=\"baseline\">\r\n                                      {\" \"}\r\n                                      <Row\r\n                                        gutter={[10, 10]}\r\n                                        justify=\"space-between\"\r\n                                        align=\"stretch\"\r\n                                        // wrap={false}\r\n                                      >\r\n                                        <Col span={7}>\r\n                                          {\" \"}\r\n                                          <Form.Item\r\n                                            {...restField}\r\n                                            name={[name, \"RPULTYPUL\"]}\r\n                                            fieldKey={[fieldKey, \"RPULTYPUL\"]}\r\n                                            rules={[\r\n                                              {\r\n                                                required: true,\r\n                                              },\r\n                                            ]}\r\n                                          >\r\n                                            <Select\r\n                                              onChange={this.onTypeChange}\r\n                                              showSearch\r\n                                            >\r\n                                              {this.state.typeUniteL.map(\r\n                                                (data, index) => (\r\n                                                  <Select.Option\r\n                                                    value={data.value}\r\n                                                    disabled={!data.active}\r\n                                                  >\r\n                                                    {data.titel}\r\n                                                  </Select.Option>\r\n                                                )\r\n                                              )}\r\n                                            </Select>\r\n                                          </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={3}>\r\n                                          <Form.Item\r\n                                            {...restField}\r\n                                            name={[name, \"RPULCOEF\"]}\r\n                                            fieldKey={[fieldKey, \"RPULCOEF\"]}\r\n                                            rules={[\r\n                                              {\r\n                                                required: true,\r\n                                              },\r\n                                            ]}\r\n                                          >\r\n                                            <InputNumber\r\n                                              style={{ width: \"100%\" }}\r\n                                            />\r\n                                          </Form.Item>{\" \"}\r\n                                        </Col>\r\n                                        <Col span={3}>\r\n                                          <Form.Item\r\n                                            {...restField}\r\n                                            name={[name, \"RPULPOID\"]}\r\n                                            fieldKey={[fieldKey, \"RPULPOID\"]}\r\n                                            rules={[\r\n                                              {\r\n                                                required: false,\r\n                                              },\r\n                                            ]}\r\n                                          >\r\n                                            <InputNumber\r\n                                              style={{ width: \"100%\" }}\r\n                                            />\r\n                                          </Form.Item>{\" \"}\r\n                                        </Col>\r\n                                        <Col span={3}>\r\n                                          {\" \"}\r\n                                          <Form.Item\r\n                                            {...restField}\r\n                                            name={[name, \"RPULLANG\"]}\r\n                                            fieldKey={[fieldKey, \"RPULLANG\"]}\r\n                                            rules={[\r\n                                              {\r\n                                                required: false,\r\n                                              },\r\n                                            ]}\r\n                                          >\r\n                                            <InputNumber\r\n                                              style={{ width: \"100%\" }}\r\n                                            />\r\n                                          </Form.Item>\r\n                                        </Col>{\" \"}\r\n                                        <Col span={3}>\r\n                                          <Form.Item\r\n                                            {...restField}\r\n                                            name={[name, \"RPULLARG\"]}\r\n                                            fieldKey={[fieldKey, \"RPULLARG\"]}\r\n                                            rules={[\r\n                                              {\r\n                                                required: false,\r\n                                              },\r\n                                            ]}\r\n                                          >\r\n                                            <InputNumber\r\n                                              style={{ width: \"100%\" }}\r\n                                            />\r\n                                          </Form.Item>{\" \"}\r\n                                        </Col>\r\n                                        <Col span={3}>\r\n                                          {\" \"}\r\n                                          <Form.Item\r\n                                            {...restField}\r\n                                            name={[name, \"RPULHAUT\"]}\r\n                                            fieldKey={[fieldKey, \"RPULHAUT\"]}\r\n                                            rules={[\r\n                                              {\r\n                                                required: false,\r\n                                              },\r\n                                            ]}\r\n                                          >\r\n                                            <InputNumber\r\n                                              style={{ width: \"100%\" }}\r\n                                            />\r\n                                          </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={2}>\r\n                                          <MinusCircleOutlined\r\n                                            onClick={() => remove(name)}\r\n                                          />\r\n                                        </Col>\r\n                                      </Row>\r\n                                    </Space>{\" \"}\r\n                                  </div>\r\n                                )\r\n                              )}\r\n                              <Form.Item>\r\n                                <Button\r\n                                  type=\"dashed\"\r\n                                  onClick={() => {\r\n                                    add();\r\n                                  }}\r\n                                  block\r\n                                  icon={<PlusOutlined />}\r\n                                >\r\n                                  Add field\r\n                                </Button>\r\n                              </Form.Item>\r\n                            </>\r\n                          )}\r\n                        </Form.List>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  {/* <Col span={24}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Table\r\n                          className=\"template-dms\"\r\n                          title={() => (\r\n                            <TitleCustomize\r\n                              vues={{\r\n                                vueSysteme: vueSysteme,\r\n                                vuesPersonnalises: vuesPersonnalises,\r\n                              }}\r\n                              title={\"Unité Logistique\"}\r\n                              enAdd={this.handleAdd}\r\n                              type=\"primary\"\r\n                              style={{\r\n                                marginBottom: 16,\r\n                              }}\r\n                            />\r\n                          )}\r\n                          size=\"small\"\r\n                          pagination={{\r\n                            position: [this.state.top, this.state.bottom],\r\n                          }}\r\n                          scroll={{ x: 850 }}\r\n                          components={components}\r\n                          rowSelection={{ ...rowSelection }}\r\n                          rowClassName={() => \"editable-row\"}\r\n                          dataSource={dataSource}\r\n                          columns={columns}\r\n                        />{\" \"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"} */}\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Divider />\r\n          <Row gutter={[0, 0]} align=\"stretch\">\r\n            <Col\r\n              flex=\"auto\"\r\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n            >\r\n              <Space>\r\n                <Button\r\n                  onClick={(e) => {\r\n                    this.props.closeDrawer();\r\n                    this.onReset();\r\n                  }}\r\n                >\r\n                  close\r\n                </Button>\r\n                <Button\r\n                  type=\"primary\"\r\n                  onClick={(e) => {\r\n                    this.onSubmit();\r\n                  }}\r\n                >\r\n                  submit\r\n                </Button>\r\n              </Space>\r\n            </Col>\r\n          </Row>\r\n        </ConfigProvider>\r\n      )\r\n    );\r\n  }\r\n}\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport { Table, Input, Button, Popconfirm, Form } from \"antd\";\r\nimport { Col, DataTable, InputNumber, Modal, Row, Typography } from \"dmsui\";\r\nimport {\r\n  BarcodeOutlined,\r\n  CodeSandboxOutlined,\r\n  DeleteOutlined,\r\n} from \"@ant-design/icons\";\r\nimport LogistiqueDrawer from \"./LogistiqueDrawer\";\r\nimport UnitéLogistiqueTable from \"./UnitéLogistiqueTable\";\r\nimport TitleCustomize from \"./TitleCustomize\";\r\nconst expandable = {\r\n  expandedRowRender: (record) => <p>{record.description}</p>,\r\n};\r\nconst pagination = { position: \"bottom\" };\r\nconst vueSysteme = [];\r\nfor (let i = 1; i <= 1; i++) {\r\n  vueSysteme.push({\r\n    titre: \"Vue systéme \" + i,\r\n    check: true,\r\n  });\r\n}\r\nconst vuesPersonnalises = [];\r\nfor (let i = 1; i <= 3; i++) {\r\n  vuesPersonnalises.push({\r\n    titre: \"Vues personnalisés \" + i,\r\n    check: false,\r\n  });\r\n}\r\n\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(\r\n      `selectedRowKeys: ${selectedRowKeys}`,\r\n      \"selectedRows: \",\r\n      selectedRows\r\n    );\r\n  },\r\n  onSelect: (record, selected, selectedRows) => {\r\n    console.log(record, selected, selectedRows);\r\n  },\r\n  onSelectAll: (selected, selectedRows, changeRows) => {\r\n    console.log(selected, selectedRows, changeRows);\r\n  },\r\n};\r\n//befor\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  pattern,\r\n  max,\r\n  required,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  setUpdateVL,\r\n  disabled,\r\n  type,\r\n  update,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n  useEffect(() => {\r\n    // console.log(\"tinane voila la\", max, \"record\", record);\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      console.log(\"variante logistique update => \", values, \"recorde\", record);\r\n\r\n      toggleEdit();\r\n      setUpdateVL(record, values);\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log(\"Save failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        // rules={[\r\n        //   {\r\n        //     required: required,\r\n        //     max: max,\r\n        //     pattern: pattern,\r\n        //     // message: `${title} is required.`,\r\n        //   },\r\n        // ]}\r\n      >\r\n        {type == \"number\" ? (\r\n          <InputNumber\r\n            size=\"small\"\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n            // readOnly={!update}\r\n          />\r\n        ) : (\r\n          <Input\r\n            size=\"small\"\r\n            // readOnly={!update}\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n          />\r\n        )}\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{\r\n          paddingRight: 24,\r\n        }}\r\n        onClick={toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nexport default class LogistiqueTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: \"Code\",\r\n        // max: 10,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        disabled: this.props.update,\r\n        dataIndex: \"RPLLCEXT\",\r\n        width: \"10%\",\r\n        fixed: \"left\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n      {\r\n        title: \"Description\",\r\n        // max: 10,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RPLLDSC\",\r\n        width: \"35%\",\r\n        disabled: this.props.update,\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n      {\r\n        title: \"Etat du PL\",\r\n        // max: 10,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RPLLETAT\",\r\n        width: \"15%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        disabled: this.props.update,\r\n        type: \"number\",\r\n        showSorterTooltip: true,\r\n      },\r\n      {\r\n        title: \"Unité logistique\",\r\n        // max: 10,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"UL\",\r\n        width: \"15%\",\r\n        ellipsis: true,\r\n        showSorterTooltip: true,\r\n        render: (_, record) => (\r\n          <Button\r\n            type=\"text\"\r\n            icon={<CodeSandboxOutlined />}\r\n            onClick={() => {\r\n              console.log(\"record\", record);\r\n              // this.showModal(record.UL);\r\n              this.setState({\r\n                visible: true,\r\n                contenu: record.UL,\r\n                VL_Id: record.ID_ROWID,\r\n                VL_key: record.key,\r\n                // <UnitéLogistiqueTable datas={record.UL} />,\r\n              });\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        title: \"nombre de piece\",\r\n        // max: 10,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"nbrpience\",\r\n        width: \"20%\",\r\n        ellipsis: true,\r\n        type: \"number\",\r\n        disabled: this.props.update,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n\r\n      {\r\n        title: \"\",\r\n        fixed: \"right\",\r\n\r\n        width: \"5%\",\r\n        dataIndex: \"operation\",\r\n        render: (_, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              {/* <a>Delete</a> */}\r\n              <DeleteOutlined style={{ color: \"#f44336\" }} />\r\n            </Popconfirm>\r\n          ) : null,\r\n      },\r\n    ];\r\n    this.state = {\r\n      // after\r\n      contenu: [],\r\n      bordered: false,\r\n      loading: false,\r\n      pagination,\r\n\r\n      expandable,\r\n      showHeader: true,\r\n      rowSelection: {},\r\n      scroll: undefined,\r\n      hasData: true,\r\n      tableLayout: undefined,\r\n      top: \"none\",\r\n      bottom: \"bottomRight\",\r\n\r\n      //before\r\n      dataSource: [],\r\n      count: 2,\r\n    };\r\n  }\r\n  ULRef = React.createRef();\r\n  // componentDidUpdate(prevProps) {\r\n  //   if (prevProps.updateAdress !== this.props.updateAdress) {\r\n  //     this.\r\n  //   }\r\n  // }\r\n  getDataSource() {\r\n    return this.state.dataSource;\r\n  }\r\n  handleDelete = (keyy) => {\r\n    const dataSource = [...this.state.dataSource];\r\n    const result = dataSource.findIndex(({ key }) => key == keyy);\r\n    console.log(dataSource, result);\r\n    this.props.setDeleteVL(dataSource[result]);\r\n    this.setState({\r\n      dataSource: dataSource.filter((item) => item.key !== keyy),\r\n    });\r\n  };\r\n  handleAdd = (datas) => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = datas;\r\n    newData.key = dataSource.length;\r\n\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n  handleSave = (row) => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, { ...item, ...row });\r\n    this.setState({\r\n      dataSource: newData,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    console.log(\"datas\", this.props.datasource);\r\n    this.props.datasource != null &&\r\n      this.props.datasource.map((data, index) => {\r\n        Object.assign(data, {\r\n          key: index,\r\n        });\r\n      });\r\n    this.setState({\r\n      dataSource: this.props.datasource != null ? this.props.datasource : [],\r\n    });\r\n  }\r\n  // showModal = (ULs) => {\r\n  //   this.setState({\r\n  //     visible: true,\r\n  //     contenu: <UnitéLogistiqueTable datas={ULs} />,\r\n  //   });\r\n  // };\r\n  handleOk = () => {\r\n    this.setState({\r\n      modalText: \"The modal will be closed after two seconds\",\r\n      confirmLoading: true,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({ visible: false, confirmLoading: false });\r\n    }, 2000);\r\n  };\r\n  handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    this.setState({ visible: false, contenu: [] });\r\n  };\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable || !this.props.update) {\r\n        return col;\r\n      }\r\n\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          max: col.max,\r\n          required: col.required,\r\n          pattern: col.pattern,\r\n          type: col.type,\r\n          update: this.props.update,\r\n          handleSave: this.handleSave,\r\n          setUpdateVL: this.props.setUpdateVL,\r\n        }),\r\n      };\r\n    });\r\n\r\n    // ajouter de datatable\r\n    const { xScroll, yScroll, ...state } = this.state;\r\n    const scroll = {};\r\n    if (yScroll) {\r\n      scroll.y = 240;\r\n    }\r\n    if (xScroll) {\r\n      scroll.x = \"100vw\";\r\n    }\r\n\r\n    // const tableColumns = this.state.columns.map((item) => ({\r\n    //   ...item,\r\n    //   ellipsis: state.ellipsis,\r\n    // }));\r\n    // if (xScroll === \"fixed\") {\r\n    //   tableColumns[0].fixed = true;\r\n    //   tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n    // }\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <Table\r\n          className=\"template-dms\"\r\n          title={() => (\r\n            <TitleCustomize\r\n              vues={{\r\n                vueSysteme: vueSysteme,\r\n                vuesPersonnalises: vuesPersonnalises,\r\n              }}\r\n              title={\"PLan de palitisation\"}\r\n              enAdd={(e) => {\r\n                this.props.showDrawer(e);\r\n                this.props.setSiseForm(1435 - 500 + \"px\");\r\n                this.props.setDrawerState(\r\n                  \"\",\r\n                  <LogistiqueDrawer\r\n                    setNewVL={(VL) => this.props.setNewVL(VL)}\r\n                    setListeAllUl={(Uls) => this.props.setListeAllUl(Uls)}\r\n                    closeDrawer={() => this.props.closeDrawer()}\r\n                    addVL={(datas) => this.handleAdd(datas)}\r\n                    isLoading={this.props.isLoading}\r\n                    changecome={this.props.changecome}\r\n                    updateCtc={this.props.updateCtc}\r\n                    onFormulaireChange={(value) =>\r\n                      this.props.onFormulaireChange(value)\r\n                    }\r\n                    token={this.props.token}\r\n                    hostStorage={this.props.hostStorage}\r\n                    goTo={(link) => this.props.goTo(link)}\r\n                    handleInputChange={this.props.handleInputChange}\r\n                    user_id={this.props.user_id}\r\n                    service={this.props.service}\r\n                  />,\r\n                  500,\r\n                  () => {\r\n                    console.log(\"en close drawer\");\r\n                    this.props.setSiseForm(\"\");\r\n                  }\r\n                );\r\n              }}\r\n              // {this.showModal}\r\n              // {this.handleAdd}\r\n              type=\"primary\"\r\n              style={{\r\n                marginBottom: 16,\r\n              }}\r\n            />\r\n          )}\r\n          // {...this.state}\r\n          // vues={{\r\n          //   vueSysteme: vueSysteme,\r\n          //   vuesPersonnalises: vuesPersonnalises,\r\n          // }}\r\n          size=\"small\"\r\n          pagination={{ position: [this.state.top, this.state.bottom] }}\r\n          // columns={tableColumns}\r\n          // dataSource={state.hasData ? this.state.data : null}\r\n          // scroll={scroll}\r\n          scroll={{ x: 500 }}\r\n          components={components}\r\n          rowSelection={{ ...rowSelection }}\r\n          rowClassName={() => \"editable-row\"}\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n        />{\" \"}\r\n        <Modal\r\n          // title=\"Unité logistique\"\r\n          // style={{ display: \"flex\" }}\r\n          // centered\r\n          width={700}\r\n          visible={this.state.visible}\r\n          onOk={() => this.ULRef.current.onSubmit()}\r\n          confirmLoading={this.state.confirmLoading}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          {/* <p>{this.state.modalText}</p> */}\r\n          <Row\r\n            gutter={[5, 5]}\r\n            // align=\"top\"\r\n            style={{\r\n              minHeight: \"200px\",\r\n              height: \"auto\",\r\n              maxHeight: \"500px\",\r\n              // margin: \"10px\",\r\n              // overflowY: \"auto\",\r\n            }}\r\n          >\r\n            <Col\r\n              span={24}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <UnitéLogistiqueTable\r\n                datas={this.state.contenu}\r\n                setNewUL={(UL) => this.props.setNewUL(UL)}\r\n                setUpdateUL={(UL) => this.props.setUpdateUL(UL)}\r\n                setDeleteUL={(UL) => this.props.setDeleteUL(UL)}\r\n                VL_Id={this.state.VL_Id}\r\n                VL_key={this.state.VL_key}\r\n                ref={this.ULRef}\r\n              />\r\n              {/* {record.UL} */}\r\n            </Col>\r\n            <Col span={24} style={{ height: \"200px\" }}></Col>\r\n          </Row>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Row, message } from \"antd\";\r\nimport { Button, Form, InputNumber, Select, Space, Typography } from \"dmsui\";\r\n\r\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\r\n\r\nexport default class UnitéLogistiqueTable extends Component {\r\n  static propTypes = {\r\n    prop: PropTypes,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ToUpdate: [],\r\n      ToDelete: [],\r\n      typeUniteL: [\r\n        { value: 0, titel: \"uvc\", active: true },\r\n        { value: 1, titel: \"sub-carton\", active: true },\r\n        { value: 2, titel: \"carton\", active: true },\r\n\r\n        { value: 3, titel: \"couche\", active: true },\r\n        { value: 4, titel: \"palette\", active: true },\r\n      ],\r\n      Uls: [],\r\n      //new\r\n      loading: true,\r\n      form: {},\r\n      update: true,\r\n      // null,\r\n\r\n      datas: { US_EMAIL: \"\", US_NOMUSR: \"\", US_PRNUSR: \"\", US_TYPUSR: \"\" },\r\n    };\r\n  }\r\n  formRef = React.createRef();\r\n  onTypeChange = (value, keyy, name) => {\r\n    // console.log(\"eeee\", value, key, name);\r\n    const update = this.state;\r\n    let existDeja = update.ToUpdate.findIndex(({ key }) => key === keyy);\r\n    console.log(update.ToUpdate, \"  =>existDeja => \", existDeja);\r\n    existDeja == -1 && update.ToUpdate.push({ key: keyy, name });\r\n    const { typeUniteL } = this.state;\r\n    typeUniteL[value].active = false;\r\n  };\r\n  onChange = (keyy, name) => {\r\n    const update = this.state;\r\n    let existDeja = update.ToUpdate.findIndex(({ key }) => key === keyy);\r\n    console.log(\r\n      update.ToUpdate,\r\n      \"  =>key \" + keyy + \" ,existDeja => \",\r\n      existDeja\r\n    );\r\n    existDeja == -1 && update.ToUpdate.push({ key: keyy, name });\r\n  };\r\n  onDelete = (key, name) => {\r\n    const state = this.state;\r\n    console.log(\"Uls => \", this.state.Uls, \"keu : \", key);\r\n    state.ToDelete.push({\r\n      key,\r\n      name,\r\n      ID_ROWID:\r\n        this.state.Uls[key] != null ? this.state.Uls[key].ID_ROWID : null,\r\n    });\r\n  };\r\n  onFinish = async (values) => {\r\n    console.log(\r\n      \"------------------debut-Submit-NewPlanPalitisation------------------\"\r\n    );\r\n    var loadingOnsubmit = true;\r\n    message.loading(\"Loading..\", loadingOnsubmit);\r\n    try {\r\n      console.log(\"tout\", values);\r\n      console.log(\"update\", this.state.ToUpdate);\r\n      let deleteUL = [];\r\n      this.state.ToDelete.map((data, index) => {\r\n        // values.UL[data.key].key = data.key;\r\n        // values.UL[data.key].VL_key = this.props.VL_key;\r\n        deleteUL.push({\r\n          key: data.key,\r\n          VL_key: this.props.VL_key,\r\n          ID_ROWID: data.ID_ROWID,\r\n        });\r\n      });\r\n      let UpdateUL = [];\r\n      this.state.ToUpdate.map((data, index) => {\r\n        values.UL[data.key].key = data.key;\r\n        values.UL[data.key].VL_key = this.props.VL_key;\r\n        UpdateUL.push(values.UL[data.key]);\r\n      });\r\n      let NewUL = values.UL.filter(({ New }) => New === true);\r\n      console.log(\"New\", NewUL);\r\n      console.log(\"update\", UpdateUL);\r\n      console.log(\"delete\", deleteUL);\r\n      NewUL.map((data, index) => this.props.setNewUL(data));\r\n      UpdateUL.map((data, index) => this.props.setUpdateUL(data));\r\n      deleteUL.map((data, index) => this.props.setDeleteUL(data));\r\n      this.setState({ ToUpdate: [], deleteUL: [] });\r\n      // this.props.setNewVL(values);\r\n      // this.props.closeDrawer();\r\n      // this.props.addVL(values);\r\n      // this.onReset();\r\n      console.log(\r\n        \"------------------fin-Submit-NewPlanPalitisation------------------\"\r\n      );\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      console.log(\r\n        \"------------------fin-Submit-NewPlanPalitisation------------------\"\r\n      );\r\n    }\r\n  };\r\n  onSubmit = () => {\r\n    this.formRef.current.submit();\r\n    console.log(this.formRef.current);\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n    // console.log(this.formRef.current);\r\n  };\r\n\r\n  labelComposant = (label, Icon) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100px\",\r\n            fontSize: \"14px\",\r\n            fontWeight: \"600\",\r\n          }}\r\n        >\r\n          {label}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.datas !== this.props.datas) {\r\n      this.formRef.current.setFieldsValue({ UL: this.props.datas });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"Uls => :\", this.props.datas);\r\n    this.setState({ Uls: this.props.datas, loading: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      !this.state.loading && (\r\n        <Row\r\n          gutter={[20, 20]}\r\n          justify=\"center\"\r\n          align=\"stretch\"\r\n          style={{\r\n            overflowY: \"auto\",\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          {/* {this.state.Uls[0].ID_ROWID + \"\"} initialValue={this.state.Uls}*/}\r\n          <Col span={24}>\r\n            <Form\r\n              ref={this.formRef}\r\n              initialValues={{ UL: this.state.Uls }}\r\n              onFinish={this.onFinish}\r\n              // onFieldsChange={(_, allFields) => {\r\n              //   console.log(\"field change : \", _);\r\n              //   const update = this.state;\r\n              //   update.ToUpdate.push(_);\r\n              // }}\r\n            >\r\n              <Form.List name=\"UL\">\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"baseline\",\r\n                        marginBottom: \"20px\",\r\n                      }}\r\n                    >\r\n                      <Typography.Title\r\n                        level={5}\r\n                        style={{\r\n                          fontSize: \"16px\",\r\n                          fontWeight: \"400px\",\r\n                        }}\r\n                      >\r\n                        Unité logistique\r\n                      </Typography.Title>\r\n                      {/* <Button\r\n                        type=\"dashed\"\r\n                        onClick={() => add()}\r\n                        style={{ width: \"6%\" }}\r\n                        icon={<PlusOutlined />}\r\n                      >\r\n                        \r\n                      </Button> */}\r\n                    </div>{\" \"}\r\n                    <Row\r\n                      gutter={[10, 10]}\r\n                      justify=\"space-between\"\r\n                      align=\"stretch\"\r\n                      style={{ marginBottom: \"20px\" }}\r\n                      // lets get it started\r\n                    >\r\n                      <Col span={7} style={{ display: \"flex\" }}>\r\n                        Type\r\n                      </Col>{\" \"}\r\n                      <Col span={3}>Coefition</Col> <Col span={3}>Poid</Col>\r\n                      <Col span={3}>Langeur</Col> <Col span={3}>Largeur</Col>\r\n                      <Col span={3}>Hauteur</Col>\r\n                      <Col span={2}></Col>\r\n                    </Row>\r\n                    {fields.map(({ key, name, fieldKey, ...restField }) => (\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          marginBottom: 8,\r\n                          width: \"100%\",\r\n                          justifyContent: \"space-between\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        <Space key={key} align=\"baseline\">\r\n                          {\" \"}\r\n                          <Row\r\n                            gutter={[10, 10]}\r\n                            justify=\"space-between\"\r\n                            align=\"top\"\r\n                            // wrap={false}\r\n                          >\r\n                            <Col span={7}>\r\n                              {\" \"}\r\n                              <Form.Item\r\n                                {...restField}\r\n                                name={[name, \"RPULTYPUL\"]}\r\n                                fieldKey={[fieldKey, \"RPULTYPUL\"]}\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                  },\r\n                                ]}\r\n                                shouldUpdate={(prevValues, curValues) =>\r\n                                  prevValues.RPULTYPUL !== curValues.RPULTYPUL\r\n                                }\r\n                                messageVariables={{ another: \"good\" }}\r\n                                // getValueFromEvent={(_args) =>\r\n                                //   console.log(\"khera  =>  \", _args)\r\n                                // }\r\n                              >\r\n                                <Select\r\n                                  onChange={(e) =>\r\n                                    this.onTypeChange(e, key, \"RPULTYPUL\")\r\n                                  }\r\n                                  showSearch\r\n                                >\r\n                                  {this.state.typeUniteL.map((data, index) => (\r\n                                    <Select.Option\r\n                                      value={data.value}\r\n                                      disabled={!data.active}\r\n                                    >\r\n                                      {data.titel}\r\n                                    </Select.Option>\r\n                                  ))}\r\n                                </Select>\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={3}>\r\n                              <Form.Item\r\n                                {...restField}\r\n                                name={[name, \"RPULCOEF\"]}\r\n                                fieldKey={[fieldKey, \"RPULCOEF\"]}\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <InputNumber\r\n                                  style={{ width: \"100%\" }}\r\n                                  onChange={(e) =>\r\n                                    this.onChange(key, \"RPULCOEF\")\r\n                                  }\r\n                                />\r\n                              </Form.Item>{\" \"}\r\n                            </Col>\r\n                            <Col span={3}>\r\n                              <Form.Item\r\n                                {...restField}\r\n                                name={[name, \"RPULPOID\"]}\r\n                                fieldKey={[fieldKey, \"RPULPOID\"]}\r\n                                rules={[\r\n                                  {\r\n                                    required: false,\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <InputNumber\r\n                                  style={{ width: \"100%\" }}\r\n                                  onChange={(e) =>\r\n                                    this.onChange(key, \"RPULPOID\")\r\n                                  }\r\n                                />\r\n                              </Form.Item>{\" \"}\r\n                            </Col>\r\n                            <Col span={3}>\r\n                              {\" \"}\r\n                              <Form.Item\r\n                                {...restField}\r\n                                name={[name, \"RPULLANG\"]}\r\n                                fieldKey={[fieldKey, \"RPULLANG\"]}\r\n                                rules={[\r\n                                  {\r\n                                    required: false,\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <InputNumber\r\n                                  style={{ width: \"100%\" }}\r\n                                  onChange={(e) =>\r\n                                    this.onChange(key, \"RPULLANG\")\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>{\" \"}\r\n                            <Col span={3}>\r\n                              <Form.Item\r\n                                {...restField}\r\n                                name={[name, \"RPULLARG\"]}\r\n                                fieldKey={[fieldKey, \"RPULLARG\"]}\r\n                                rules={[\r\n                                  {\r\n                                    required: false,\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <InputNumber\r\n                                  style={{ width: \"100%\" }}\r\n                                  onChange={(e) =>\r\n                                    this.onChange(key, \"RPULLARG\")\r\n                                  }\r\n                                />\r\n                              </Form.Item>{\" \"}\r\n                            </Col>\r\n                            <Col span={3}>\r\n                              {\" \"}\r\n                              <Form.Item\r\n                                {...restField}\r\n                                name={[name, \"RPULHAUT\"]}\r\n                                fieldKey={[fieldKey, \"RPULHAUT\"]}\r\n                                rules={[\r\n                                  {\r\n                                    required: false,\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <InputNumber\r\n                                  style={{ width: \"100%\" }}\r\n                                  onChange={(e) =>\r\n                                    this.onChange(key, \"RPULHAUT\")\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={2}>\r\n                              <MinusCircleOutlined\r\n                                onClick={() => {\r\n                                  remove(name);\r\n                                  this.onDelete(key);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                        </Space>{\" \"}\r\n                      </div>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button\r\n                        type=\"dashed\"\r\n                        onClick={() =>\r\n                          add({\r\n                            New: true,\r\n                            RPULCINVL: this.props.VL_Id,\r\n                            VL_key: this.props.VL_key,\r\n                            VV: [],\r\n                          })\r\n                        }\r\n                        block\r\n                        icon={<PlusOutlined />}\r\n                      >\r\n                        Add field\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form>{\" \"}\r\n          </Col>\r\n        </Row>\r\n      )\r\n    );\r\n  }\r\n}\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  Button,\r\n  Popconfirm,\r\n  Form,\r\n  ConfigProvider,\r\n  DatePicker,\r\n  message,\r\n  Tooltip,\r\n} from \"antd\";\r\nimport { Col, InputNumber, Modal, Row, Select, Typography } from \"dmsui\";\r\nimport moment from \"moment\";\r\nimport {\r\n  BarcodeOutlined,\r\n  CheckCircleTwoTone,\r\n  CloseCircleTwoTone,\r\n  CodeSandboxOutlined,\r\n  DeleteOutlined,\r\n  DollarCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport LogistiqueDrawer from \"./LogistiqueDrawer\";\r\nimport UnitéLogistiqueTable from \"./UnitéLogistiqueTable\";\r\nimport TitleCustomize from \"./TitleCustomize\";\r\nimport { validateMessages } from \"../../../../Constante\";\r\nconst expandable = {\r\n  expandedRowRender: (record) => <p>{record.description}</p>,\r\n};\r\nconst pagination = { position: \"bottom\" };\r\nconst vueSysteme = [];\r\nfor (let i = 1; i <= 1; i++) {\r\n  vueSysteme.push({\r\n    titre: \"Vue systéme \" + i,\r\n    check: true,\r\n  });\r\n}\r\nconst vuesPersonnalises = [];\r\nfor (let i = 1; i <= 3; i++) {\r\n  vuesPersonnalises.push({\r\n    titre: \"Vues personnalisés \" + i,\r\n    check: false,\r\n  });\r\n}\r\n\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(\r\n      `selectedRowKeys: ${selectedRowKeys}`,\r\n      \"selectedRows: \",\r\n      selectedRows\r\n    );\r\n  },\r\n  onSelect: (record, selected, selectedRows) => {\r\n    console.log(record, selected, selectedRows);\r\n  },\r\n  onSelectAll: (selected, selectedRows, changeRows) => {\r\n    console.log(selected, selectedRows, changeRows);\r\n  },\r\n};\r\n//befor\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  pattern,\r\n  max,\r\n  required,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  setUpdateVL,\r\n  disabled,\r\n  Sites,\r\n  VV,\r\n  type,\r\n  update,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n  useEffect(() => {\r\n    // console.log(\"tinane voila la\", max, \"record\", record);\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      // values.site\r\n      console.log(\"Assortiment vendable update => \", values, \"recorde\", record);\r\n\r\n      toggleEdit();\r\n      setUpdateVL(record, values);\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log(\"Save failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        // rules={[\r\n        //   {\r\n        //     required: required,\r\n        //     max: max,\r\n        //     pattern: pattern,\r\n        //     // message: `${title} is required.`,\r\n        //   },\r\n        // ]}\r\n      >\r\n        {type == \"number\" ? (\r\n          <DatePicker\r\n            style={{ width: \"100%\" }}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n            bordered={false}\r\n            size=\"small\"\r\n          />\r\n        ) : type == \"site\" ? (\r\n          <Select\r\n            size=\"small\"\r\n            // style={{ width: \"100%\" }}\r\n            showSearch\r\n            // style={{ width: 200 }}\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n            optionFilterProp=\"children\"\r\n          >\r\n            {Sites != null &&\r\n              Sites.map((site, index) => (\r\n                <Select.Option value={site.ID_ROWID}>\r\n                  {site.RSSITE}\r\n                </Select.Option>\r\n              ))}\r\n          </Select>\r\n        ) : (\r\n          <Select\r\n            size=\"small\"\r\n            // style={{ width: \"100%\" }}\r\n            showSearch\r\n            // style={{ width: 200 }}\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n            optionFilterProp=\"children\"\r\n          >\r\n            {VV != null &&\r\n              VV.map((vv, index) => (\r\n                <Select.Option value={index}>{vv.RPVVCEXT}</Select.Option>\r\n              ))}\r\n          </Select>\r\n        )}\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{\r\n          paddingRight: 24,\r\n        }}\r\n        onClick={toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nexport default class AssortimentVendable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: \"Point de vente\",\r\n        // max: 10,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        disabled: this.props.update,\r\n        dataIndex: \"RAVSITE\",\r\n        type: \"site\",\r\n\r\n        width: \"25%\",\r\n        fixed: \"left\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n        render: (_, record) => (\r\n          <Tooltip placement=\"topLeft\" title={record.RAVETAT}>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n              {record.CEXTSITE != null ? record.CEXTSITE : record.site}\r\n              {/* {record.site != null ? record.site : record.RAVSITE} */}\r\n            </div>\r\n          </Tooltip>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Variante de Vente\",\r\n        // max: 10,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RAVCINVV\",\r\n        width: \"25%\",\r\n        disabled: this.props.update,\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n        render: (_, record) => (\r\n          <Tooltip placement=\"topLeft\" title={record.RAVETAT}>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n              {record.VV != null ? record.VV : record.RAVCINVV}\r\n            </div>\r\n          </Tooltip>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Etat\",\r\n        // max: 10,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RAVETAT\",\r\n        width: \"11%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        disabled: this.props.update,\r\n        type: \"number\",\r\n        showSorterTooltip: true,\r\n        render: (_, record) => (\r\n          <Tooltip placement=\"topLeft\" title={record.RAVETAT}>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n              {!record.RAVETAT ? (\r\n                <CloseCircleTwoTone\r\n                  twoToneColor=\"#ff4d4f\"\r\n                  style={{ fontSize: \"17px\" }}\r\n                />\r\n              ) : (\r\n                <CheckCircleTwoTone\r\n                  twoToneColor=\"#16f007\"\r\n                  style={{ fontSize: \"17px\" }}\r\n                />\r\n              )}\r\n            </div>\r\n          </Tooltip>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Date Debut\",\r\n        // max: 10,\r\n        type: \"number\",\r\n        editable: true,\r\n        disabled: this.props.update,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"dateDebut\",\r\n        width: \"17%\",\r\n        ellipsis: true,\r\n        showSorterTooltip: true,\r\n        render: (_, record) => (\r\n          <Tooltip placement=\"topLeft\" title={record.RAVDDEBUT}>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n              {record.RAVDDEBUT}\r\n            </div>\r\n          </Tooltip>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Date de fin\",\r\n        // max: 10,\r\n        type: \"number\",\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"dateFin\",\r\n        width: \"17%\",\r\n        ellipsis: true,\r\n        type: \"number\",\r\n        disabled: this.props.update,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n        render: (_, record) => (\r\n          <Tooltip placement=\"topLeft\" title={record.RAVDFIN}>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n              {record.RAVDFIN}\r\n            </div>\r\n          </Tooltip>\r\n        ),\r\n      },\r\n\r\n      {\r\n        title: \"\",\r\n        fixed: \"right\",\r\n\r\n        width: \"5%\",\r\n        dataIndex: \"operation\",\r\n        render: (_, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              {/* <a>Delete</a> */}\r\n              <DeleteOutlined style={{ color: \"#f44336\" }} />\r\n            </Popconfirm>\r\n          ) : null,\r\n      },\r\n    ];\r\n    this.state = {\r\n      // after\r\n      TarifVente: [],\r\n      contenu: [],\r\n      bordered: false,\r\n      loading: false,\r\n      pagination,\r\n\r\n      expandable,\r\n      showHeader: true,\r\n      rowSelection: {},\r\n      scroll: undefined,\r\n      hasData: true,\r\n      tableLayout: undefined,\r\n      top: \"none\",\r\n      bottom: \"bottomRight\",\r\n\r\n      //before\r\n      dataSource: [],\r\n      count: 2,\r\n    };\r\n  }\r\n  ULRef = React.createRef();\r\n  formRef = React.createRef();\r\n  onFinish = async (values) => {\r\n    console.log(\r\n      \"------------------debut-Submit-Assortiment-vendable------------------\"\r\n    );\r\n    var loadingOnsubmit = true;\r\n    message.loading(\"Loading..\", loadingOnsubmit);\r\n    try {\r\n      console.log(values);\r\n      console.log(\"site :  =>\", this.props.AllSites[values.RAVSITE]);\r\n      console.log(\"vv :  =>\", this.props.AllVV[values.RAVCINVV]);\r\n      const rangeTimeValue = values[\"RAVDDEBUT\"];\r\n      const indexsite = values.RAVSITE;\r\n      const indexvv = values.RAVCINVV;\r\n      const tmp = {\r\n        key: this.state.dataSource.length - 1,\r\n        CEXTSITE: this.props.AllSites[indexsite].RSSITE,\r\n        CEXTVV: this.props.AllVV[indexvv].RPVVCEXT,\r\n        RAVSITE: this.props.AllSites[indexsite].RSSITE,\r\n        RAVCINVV: this.props.AllVV[indexvv].RPVVCEXT,\r\n        RAVETAT: true,\r\n        VL: this.props.AllVV[indexvv].RPVVCINUL.VL,\r\n        UL: this.props.AllVV[indexvv].RPVVCINUL.UL,\r\n        VV: this.props.AllVV[indexvv].id,\r\n        RAVDDEBUT: rangeTimeValue.format(\"YYYY-MM-DD HH:mm\"),\r\n      };\r\n      // tmp.RAVSITE = this.props.AllSites[indexsite].RSSITE;\r\n      // tmp.RAVCINVV = this.props.AllVV[indexvv].RPVVCEXT;\r\n      values.VL = this.props.AllVV[indexvv].RPVVCINUL.VL;\r\n      values.UL = this.props.AllVV[indexvv].RPVVCINUL.UL;\r\n      values.VV = this.props.AllVV[indexvv].id;\r\n      values.key = this.state.dataSource.length;\r\n      values.RAVCINVV = this.props.AllVV[indexvv].ID_ROWID;\r\n      // this.props.AllVV[values.RAVCINVV].RPVVCEXT;\r\n      values.RAVSITE = this.props.AllSites[indexsite].ID_ROWID;\r\n\r\n      values.RAVDDEBUT = rangeTimeValue.format(\"YYYY-MM-DD HH:mm\");\r\n      values.RAVETAT = true;\r\n      this.props.setNewASV(values);\r\n\r\n      this.setState({\r\n        modalText: \"The modal will be closed after two seconds\",\r\n        confirmLoading: true,\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({ visible: false, confirmLoading: false });\r\n        this.onReset();\r\n      }, 2000);\r\n\r\n      //  moment(Datas.data.MUTDDEB, \"YYYY-MM-DD HH:mm:ss\"),\r\n      this.handleAdd(tmp);\r\n      this.onReset();\r\n      this.handleCancel();\r\n      console.log(\r\n        \"------------------fin-Submit-Assortiment-vendable------------------\"\r\n      );\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      console.log(\r\n        \"------------------fin-Submit-Assortiment-vendable------------------\"\r\n      );\r\n    }\r\n  };\r\n  // componentDidUpdate(prevProps) {\r\n  //   if (prevProps.updateAdress !== this.props.updateAdress) {\r\n  //     this.\r\n  //   }\r\n  // }\r\n  getDataSource() {\r\n    return this.state.dataSource;\r\n  }\r\n  handleDelete = (keyy) => {\r\n    const dataSource = [...this.state.dataSource];\r\n    const result = dataSource.findIndex(({ key }) => key == keyy);\r\n    console.log(dataSource, result);\r\n    this.props.setDeleteVL(dataSource[result]);\r\n    this.setState({\r\n      dataSource: dataSource.filter((item) => item.key !== keyy),\r\n    });\r\n  };\r\n  handleAdd = (datas) => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = datas;\r\n    newData.key = dataSource.length;\r\n\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n  handleSave = (row) => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, { ...item, ...row });\r\n    this.setState({\r\n      dataSource: newData,\r\n    });\r\n  };\r\n  componentDidUpdate(prevProps) {\r\n    // console.log(\"-----vl => \", prevProps.AllVL.);\r\n    if (prevProps.AllVV !== this.props.AllVV) {\r\n      console.log(\"-----vl => \", this.props.AllVV);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"vl => \", this.props.AllVV);\r\n    console.log(\"datas\", this.props.datasource);\r\n    this.props.datasource != null &&\r\n      this.props.datasource.map((data, index) => {\r\n        Object.assign(data, {\r\n          key: index,\r\n          dateDebut: moment(data.RAVDDEBUT, \"YYYY-MM-DD\"),\r\n          dateFin: moment(data.RAVDFIN, \"YYYY-MM-DD\"),\r\n        });\r\n      });\r\n    this.setState({\r\n      dataSource: this.props.datasource != null ? this.props.datasource : [],\r\n    });\r\n  }\r\n  showModal = () => {\r\n    this.setState({ visible: true });\r\n  };\r\n  onSubmit = () => {\r\n    this.formRef.current.submit();\r\n    console.log(this.formRef.current);\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n  handleOk = () => {\r\n    this.onSubmit();\r\n  };\r\n  handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    this.setState({ visible: false, contenu: [] });\r\n  };\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable || !this.props.update) {\r\n        return col;\r\n      }\r\n\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          max: col.max,\r\n          required: col.required,\r\n          pattern: col.pattern,\r\n          type: col.type,\r\n          Sites: this.props.AllSites,\r\n          VV: this.props.AllVV,\r\n          update: this.props.update,\r\n          handleSave: this.handleSave,\r\n          setUpdateVL: this.props.setUpdateVL,\r\n        }),\r\n      };\r\n    });\r\n\r\n    // ajouter de datatable\r\n    const { xScroll, yScroll, ...state } = this.state;\r\n    const scroll = {};\r\n    if (yScroll) {\r\n      scroll.y = 240;\r\n    }\r\n    if (xScroll) {\r\n      scroll.x = \"100vw\";\r\n    }\r\n\r\n    // const tableColumns = this.state.columns.map((item) => ({\r\n    //   ...item,\r\n    //   ellipsis: state.ellipsis,\r\n    // }));\r\n    // if (xScroll === \"fixed\") {\r\n    //   tableColumns[0].fixed = true;\r\n    //   tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n    // }\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <Table\r\n          className=\"template-dms\"\r\n          title={() => (\r\n            <TitleCustomize\r\n              vues={{\r\n                vueSysteme: vueSysteme,\r\n                vuesPersonnalises: vuesPersonnalises,\r\n              }}\r\n              title={\"Assortiment Vendable\"}\r\n              enAdd={this.showModal}\r\n              // {this.showModal}\r\n              // {this.handleAdd}\r\n              type=\"primary\"\r\n              style={{\r\n                marginBottom: 16,\r\n              }}\r\n            />\r\n          )}\r\n          // {...this.state}\r\n          // vues={{\r\n          //   vueSysteme: vueSysteme,\r\n          //   vuesPersonnalises: vuesPersonnalises,\r\n          // }}\r\n          size=\"small\"\r\n          pagination={{ position: [this.state.top, this.state.bottom] }}\r\n          // columns={tableColumns}\r\n          // dataSource={state.hasData ? this.state.data : null}\r\n          // scroll={scroll}\r\n          scroll={{ x: 500 }}\r\n          components={components}\r\n          rowSelection={{ ...rowSelection }}\r\n          rowClassName={() => \"editable-row\"}\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n        />{\" \"}\r\n        <Modal\r\n          title=\"New\"\r\n          style={{ display: \"flex\" }}\r\n          // centered\r\n          width={500}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          confirmLoading={this.state.confirmLoading}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <ConfigProvider form={{ validateMessages: validateMessages.fr }}>\r\n            {/* <p>{this.state.modalText}</p> */}\r\n            <Form\r\n              ref={this.formRef}\r\n              layout=\"vertical\"\r\n              name=\"control-ref\"\r\n              initialValues={{ ...this.state.defaultValue }}\r\n              onFinish={this.onFinish}\r\n            >\r\n              {\" \"}\r\n              <Row\r\n                gutter={[5, 5]}\r\n                // align=\"top\"\r\n                style={{\r\n                  minHeight: \"250px\",\r\n                  maxHeight: \"400px\",\r\n                  overflowY: \"auto\",\r\n                }}\r\n              >\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    label=\"Point de vente\"\r\n                    name={\"RAVSITE\"}\r\n                    hasFeedback\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Select\r\n                      style={{ width: \"100%\" }}\r\n                      onChange={(id_site) => {\r\n                        console.log(id_site);\r\n                        // getTarifeBySite()\r\n                      }}\r\n                    >\r\n                      {this.props.AllSites.map((data, index) => (\r\n                        <Select.Option value={index}>\r\n                          {data.RSSITE}\r\n                        </Select.Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    label=\"variante de vente\"\r\n                    name={\"RAVCINVV\"}\r\n                    hasFeedback\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Select style={{ width: \"100%\" }}>\r\n                      {this.props.AllVV.map((data, index) => (\r\n                        <Select.Option value={index}>\r\n                          {data.RPVVLIBL}\r\n                        </Select.Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={24} style={{ width: \"100%\" }}>\r\n                  <Form.Item\r\n                    label=\"Date de debut\"\r\n                    name={\"RAVDDEBUT\"}\r\n                    hasFeedback\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <DatePicker style={{ width: \"100%\" }} />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={8} style={{ width: \"100%\" }}>\r\n                  <Form.Item\r\n                    label=\"Tarife de Vente\"\r\n                    name={\"RPVCINTV\"}\r\n                    hasFeedback\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Select style={{ width: \"100%\" }}>\r\n                      {this.state.TarifVente.map((data, index) => (\r\n                        <Select.Option value={data.ID_ROWID}>\r\n                          Marge: {data.RTVMARGE}, TVA: {data.RTVTVA}\r\n                        </Select.Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>{\" \"}\r\n                <Col span={16} style={{ width: \"100%\" }}>\r\n                  <Form.Item\r\n                    label=\"Prix de vente\"\r\n                    name={\"RPVPRIX\"}\r\n                    hasFeedback\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      placeholder=\"Entrer le prix...\"\r\n                      suffix={<DollarCircleOutlined />}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </ConfigProvider>{\" \"}\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  Popconfirm,\r\n  Form,\r\n  ConfigProvider,\r\n  DatePicker,\r\n  message,\r\n  Tooltip,\r\n} from \"antd\";\r\nimport { Col, InputNumber, Modal, Row, Select, Typography } from \"dmsui\";\r\nimport moment from \"moment\";\r\nimport {\r\n  CheckCircleTwoTone,\r\n  CloseCircleTwoTone,\r\n  DeleteOutlined,\r\n  DollarCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport TitleCustomize from \"./TitleCustomize\";\r\nimport { validateMessages } from \"../../../../Constante\";\r\nconst expandable = {\r\n  expandedRowRender: (record) => <p>{record.description}</p>,\r\n};\r\nconst pagination = { position: \"bottom\" };\r\nconst vueSysteme = [];\r\nfor (let i = 1; i <= 1; i++) {\r\n  vueSysteme.push({\r\n    titre: \"Vue systéme \" + i,\r\n    check: true,\r\n  });\r\n}\r\nconst vuesPersonnalises = [];\r\nfor (let i = 1; i <= 3; i++) {\r\n  vuesPersonnalises.push({\r\n    titre: \"Vues personnalisés \" + i,\r\n    check: false,\r\n  });\r\n}\r\n\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(\r\n      `selectedRowKeys: ${selectedRowKeys}`,\r\n      \"selectedRows: \",\r\n      selectedRows\r\n    );\r\n  },\r\n  onSelect: (record, selected, selectedRows) => {\r\n    console.log(record, selected, selectedRows);\r\n  },\r\n  onSelectAll: (selected, selectedRows, changeRows) => {\r\n    console.log(selected, selectedRows, changeRows);\r\n  },\r\n};\r\n//befor\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  pattern,\r\n  max,\r\n  required,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  setUpdateVL,\r\n  disabled,\r\n  Sites,\r\n  VV,\r\n  type,\r\n  update,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n  useEffect(() => {\r\n    // console.log(\"tinane voila la\", max, \"record\", record);\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      // values.site\r\n      console.log(\"Assortiment vendable update => \", values, \"recorde\", record);\r\n\r\n      toggleEdit();\r\n      setUpdateVL(record, values);\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log(\"Save failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        // rules={[\r\n        //   {\r\n        //     required: required,\r\n        //     max: max,\r\n        //     pattern: pattern,\r\n        //     // message: `${title} is required.`,\r\n        //   },\r\n        // ]}\r\n      >\r\n        {type == \"number\" ? (\r\n          <DatePicker\r\n            style={{ width: \"100%\" }}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n            bordered={false}\r\n            size=\"small\"\r\n          />\r\n        ) : type == \"site\" ? (\r\n          <Select\r\n            size=\"small\"\r\n            // style={{ width: \"100%\" }}\r\n            showSearch\r\n            // style={{ width: 200 }}\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n            optionFilterProp=\"children\"\r\n          >\r\n            {Sites != null &&\r\n              Sites.map((site, index) => (\r\n                <Select.Option value={site.ID_ROWID}>\r\n                  {site.RSSITE}\r\n                </Select.Option>\r\n              ))}\r\n          </Select>\r\n        ) : type == \"fournisseur\" ? (\r\n          <Select\r\n            size=\"small\"\r\n            // style={{ width: \"100%\" }}\r\n            showSearch\r\n            // style={{ width: 200 }}\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n            optionFilterProp=\"children\"\r\n          >\r\n            {Sites != null &&\r\n              Sites.map((site, index) => (\r\n                <Select.Option value={site.ID_ROWID}>\r\n                  {site.RSSITE}\r\n                </Select.Option>\r\n              ))}\r\n          </Select>\r\n        ) : (\r\n          <Select\r\n            size=\"small\"\r\n            // style={{ width: \"100%\" }}\r\n            showSearch\r\n            // style={{ width: 200 }}\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n            optionFilterProp=\"children\"\r\n          >\r\n            {VV != null &&\r\n              VV.map((vv, index) => (\r\n                <Select.Option value={index}>{vv.RPVVCEXT}</Select.Option>\r\n              ))}\r\n          </Select>\r\n        )}\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{\r\n          paddingRight: 24,\r\n        }}\r\n        onClick={toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nexport default class AssortimentCommandable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: \"Point de vente\",\r\n        // max: 10,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        disabled: this.props.update,\r\n        dataIndex: \"RACSITE\",\r\n        type: \"site\",\r\n\r\n        width: \"15%\",\r\n        fixed: \"left\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n        render: (_, record) => (\r\n          <Tooltip placement=\"topLeft\" title={record.RAVETAT}>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n              {record.CEXTSITE != null ? record.CEXTSITE : record.site}\r\n              {/* {record.site != null ? record.site : record.RAVSITE} */}\r\n            </div>\r\n          </Tooltip>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Variante logistique\",\r\n        // max: 10,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RACCINVL\",\r\n        width: \"15%\",\r\n        disabled: this.props.update,\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n        render: (_, record) => (\r\n          <Tooltip placement=\"topLeft\" title={record.RAVETAT}>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n              {record.CEXTVL != null ? record.CEXTVL : record.RACCINVL}\r\n            </div>\r\n          </Tooltip>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Fournisseur\",\r\n        // max: 10,\r\n        type: \"fournisseur\",\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RACCINFR\",\r\n        width: \"15%\",\r\n        disabled: this.props.update,\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n        render: (_, record) => (\r\n          <Tooltip placement=\"topLeft\" title={record.RAVETAT}>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n              {record.CEXTFOUR != null ? record.CEXTFOUR : record.RACCINFR}\r\n            </div>\r\n          </Tooltip>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Maximum commandé\",\r\n        // max: 10,\r\n        type: \"number\",\r\n        editable: true,\r\n        disabled: this.props.update,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RACMAXCMD\",\r\n        width: \"10%\",\r\n        ellipsis: true,\r\n        showSorterTooltip: true,\r\n        render: (_, record) => (\r\n          <Tooltip placement=\"topLeft\" title={record.RAVDDEBUT}>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n              {record.RACMAXCMD}\r\n            </div>\r\n          </Tooltip>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Minimum commandé\",\r\n        // max: 10,\r\n        type: \"number\",\r\n        editable: true,\r\n        disabled: this.props.update,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RACMINCMD\",\r\n        width: \"10%\",\r\n        ellipsis: true,\r\n        showSorterTooltip: true,\r\n        render: (_, record) => (\r\n          <Tooltip placement=\"topLeft\" title={record.RAVDDEBUT}>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n              {record.RACMINCMD}\r\n            </div>\r\n          </Tooltip>\r\n        ),\r\n      },\r\n      {\r\n        title: \"TVA\",\r\n        // max: 10,\r\n        type: \"number\",\r\n        editable: true,\r\n        disabled: this.props.update,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RACCINTVA\",\r\n        width: \"16%\",\r\n        ellipsis: true,\r\n        showSorterTooltip: true,\r\n        render: (_, record) => (\r\n          <Tooltip placement=\"topLeft\" title={record.RAVDDEBUT}>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n              {record.CEXTVA != null ? record.CEXTVA : record.RACCINTVA}\r\n            </div>\r\n          </Tooltip>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Prix brut\",\r\n        // max: 10,\r\n        type: \"number\",\r\n        editable: true,\r\n        disabled: this.props.update,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RACPRIXB\",\r\n        width: \"13%\",\r\n        ellipsis: true,\r\n        showSorterTooltip: true,\r\n        render: (_, record) => (\r\n          <Tooltip placement=\"topLeft\" title={record.RAVDDEBUT}>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n              {record.RACPRIXB}\r\n            </div>\r\n          </Tooltip>\r\n        ),\r\n      },\r\n\r\n      // {\r\n      //   title: \"Date Debut\",\r\n      //   // max: 10,\r\n      //   type: \"number\",\r\n      //   editable: true,\r\n      //   disabled: this.props.update,\r\n      //   pattern: \"^[a-zA-Z]*$\",\r\n      //   required: false,\r\n      //   dataIndex: \"dateDebut\",\r\n      //   width: \"17%\",\r\n      //   ellipsis: true,\r\n      //   showSorterTooltip: true,\r\n      //   render: (_, record) => (\r\n      //     <Tooltip placement=\"topLeft\" title={record.RAVDDEBUT}>\r\n      //       <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n      //         {record.RAVDDEBUT}\r\n      //       </div>\r\n      //     </Tooltip>\r\n      //   ),\r\n      // },\r\n      // {\r\n      //   title: \"Date de fin\",\r\n      //   // max: 10,\r\n      //   type: \"number\",\r\n      //   pattern: \"^[a-zA-Z]*$\",\r\n      //   required: false,\r\n      //   dataIndex: \"dateFin\",\r\n      //   width: \"17%\",\r\n      //   ellipsis: true,\r\n      //   type: \"number\",\r\n      //   disabled: this.props.update,\r\n      //   editable: true,\r\n      //   showSorterTooltip: true,\r\n      //   render: (_, record) => (\r\n      //     <Tooltip placement=\"topLeft\" title={record.RAVDFIN}>\r\n      //       <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n      //         {record.RAVDFIN}\r\n      //       </div>\r\n      //     </Tooltip>\r\n      //   ),\r\n      // },\r\n\r\n      {\r\n        title: \"\",\r\n        fixed: \"right\",\r\n\r\n        width: \"6%\",\r\n        dataIndex: \"operation\",\r\n        render: (_, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              {/* <a>Delete</a> */}\r\n              <DeleteOutlined style={{ color: \"#f44336\" }} />\r\n            </Popconfirm>\r\n          ) : null,\r\n      },\r\n    ];\r\n    this.state = {\r\n      // after\r\n      TarifVente: [],\r\n      contenu: [],\r\n      bordered: false,\r\n      loading: false,\r\n      pagination,\r\n\r\n      expandable,\r\n      showHeader: true,\r\n      rowSelection: {},\r\n      scroll: undefined,\r\n      hasData: true,\r\n      tableLayout: undefined,\r\n      top: \"none\",\r\n      bottom: \"bottomRight\",\r\n\r\n      //before\r\n      dataSource: [],\r\n      count: 2,\r\n    };\r\n  }\r\n  ULRef = React.createRef();\r\n  formRef = React.createRef();\r\n  onFinish = async (values) => {\r\n    console.log(\r\n      \"------------------debut-Submit-Assortiment-commandable------------------\"\r\n    );\r\n    var loadingOnsubmit = true;\r\n    message.loading(\"Loading..\", loadingOnsubmit);\r\n    try {\r\n      console.log(values);\r\n      console.log(\"site :  =>\", this.props.AllSites[values.RACSITE]);\r\n      console.log(\"fournisseur :  =>\", this.props.AllFour[values.RACCINFR]);\r\n      console.log(\"TVA :  =>\", this.props.AllTVA[values.RACCINTVA]);\r\n      console.log(\"VL : =>\", this.props.AllVL[values.RACCINVL]);\r\n      console.log(\r\n        \"Plan de palittisation :  =>\",\r\n        this.props.AllVL[values.RACCINVL]\r\n      );\r\n      // console.log(\"vv :  =>\", this.props.AllVV[values.RAVCINVV]);\r\n      const rangeTimeValue = values[\"RACDDEBUT\"];\r\n      const indexsite = values.RACSITE;\r\n      const indexfournisseur = values.RACCINFR;\r\n      const indexvl = values.RACCINVL;\r\n      const indextva = values.RACCINTVA;\r\n      // const indexvv = values.RAVCINVV;\r\n      const tmp = {\r\n        key: this.state.dataSource.length - 1,\r\n        CEXTSITE: this.props.AllSites[indexsite].RSSITE,\r\n        CEXTFOUR: this.props.AllFour[indexfournisseur].RFRCEXT,\r\n        CEXTVL: this.props.AllVL[indexvl].RPLLCEXT,\r\n        CEXTVA:\r\n          \"TVA (\" +\r\n          this.props.AllTVA[indextva].RTVACODE +\r\n          \") \" +\r\n          this.props.AllTVA[indextva].RTVATAUX +\r\n          \"%\",\r\n        // CEXTVV: this.props.AllVV[indexvv].RPVVCEXT,\r\n        RACSITE: this.props.AllSites[indexsite].RSSITE,\r\n        RACCINFR: this.props.AllFour[indexfournisseur].RFRCEXT,\r\n        RACCINVL: this.props.AllVL[indexvl].RPLLCEXT,\r\n        RACMAXCMD: values.RACMAXCMD,\r\n        RACMINCMD: values.RACMINCMD,\r\n        RACPRIXB: values.RACPRIXB,\r\n        // RAVCINVV: this.props.AllVV[indexvv].RPVVCEXT,\r\n        // RAVETAT: true,\r\n        // VL: this.props.AllVV[indexvv].RPVVCINUL.VL,\r\n        // UL: this.props.AllVV[indexvv].RPVVCINUL.UL,\r\n        // VV: this.props.AllVV[indexvv].id,\r\n        RACDDEBUT: rangeTimeValue.format(\"YYYY-MM-DD HH:mm\"),\r\n      };\r\n      // tmp.RAVSITE = this.props.AllSites[indexsite].RSSITE;\r\n      // tmp.RAVCINVV = this.props.AllVV[indexvv].RPVVCEXT;\r\n      // values.VL = this.props.AllVV[indexvv].RPVVCINUL.VL;\r\n      // values.UL = this.props.AllVV[indexvv].RPVVCINUL.UL;\r\n      // values.VV = this.props.AllVV[indexvv].id;\r\n      //------\r\n      values.key = this.state.dataSource.length;\r\n      values.RACCINVL = this.props.AllVL[indexvl].ID_ROWID;\r\n      // // this.props.AllVV[values.RAVCINVV].RPVVCEXT;\r\n      values.RACSITE = this.props.AllSites[indexsite].ID_ROWID;\r\n      values.RACCINFR = this.props.AllFour[indexfournisseur].ID_ROWID;\r\n      values.RACCINTVA = this.props.AllTVA[indextva].ID_ROWID;\r\n      values.RACDDEBUT = rangeTimeValue.format(\"YYYY-MM-DD HH:mm\");\r\n      values.VL = this.props.AllVL[indexvl].key;\r\n      // values.RAVETAT = true;\r\n      this.props.setNewASV(values);\r\n      console.log(\"submit value => :\", values);\r\n      this.setState({\r\n        modalText: \"The modal will be closed after two seconds\",\r\n        confirmLoading: true,\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({ visible: false, confirmLoading: false });\r\n        // this.onReset();\r\n      }, 2000);\r\n\r\n      //  moment(Datas.data.MUTDDEB, \"YYYY-MM-DD HH:mm:ss\"),\r\n      this.handleAdd(tmp);\r\n      // this.onReset();\r\n      this.handleCancel();\r\n      console.log(\r\n        \"------------------fin-Submit-Assortiment-commandable------------------\"\r\n      );\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      console.log(\r\n        \"------------------fin-Submit-Assortiment-vendable------------------\"\r\n      );\r\n    }\r\n  };\r\n  // componentDidUpdate(prevProps) {\r\n  //   if (prevProps.updateAdress !== this.props.updateAdress) {\r\n  //     this.\r\n  //   }\r\n  // }\r\n  getDataSource() {\r\n    return this.state.dataSource;\r\n  }\r\n  handleDelete = (keyy) => {\r\n    const dataSource = [...this.state.dataSource];\r\n    const result = dataSource.findIndex(({ key }) => key == keyy);\r\n    console.log(dataSource, result);\r\n    this.props.setDeleteVL(dataSource[result]);\r\n    this.setState({\r\n      dataSource: dataSource.filter((item) => item.key !== keyy),\r\n    });\r\n  };\r\n  handleAdd = (datas) => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = datas;\r\n    newData.key = dataSource.length;\r\n\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n  handleSave = (row) => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, { ...item, ...row });\r\n    this.setState({\r\n      dataSource: newData,\r\n    });\r\n  };\r\n  componentDidUpdate(prevProps) {\r\n    // console.log(\"-----vl => \", prevProps.AllVL.);\r\n    // if (prevProps.AllVV !== this.props.AllVV) {\r\n    //   console.log(\"-----vl => \", this.props.AllVV);\r\n    // }\r\n  }\r\n  componentDidMount() {\r\n    // console.log(\"vl => \", this.props.AllVV);\r\n    console.log(\"datas\", this.props.datasource);\r\n    this.props.datasource != null &&\r\n      this.props.datasource.map((data, index) => {\r\n        Object.assign(data, {\r\n          key: index,\r\n          dateDebut: moment(data.RAVDDEBUT, \"YYYY-MM-DD\"),\r\n          dateFin: moment(data.RAVDFIN, \"YYYY-MM-DD\"),\r\n        });\r\n      });\r\n    this.setState({\r\n      dataSource: this.props.datasource != null ? this.props.datasource : [],\r\n    });\r\n  }\r\n  showModal = () => {\r\n    this.setState({ visible: true });\r\n  };\r\n  onSubmit = () => {\r\n    this.formRef.current.submit();\r\n    console.log(this.formRef.current);\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n  handleOk = () => {\r\n    this.onSubmit();\r\n  };\r\n  handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    this.setState({ visible: false, contenu: [] });\r\n  };\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable || !this.props.update) {\r\n        return col;\r\n      }\r\n\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          max: col.max,\r\n          required: col.required,\r\n          pattern: col.pattern,\r\n          type: col.type,\r\n          Sites: this.props.AllSites,\r\n          VV: this.props.AllVL,\r\n          update: this.props.update,\r\n          handleSave: this.handleSave,\r\n          setUpdateVL: this.props.setUpdateVL,\r\n        }),\r\n      };\r\n    });\r\n\r\n    // ajouter de datatable\r\n    const { xScroll, yScroll, ...state } = this.state;\r\n    const scroll = {};\r\n    if (yScroll) {\r\n      scroll.y = 240;\r\n    }\r\n    if (xScroll) {\r\n      scroll.x = \"100vw\";\r\n    }\r\n\r\n    // const tableColumns = this.state.columns.map((item) => ({\r\n    //   ...item,\r\n    //   ellipsis: state.ellipsis,\r\n    // }));\r\n    // if (xScroll === \"fixed\") {\r\n    //   tableColumns[0].fixed = true;\r\n    //   tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n    // }\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <Table\r\n          className=\"template-dms\"\r\n          title={() => (\r\n            <TitleCustomize\r\n              vues={{\r\n                vueSysteme: vueSysteme,\r\n                vuesPersonnalises: vuesPersonnalises,\r\n              }}\r\n              title={\"\"}\r\n              enAdd={this.showModal}\r\n              // {this.showModal}\r\n              // {this.handleAdd}\r\n              type=\"primary\"\r\n              style={{\r\n                marginBottom: 16,\r\n              }}\r\n            />\r\n          )}\r\n          // {...this.state}\r\n          // vues={{\r\n          //   vueSysteme: vueSysteme,\r\n          //   vuesPersonnalises: vuesPersonnalises,\r\n          // }}\r\n          size=\"small\"\r\n          pagination={{ position: [this.state.top, this.state.bottom] }}\r\n          // columns={tableColumns}\r\n          // dataSource={state.hasData ? this.state.data : null}\r\n          // scroll={scroll}\r\n          scroll={{ x: 500 }}\r\n          components={components}\r\n          rowSelection={{ ...rowSelection }}\r\n          rowClassName={() => \"editable-row\"}\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n        />{\" \"}\r\n        <Modal\r\n          title=\"New\"\r\n          style={{ display: \"flex\" }}\r\n          // centered\r\n          width={500}\r\n          destroyOnClose={true}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          confirmLoading={this.state.confirmLoading}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <ConfigProvider form={{ validateMessages: validateMessages.fr }}>\r\n            {/* <p>{this.state.modalText}</p> */}\r\n            <Form\r\n              ref={this.formRef}\r\n              layout=\"vertical\"\r\n              name=\"control-ref\"\r\n              initialValues={{ ...this.state.defaultValue }}\r\n              onFinish={this.onFinish}\r\n            >\r\n              {\" \"}\r\n              <Row\r\n                gutter={[5, 5]}\r\n                // align=\"top\"\r\n                style={{\r\n                  minHeight: \"250px\",\r\n                  maxHeight: \"400px\",\r\n                  overflowY: \"auto\",\r\n                }}\r\n              >\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    label=\"Point de vente\"\r\n                    name={\"RACSITE\"}\r\n                    hasFeedback\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Select\r\n                      style={{ width: \"100%\" }}\r\n                      onChange={(id_site) => {\r\n                        console.log(id_site);\r\n                        // getTarifeBySite()\r\n                      }}\r\n                    >\r\n                      {this.props.AllSites.map((data, index) => (\r\n                        <Select.Option value={index}>\r\n                          {data.RSSITE}\r\n                        </Select.Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    label=\"Fournisseur\"\r\n                    name={\"RACCINFR\"}\r\n                    hasFeedback\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Select style={{ width: \"100%\" }}>\r\n                      {this.props.AllFour.map((data, index) => (\r\n                        <Select.Option value={index}>\r\n                          {data.RFRCEXT}\r\n                        </Select.Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <Form.Item\r\n                    label=\"Plan de palettisation\"\r\n                    name={\"RACCINVL\"}\r\n                    hasFeedback\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Select style={{ width: \"100%\" }}>\r\n                      {this.props.AllVL.map((data, index) => (\r\n                        <Select.Option value={index}>\r\n                          {data.RPLLCEXT}\r\n                        </Select.Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={16} style={{ width: \"100%\" }}>\r\n                  <Form.Item\r\n                    label=\"Date de debut\"\r\n                    name={\"RACDDEBUT\"}\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                      },\r\n                    ]}\r\n                    hasFeedback\r\n                  >\r\n                    <DatePicker style={{ width: \"100%\" }} />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={4} style={{ width: \"100%\" }}>\r\n                  <Form.Item\r\n                    label=\"Min  \"\r\n                    name={\"RACMINCMD\"}\r\n                    hasFeedback\r\n                    style={{ width: \"100%\" }}\r\n                  >\r\n                    <InputNumber\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"5\"\r\n                      suffix={<DollarCircleOutlined />}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>{\" \"}\r\n                <Col span={4} style={{ width: \"100%\" }}>\r\n                  <Form.Item\r\n                    label=\"Max  \"\r\n                    name={\"RACMAXCMD\"}\r\n                    style={{ width: \"100%\" }}\r\n                    hasFeedback\r\n                  >\r\n                    <InputNumber\r\n                      placeholder=\"5\"\r\n                      style={{ width: \"100%\" }}\r\n                      suffix={<DollarCircleOutlined />}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={10} style={{ width: \"100%\" }}>\r\n                  <Form.Item\r\n                    label=\"TVA\"\r\n                    name={\"RACCINTVA\"}\r\n                    hasFeedback\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Select style={{ width: \"100%\" }}>\r\n                      {this.props.AllTVA.map((data, index) => (\r\n                        <Select.Option value={index}>\r\n                          TVA ({data.RTVACODE}) {data.RTVATAUX}%\r\n                        </Select.Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>{\" \"}\r\n                <Col span={14} style={{ width: \"100%\" }}>\r\n                  <Form.Item\r\n                    label=\"Prix d'achat\"\r\n                    name={\"RACPRIXB\"}\r\n                    hasFeedback\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      placeholder=\"Entrer le prix...\"\r\n                      suffix={<DollarCircleOutlined />}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </ConfigProvider>{\" \"}\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { notification } from \"dmsui\";\r\nimport { domaine, userApiEndPoint } from \"../config\";\r\nimport http from \"./httpService\";\r\nexport const getAllSites = (produitApiEndPoint, search, token, filter) => {\r\n  return http.get(\r\n    produitApiEndPoint + (search != null ? \"?search=\" + search : \"?\" + filter),\r\n    {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\",\r\n        accept: \"application/json\",\r\n      },\r\n    }\r\n  );\r\n};\r\nexport const getSiteByID = (produitApiEndPoint, id, token) => {\r\n  return http.get(`${produitApiEndPoint}${id}`, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\nexport const insertSite = async (siteApiEndPoint, token, site) => {\r\n  const CalSite = await http.post(siteApiEndPoint + \"Calendrier/\", site, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n  site.RSCINCAL = CalSite.data.ID_ROWID;\r\n  const Site = await http.post(siteApiEndPoint, site, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n  return Site;\r\n};\r\n\r\nexport const updateSite = async (\r\n  siteApiEndPoint,\r\n  site_id,\r\n  token,\r\n  site,\r\n  cal_id\r\n) => {\r\n  await http.put(`${siteApiEndPoint}${site_id}/`, site, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n  await http.put(`${siteApiEndPoint + \"Calendrier/\"}${cal_id}/`, site, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n\r\n  return;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Modal,\r\n  notification,\r\n  Row,\r\n  Space,\r\n  Tag,\r\n  Tooltip,\r\n  Avatar,\r\n} from \"antd\";\r\nimport { DatePicker, Table } from \"dmsui\";\r\nimport \"./style.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport {\r\n  CheckCircleTwoTone,\r\n  CheckOutlined,\r\n  CloseCircleTwoTone,\r\n  InfoOutlined,\r\n  SnippetsOutlined,\r\n  UserOutlined,\r\n  DeleteOutlined,\r\n  MergeCellsOutlined,\r\n  SplitCellsOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  ActiveDesactiveUser,\r\n  // getAllUsers,\r\n} from \"../../../DjangoService/userService\";\r\nimport { authApp, userUpdatePath } from \"../../../config\";\r\nimport { connexion } from \"../../../DjangoService/authnService\";\r\nimport TitleCustomize from \"./formulaireComponents/TitleCustomize\";\r\nimport { getAllProduits } from \"../../../DjangoService/ProduitService\";\r\n\r\n// const pagination = { position: \"bottom\" };\r\nconst vueSysteme = [];\r\nfor (let i = 1; i <= 1; i++) {\r\n  vueSysteme.push({\r\n    titre: \"Vue systéme \" + i,\r\n    check: true,\r\n  });\r\n}\r\nconst vuesPersonnalises = [];\r\nfor (let i = 1; i <= 3; i++) {\r\n  vuesPersonnalises.push({\r\n    titre: \"Vues personnalisés \" + i,\r\n    check: false,\r\n  });\r\n}\r\nconst DescriptionItem = ({ title, content }) => (\r\n  <div className=\"site-description-item-profile-wrapper\">\r\n    <p className=\"site-description-item-profile-p-label\">{title}:</p>\r\n    {content}\r\n  </div>\r\n);\r\nclass Results extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: \"\",\r\n      token: null,\r\n      bordered: false,\r\n      loading: false,\r\n      // pagination,\r\n      model: {\r\n        title: \"\",\r\n        Content: \"\",\r\n        width: 300,\r\n        onOk: console.log(\"ok\"),\r\n        visible: false,\r\n      },\r\n      dateFinDesactiver: \"20202-28-06 11:34:00\",\r\n      columns: [\r\n        {\r\n          title: \"\",\r\n          dataIndex: \"RPRPHOTO\",\r\n          width: \"5%\",\r\n          ellipsis: true,\r\n          fixed: \"left\",\r\n          render: (_, record) => {\r\n            return (\r\n              !this.state.loading && (\r\n                <Avatar\r\n                  src={\r\n                    !!record.RPRPHOTO && record.RPRPHOTO\r\n                    // : process.env.PUBLIC_URL + \"/photo.png\"\r\n                  }\r\n                  // tag ? tag : process.env.PUBLIC_URL + \"/photo.png\"}\r\n                  size={40}\r\n                  shape=\"square\"\r\n                  icon={<UserOutlined />}\r\n                >\r\n                  .\r\n                </Avatar>\r\n              )\r\n            );\r\n          },\r\n        },\r\n\r\n        {\r\n          title: \"Code\",\r\n          dataIndex: \"RPRCEXT\",\r\n          ellipsis: true,\r\n          width: \"10%\",\r\n          fixed: \"left\",\r\n          // sorter: (a, b) => a.age - b.age,\r\n          render: (_, record) => (\r\n            <Tooltip placement=\"topLeft\" title={record.RPRCEXT}>\r\n              <div\r\n                style={\r\n                  !record.MUTETAT\r\n                    ? { cursor: \"not-allowed\", color: \"#7a7a7a\" }\r\n                    : {}\r\n                }\r\n              >\r\n                {record.RPRCEXT}\r\n              </div>\r\n            </Tooltip>\r\n          ),\r\n        },\r\n\r\n        {\r\n          title: \"Acronyme\",\r\n          dataIndex: \"RPRLIBC\",\r\n          ellipsis: true,\r\n          width: \"10%\",\r\n          ellipsis: {\r\n            showTitle: false,\r\n          },\r\n          render: (_, record) => (\r\n            <Tooltip placement=\"topLeft\" title={record.RPRLIBC}>\r\n              <div\r\n                style={\r\n                  !record.MUTETAT\r\n                    ? { cursor: \"not-allowed\", color: \"#7a7a7a\" }\r\n                    : {}\r\n                }\r\n              >\r\n                {record.RPRLIBC}\r\n              </div>\r\n            </Tooltip>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Libelle\",\r\n          ellipsis: true,\r\n          width: \"15%\",\r\n          dataIndex: \"RPRLIBL\",\r\n          render: (_, record) => (\r\n            <Tooltip placement=\"topLeft\" title={record.RPRLIBL}>\r\n              <div\r\n                style={\r\n                  !record.MUTETAT\r\n                    ? { cursor: \"not-allowed\", color: \"#7a7a7a\" }\r\n                    : {}\r\n                }\r\n              >\r\n                {record.RPRLIBL}\r\n              </div>\r\n            </Tooltip>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Catégorie\",\r\n          ellipsis: true,\r\n          width: \"10%\",\r\n          dataIndex: \"structure\",\r\n          render: (_, record) => (\r\n            <Tooltip placement=\"topLeft\" title={record.structure}>\r\n              <div\r\n                style={\r\n                  !record.MUTETAT\r\n                    ? { cursor: \"not-allowed\", color: \"#7a7a7a\" }\r\n                    : {}\r\n                }\r\n              >\r\n                <Link>{record.structure}</Link>{\" \"}\r\n              </div>\r\n            </Tooltip>\r\n          ),\r\n        },\r\n\r\n        {\r\n          title: \"Unité de stock\",\r\n          ellipsis: true,\r\n          width: \"10%\",\r\n          dataIndex: \"RPRUSTOCK\",\r\n          render: (_, record) => (\r\n            <span\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              {this.getUniteStockPrd(record.RPRUSTOCK, record.MUTETAT)}\r\n            </span>\r\n          ),\r\n        },\r\n        {\r\n          title: \"garantie\",\r\n          ellipsis: true,\r\n          dataIndex: \"RPRIGARANTI\",\r\n          width: \"6%\",\r\n          render: (_, record) => (\r\n            <Tooltip placement=\"topLeft\" title={record.RPRIGARANTI}>\r\n              <div\r\n                style={\r\n                  !record.MUTETAT\r\n                    ? {\r\n                        cursor: \"not-allowed\",\r\n                        color: \"#7a7a7a\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                      }\r\n                    : { display: \"flex\", justifyContent: \"center\" }\r\n                }\r\n              >\r\n                {record.RPRIGARANTI ? (\r\n                  <CloseCircleTwoTone\r\n                    twoToneColor=\"#ff4d4f\"\r\n                    style={{ fontSize: \"17px\" }}\r\n                  />\r\n                ) : (\r\n                  <CheckCircleTwoTone\r\n                    twoToneColor=\"#16f007\"\r\n                    style={{ fontSize: \"17px\" }}\r\n                  />\r\n                )}\r\n              </div>\r\n            </Tooltip>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Dangereux\",\r\n          ellipsis: true,\r\n          width: \"7%\",\r\n          dataIndex: \"RPRIDAnger\",\r\n          render: (_, record) => (\r\n            <Tooltip placement=\"topLeft\" title={record.RPRIDAnger}>\r\n              <div\r\n                style={\r\n                  !record.MUTETAT\r\n                    ? {\r\n                        cursor: \"not-allowed\",\r\n                        color: \"#7a7a7a\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                      }\r\n                    : { display: \"flex\", justifyContent: \"center\" }\r\n                }\r\n              >\r\n                {record.RPRIDAnger ? (\r\n                  <CloseCircleTwoTone\r\n                    twoToneColor=\"#ff4d4f\"\r\n                    style={{ fontSize: \"17px\" }}\r\n                  />\r\n                ) : (\r\n                  <CheckCircleTwoTone\r\n                    twoToneColor=\"#16f007\"\r\n                    style={{ fontSize: \"17px\" }}\r\n                  />\r\n                )}\r\n              </div>\r\n            </Tooltip>\r\n          ),\r\n        },\r\n        {\r\n          title: \"variante de vente\",\r\n          ellipsis: true,\r\n          width: \"10%\",\r\n          dataIndex: \"RPRUSTOCK\",\r\n          render: (_, record) => (\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              {\" \"}\r\n              <Button\r\n                className={\"dms-button-info dms-button dms\"}\r\n                onClick={() => console.log(\"see\", record.id)}\r\n                shape=\"circle\"\r\n                type=\"text\"\r\n                disabled={!record.MUTETAT}\r\n                onClick={() => this.props.goTo(userUpdatePath + record.id)}\r\n                icon={<SnippetsOutlined />}\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  console.log(\"delete\", record.id);\r\n                  this.setState({\r\n                    model: {\r\n                      title: \"Contacte\",\r\n                      Content: (\r\n                        <Space direction=\"vertical\" size={12}>\r\n                          {/* <p> Do you want to disable user {record.username}</p> */}\r\n                          {/* <p className=\"site-description-item-profile-p\">\r\n                            Contacts\r\n                          </p> */}\r\n                          <Row>\r\n                            <Col span={12}>\r\n                              <DescriptionItem\r\n                                title=\"Email\"\r\n                                content=\"AntDesign@example.com\"\r\n                              />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <DescriptionItem\r\n                                title=\"Phone Number\"\r\n                                content=\"+86 181 0000 0000\"\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col span={24}>\r\n                              <DescriptionItem\r\n                                title=\"Github\"\r\n                                content={\r\n                                  <a href=\"http://github.com/ant-design/ant-design/\">\r\n                                    github.com/ant-design/ant-design/\r\n                                  </a>\r\n                                }\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                        </Space>\r\n                      ),\r\n                      onOk: async () => {\r\n                        console.log(\"ok\", this.state.dateFinDesactiver);\r\n                      },\r\n                      width: 600,\r\n                      visible: true,\r\n                    },\r\n                  });\r\n                  // deleteUser(this.props.service, record.id);\r\n                }}\r\n              />\r\n            </div>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Type\",\r\n          ellipsis: true,\r\n          width: \"9%\",\r\n          dataIndex: \"RPRTYPE\",\r\n          render: (_, record) => (\r\n            <span\r\n              style={\r\n                {\r\n                  // display: \"flex\",\r\n                  // justifyContent: \"center\",\r\n                  // width: \"100%\",\r\n                }\r\n              }\r\n            >\r\n              {this.getTypePrd(record.RPRTYPE, record.MUTETAT)}\r\n            </span>\r\n          ),\r\n        },\r\n\r\n        {\r\n          title: \" \",\r\n          key: \"action\",\r\n          width: \"8%\",\r\n          fixed: \"right\",\r\n          width: 170,\r\n          // sorter: true,\r\n          render: (_, record) => {\r\n            // console.log(\"hhhh\", record);\r\n            return (\r\n              <Space\r\n                size=\"middle\"\r\n                style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n              >\r\n                <Tooltip\r\n                  placement=\"topLeft\"\r\n                  title={\r\n                    this.state.publier\r\n                      ? \"Retirer de la marketplace\"\r\n                      : \"Publier sur la marketplace\"\r\n                  }\r\n                >\r\n                  {\" \"}\r\n                  <Button\r\n                    className={\"dms-button-info dms-button dms\"}\r\n                    // onClick={() => console.log(\"see\", record.ID_ROWID)}\r\n                    shape=\"circle\"\r\n                    disabled={!record.MUTETAT}\r\n                    onClick={() =>\r\n                      this.setState({ publier: !this.state.publier })\r\n                    }\r\n                    icon={\r\n                      this.state.publier ? (\r\n                        <SplitCellsOutlined />\r\n                      ) : (\r\n                        <MergeCellsOutlined />\r\n                      )\r\n                    }\r\n                    size=\"small\"\r\n                  />\r\n                </Tooltip>\r\n                <Button\r\n                  className={\"dms-button-info dms-button dms\"}\r\n                  // onClick={() => console.log(\"see\", record.ID_ROWID)}\r\n                  shape=\"circle\"\r\n                  disabled={!record.MUTETAT}\r\n                  onClick={() =>\r\n                    this.props.goTo(userUpdatePath + record.ID_ROWID)\r\n                  }\r\n                  icon={<InfoOutlined />}\r\n                  size=\"small\"\r\n                />\r\n\r\n                <Button\r\n                  className={\"dms-button-error dms-button dms\"}\r\n                  shape=\"circle\"\r\n                  // disabled={!record.MUTETAT}\r\n                  icon={\r\n                    !record.MUTETAT ? <CheckOutlined /> : <DeleteOutlined />\r\n                  }\r\n                  // {}<MinusOutlined />\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    console.log(\"delete\", record.id);\r\n                    this.setState({\r\n                      model: {\r\n                        title: \"Delete user\",\r\n                        width: 300,\r\n                        Content: (\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"center\",\r\n                            }}\r\n                          >\r\n                            <Space direction=\"vertical\" size={5} align=\"center\">\r\n                              <p>\r\n                                {record.MUTETAT\r\n                                  ? \"Do you want to disable user \" +\r\n                                    record.username +\r\n                                    \"?\"\r\n                                  : \"Do you want to enable user \" +\r\n                                    record.username +\r\n                                    \"?\"}\r\n                              </p>\r\n                              {record.MUTETAT && (\r\n                                <DatePicker\r\n                                  style={{ width: \"100%\" }}\r\n                                  showTime\r\n                                  onChange={this.onChange}\r\n                                  onOk={this.onOk}\r\n                                />\r\n                              )}\r\n                            </Space>\r\n                          </div>\r\n                        ),\r\n                        onOk: async () => {\r\n                          console.log(\"ok\", this.state.dateFinDesactiver);\r\n                          try {\r\n                            await ActiveDesactiveUser(\r\n                              this.props.service,\r\n\r\n                              {\r\n                                activate: !record.MUTETAT,\r\n                                MUTDFIN: this.state.dateFinDesactiver,\r\n                                pk: record.id,\r\n                              }\r\n                            );\r\n                            this.getData();\r\n                            // await deleteUser(this.props.service, record.id);\r\n                            // this.handleDelete(record.key);\r\n                            notification.open({\r\n                              message: \"Success\",\r\n                              description: record.MUTETAT\r\n                                ? record.username + \" is disabled successfully\"\r\n                                : record.username + \" is enabled successfully\",\r\n                              className: \"custom-class\",\r\n                              type: \"success\",\r\n                              placement: \"bottomRight\",\r\n                              style: {\r\n                                width: 400,\r\n                              },\r\n                            });\r\n                          } catch (error) {\r\n                            console.log(error);\r\n                            notification.open({\r\n                              message: \"Error\",\r\n                              placement: \"bottomRight\",\r\n                              type: \"error\",\r\n                              description: record.MUTETAT\r\n                                ? record.username + \" could not be disabled.\"\r\n                                : record.username + \" could not be enabled.\",\r\n                              className: \"custom-class\",\r\n                              style: {\r\n                                width: 400,\r\n                              },\r\n                            });\r\n                          }\r\n                        },\r\n                        visible: true,\r\n                      },\r\n                    });\r\n                    // deleteUser(this.props.service, record.id);\r\n                  }}\r\n                />\r\n              </Space>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      publier: false,\r\n      datass: [],\r\n      loading: true,\r\n      // expandable,\r\n      showHeader: true,\r\n      rowSelection: {},\r\n      scroll: undefined,\r\n      hasData: true,\r\n      tableLayout: undefined,\r\n      top: \"none\",\r\n      bottom: \"bottomRight\",\r\n    };\r\n    this.getToken = this.getToken.bind(this);\r\n    this.getRefrechToken = this.getRefrechToken.bind(this);\r\n  }\r\n\r\n  getTypePrd(value, etat) {\r\n    switch (value) {\r\n      case 1:\r\n        return (\r\n          <Tag\r\n            style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n            color={!etat ? \"default\" : \"purple\"}\r\n            key={value}\r\n          >\r\n            service\r\n          </Tag>\r\n        );\r\n      case 2:\r\n        return (\r\n          <Tag\r\n            style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n            color={!etat ? \"default\" : \"magenta\"}\r\n            key={value}\r\n          >\r\n            consommable\r\n          </Tag>\r\n        );\r\n      default:\r\n        return (\r\n          <Tag\r\n            style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n            color={!etat ? \"default\" : \"red\"}\r\n            key={value}\r\n          >\r\n            autre\r\n          </Tag>\r\n        );\r\n    }\r\n  }\r\n  getUniteStockPrd(value, etat) {\r\n    switch (value) {\r\n      case 1:\r\n        return (\r\n          <Tag\r\n            style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n            color={!etat ? \"default\" : \"cyan\"}\r\n            key={value}\r\n          >\r\n            piece\r\n          </Tag>\r\n        );\r\n      case 2:\r\n        return (\r\n          <Tag\r\n            style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n            color={!etat ? \"default\" : \"blue\"}\r\n            key={value}\r\n          >\r\n            Kilo fix\r\n          </Tag>\r\n        );\r\n      case 3:\r\n        return (\r\n          <Tag\r\n            style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n            color={!etat ? \"default\" : \"geekblue\"}\r\n            key={value}\r\n          >\r\n            Kilo moyen\r\n          </Tag>\r\n        );\r\n      case 4:\r\n        return (\r\n          <Tag\r\n            style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n            color={!etat ? \"default\" : \"green\"}\r\n            key={value}\r\n          >\r\n            kilo Pese\r\n          </Tag>\r\n        );\r\n      default:\r\n        return (\r\n          <Tag\r\n            style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n            color={!etat ? \"default\" : \"lime\"}\r\n            key={value}\r\n          >\r\n            autre\r\n          </Tag>\r\n        );\r\n    }\r\n  }\r\n  getToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    if (value == null) {\r\n      //  window.location.href = authApp;\r\n      console.log(\"tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ token: value });\r\n    console.log(\"tokne from host => :\", this.state.token);\r\n    console.log(\"-------------------fin-GetToken-------------------\");\r\n    await this.getData();\r\n  };\r\n  getRefrechToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetRefrechToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"403\");\r\n    }\r\n    if (value == null) {\r\n      //  window.location.href = authApp;\r\n      console.log(\"Refech tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ Refrech: value });\r\n    console.log(\"Refech tokne from host => :\", this.state.Refrech);\r\n    console.log(\"-------------------fin-GetRefrechToken-------------------\");\r\n  };\r\n  async componentDidMount() {\r\n    console.log(\"------------------debut-ResultaDeRecherche------------------\");\r\n    const { location } = this.props.history;\r\n\r\n    var search = \"\";\r\n    var filter = \"\";\r\n    console.log(\"location.search  =>  :\", location.search);\r\n    if (location.search != \"\") {\r\n      search = location.search.slice(1).split(\"?\")[0].split(\"search=\")[1];\r\n      if (search == null) {\r\n        filter = location.search.slice(1).split(\"?\")[0];\r\n      }\r\n    }\r\n    this.setState({ search: search, filter });\r\n    console.log(\"Valeur de recherche => :\", search);\r\n    console.log(\"Valeur de filtrage => :\", filter);\r\n    console.log(\"-------------------fin-ResultaDeRecherche-------------------\");\r\n    this.props.hostStorage.get(\"refresh_token\", await this.getRefrechToken);\r\n    this.props.hostStorage.get(\"access_token\", await this.getToken);\r\n  }\r\n  onChange = (value, dateString) => {\r\n    console.log(\"Selected Time: \", value);\r\n    console.log(\r\n      \"Formatted Selected Time: \",\r\n      dateString,\r\n      this.state.dateFinDesactiver\r\n    );\r\n    this.setState({ dateFinDesactiver: dateString });\r\n  };\r\n  refrechpage() {\r\n    // this.props.history.replace(\"app\");\r\n    window.location.reload();\r\n  }\r\n  onOk(value) {\r\n    console.log(\"onOk: \", value);\r\n  }\r\n  handleDelete = (key) => {\r\n    const dataSource = [...this.state.datass];\r\n    this.setState({\r\n      datass: dataSource.filter((item) => item.key !== key),\r\n    });\r\n  };\r\n  async getData() {\r\n    console.log(\"------------------debut-GetProduits------------------\");\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n      // () => this.getData()\r\n    );\r\n    try {\r\n      const res = await getAllProduits(\r\n        this.props.service,\r\n        this.state.search,\r\n\r\n        !!verifyToken ? verifyToken : this.state.token,\r\n        this.state.filter\r\n      );\r\n      console.log(\"succes from api : user (getAll()) => :\", res);\r\n\r\n      res.data != null &&\r\n        res.data.map((data, index) => {\r\n          Object.assign(data, {\r\n            key: index,\r\n            MUTETAT: true,\r\n          });\r\n        });\r\n      this.setState({\r\n        datass: res.data != null ? res.data : null,\r\n        loading: false,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error  :  GetUsers  => : \", error);\r\n      this.setState({\r\n        // datass: [\r\n        //   {\r\n        //     key: 1,\r\n        //     ID_ROWID: 0,\r\n        //     MUTETAT: true,\r\n        //     RPRCEXT: \"FSC8DX4F6S48DS\",\r\n        //     RPRLIBL: \"clavier sans file\",\r\n        //     RPRLIBC: \"clavier\",\r\n        //     RPRTYPE: \"service\",\r\n        //     RPRCINSM: \"électronique\",\r\n        //     RPRUSTOCK: \"Piece\",\r\n        //     RPRIGARANTI: true,\r\n        //     RPRIDAnger: false,\r\n        //     RPRPHOTO: process.env.PUBLIC_URL + \"/photo.png\",\r\n        //   },\r\n        // ],\r\n        loading: false,\r\n      });\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"500\");\r\n      }\r\n    }\r\n    console.log(\"-------------------fin-GetUser-------------------\");\r\n  }\r\n  render() {\r\n    const { xScroll, yScroll, ...state } = this.state;\r\n    const scroll = {};\r\n    if (yScroll) {\r\n      scroll.y = 240;\r\n    }\r\n    if (xScroll) {\r\n      scroll.x = \"100vw\";\r\n    }\r\n\r\n    const tableColumns = this.state.columns.map((item) => ({\r\n      ...item,\r\n      ellipsis: state.ellipsis,\r\n    }));\r\n    if (xScroll === \"fixed\") {\r\n      tableColumns[0].fixed = true;\r\n      tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n    }\r\n    return (\r\n      <div style={{ height: \"100%\", width: \"100%\" }}>\r\n        <Row justify=\"center\">\r\n          <Col span={24} style={{ height: \"587px\", backgroundColor: \"#fff\" }}>\r\n            <Modal\r\n              title={this.state.model.title}\r\n              centered\r\n              visible={this.state.model.visible}\r\n              onOk={() => {\r\n                this.state.model.onOk();\r\n                this.setState({\r\n                  model: {\r\n                    title: \"\",\r\n                    Content: \"\",\r\n                    onOk: console.log(\"ok\"),\r\n                    visible: false,\r\n                  },\r\n                });\r\n                // setVisible(false);\r\n              }}\r\n              onCancel={() =>\r\n                this.setState({\r\n                  model: {\r\n                    title: \"\",\r\n                    Content: \"\",\r\n                    width: 400,\r\n                    onOk: console.log(\"ok\"),\r\n                    visible: false,\r\n                  },\r\n                })\r\n              }\r\n              width={this.state.model.width}\r\n            >\r\n              {this.state.model.Content}\r\n            </Modal>\r\n            <Table\r\n              className=\"template-dms\"\r\n              title={() => (\r\n                <TitleCustomize\r\n                  vues={{\r\n                    vueSysteme: vueSysteme,\r\n                    vuesPersonnalises: vuesPersonnalises,\r\n                  }}\r\n                  title={\"Produits\"}\r\n                  enAdd={this.handleAdd}\r\n                  type=\"primary\"\r\n                  style={{\r\n                    marginBottom: 16,\r\n                  }}\r\n                />\r\n              )}\r\n              size=\"small\"\r\n              pagination={{\r\n                position: [\"none\", \"bottomRight\"],\r\n              }}\r\n              scroll={{ x: 2245 }}\r\n              {...this.state}\r\n              vues={{\r\n                vueSysteme: vueSysteme,\r\n                vuesPersonnalises: vuesPersonnalises,\r\n              }}\r\n              size=\"small\"\r\n              columns={tableColumns}\r\n              dataSource={state.hasData ? this.state.datass : null}\r\n              scroll={scroll}\r\n              scroll={{ y: 435 }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Results);\r\n","import { notification } from \"dmsui\";\r\nimport { domaine, userApiEndPoint } from \"../config\";\r\nimport http from \"./httpService\";\r\nexport const getAllfournissuers = (\r\n  produitApiEndPoint,\r\n  search,\r\n  token,\r\n  filter\r\n) => {\r\n  return http.get(\r\n    produitApiEndPoint + (search != null ? \"?search=\" + search : \"?\" + filter),\r\n    {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\",\r\n        accept: \"application/json\",\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getFournisseurByID = (produitApiEndPoint, id, token) => {\r\n  return http.get(`${produitApiEndPoint}${id}`, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\nexport const insertFournisseur = async (\r\n  fournisseurApiEndPoint,\r\n  token,\r\n  fournisseur,\r\n  photoFour,\r\n  Adresse,\r\n  Contact\r\n) => {\r\n  const FOUR = await http.post(fournisseurApiEndPoint, fournisseur, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n  });\r\n  photoFour != null &&\r\n    http.patch(`${fournisseurApiEndPoint}${FOUR.data.ID_ROWID}/`, photoFour, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\":\r\n          \"multipart/form-data; boundary=----WebKitFormBoundaryEwxlBBDdYQdWdUgK\",\r\n      },\r\n    });\r\n  Adresse != null &&\r\n    Adresse.New.map(async (dataAdresse) => {\r\n      dataAdresse.RFACINFR = FOUR.data.ID_ROWID;\r\n      await http.post(fournisseurApiEndPoint + \"Adresse/\", dataAdresse, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n          \"Content-Type\": \"application/json\",\r\n          accept: \"application/json\",\r\n        },\r\n      });\r\n    });\r\n  Contact != null &&\r\n    Contact.New.map(async (dataContact) => {\r\n      dataContact.RFCCINFR = FOUR.data.ID_ROWID;\r\n      await http.post(fournisseurApiEndPoint + \"Contact/\", dataContact, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n          \"Content-Type\": \"application/json\",\r\n          accept: \"application/json\",\r\n        },\r\n      });\r\n    });\r\n\r\n  return;\r\n};\r\nexport const updateFournisseur = async (\r\n  fournisseurApiEndPoint,\r\n  four_id,\r\n  token,\r\n  fournisseur,\r\n  adresse,\r\n  contact\r\n  // produitApiEndPoint,\r\n  // prd_id,\r\n  // token,\r\n  // produit\r\n  // SM,\r\n  // VL,\r\n  // files,\r\n  // VV,\r\n  // UL,\r\n  // ASV\r\n) => {\r\n  let fourToSend = new FormData();\r\n  !!fournisseur.RFRCEXT && fourToSend.append(\"RFRCEXT\", fournisseur.RFRCEXT);\r\n  !!fournisseur.RFRLIBL && fourToSend.append(\"RFRLIBL\", fournisseur.RFRLIBL);\r\n  !!fournisseur.RFRLIBC && fourToSend.append(\"RFRLIBC\", fournisseur.RFRLIBC);\r\n  !!fournisseur.RFRETAT && fourToSend.append(\"RFRETAT\", fournisseur.RFRETAT);\r\n  !!fournisseur.RFRTYPE && fourToSend.append(\"RFRTYPE\", fournisseur.RFRTYPE);\r\n  !!fournisseur.RFRDEVISE &&\r\n    fourToSend.append(\"RFRDEVISE\", fournisseur.RFRDEVISE);\r\n  !!fournisseur.RFRPAYS && fourToSend.append(\"RFRPAYS\", fournisseur.RFRPAYS);\r\n  !!fournisseur.RPRIDAnger &&\r\n    fourToSend.append(\"RPRIDAnger\", fournisseur.RPRIDAnger);\r\n  !!fournisseur.RFRLOGO &&\r\n    fourToSend.append(\"RFRLOGO\", fournisseur.RFRLOGO.originFileObj);\r\n  await http.put(`${fournisseurApiEndPoint}${four_id}/`, fourToSend, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\":\r\n        \"multipart/form-data; boundary=----WebKitFormBoundaryEwxlBBDdYQdWdUgK\",\r\n    },\r\n  });\r\n  adresse != null &&\r\n    adresse.New.map(async (dataAdresse, index) => {\r\n      dataAdresse.RFACINFR = four_id;\r\n      await http.post(fournisseurApiEndPoint + \"Adresse/\", dataAdresse, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n          \"Content-Type\": \"application/json\",\r\n          accept: \"application/json\",\r\n        },\r\n      });\r\n    });\r\n  adresse != null &&\r\n    adresse.update.map(async (dataAdresse, index) => {\r\n      await http.put(\r\n        fournisseurApiEndPoint + \"Adresse/\" + dataAdresse.ID_ROWID + \"/\",\r\n        dataAdresse,\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n            \"Content-Type\": \"application/json\",\r\n            accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    });\r\n  adresse != null &&\r\n    adresse.delete.map(async (dataAdresse, index) => {\r\n      await http.delete(\r\n        fournisseurApiEndPoint + \"Adresse/\" + dataAdresse.ID_ROWID,\r\n\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n            \"Content-Type\": \"application/json\",\r\n            accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    });\r\n  contact != null &&\r\n    contact.New.map(async (dataContact, index) => {\r\n      dataContact.RFCCINFR = four_id;\r\n      await http.post(fournisseurApiEndPoint + \"Contact/\", dataContact, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n          \"Content-Type\": \"application/json\",\r\n          accept: \"application/json\",\r\n        },\r\n      });\r\n    });\r\n  contact != null &&\r\n    contact.update.map(async (dataContact, index) => {\r\n      await http.put(\r\n        fournisseurApiEndPoint + \"Contact/\" + dataContact.ID_ROWID + \"/\",\r\n        dataContact,\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n            \"Content-Type\": \"application/json\",\r\n            accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    });\r\n  contact != null &&\r\n    contact.delete.map(async (dataContact, index) => {\r\n      await http.delete(\r\n        fournisseurApiEndPoint + \"Contact/\" + dataContact.ID_ROWID,\r\n\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n            \"Content-Type\": \"application/json\",\r\n            accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    });\r\n  return;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport { Col, Divider, Input, Row, message, ConfigProvider } from \"antd\";\r\nimport {\r\n  Checkbox,\r\n  Form,\r\n  notification,\r\n  Spin,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"dmsui\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { MailOutlined, UserOutlined } from \"@ant-design/icons\";\r\n\r\nimport AvatarUpdate from \"./formulaireComponents/AvatarUpdate\";\r\nimport TabInput from \"./formulaireComponents/TabInput\";\r\nimport VarianteVenteTable from \"./formulaireComponents/VarianteVenteTable\";\r\nimport {\r\n  ActiveDesactiveUser,\r\n  getUserByID,\r\n} from \"../../../DjangoService/userService\";\r\nimport { authApp, userAdvancedSearchPath } from \"../../../config\";\r\nimport { FileUpload } from \"./formulaireComponents/FileUpload\";\r\nimport LogistiqueTable from \"./formulaireComponents/LogistiqueTable\";\r\nimport { validateMessages } from \"../../../Constante\";\r\nimport { connexion } from \"../../../DjangoService/authnService\";\r\nimport {\r\n  getAllSM,\r\n  getAllTVA,\r\n  getProduitByID,\r\n  getUlByPrd,\r\n  insertProduit,\r\n  updateProduit,\r\n} from \"../../../DjangoService/ProduitService\";\r\nimport AssortimentVendable from \"./formulaireComponents/AssortimentVendable\";\r\nimport { getAllSites } from \"../../../DjangoService/SiteService\";\r\nimport AssortimentCommandable from \"./formulaireComponents/AssortimentCommandable\";\r\nimport { getAllfournissuers } from \"../../../DjangoService/FournisseurService\";\r\n\r\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\r\nconst withRouterAndRef = (WrappedComponent) => {\r\n  class InnerComponentWithRef extends React.Component {\r\n    render() {\r\n      const { forwardRef, ...rest } = this.props;\r\n      return <WrappedComponent {...rest} ref={forwardRef} />;\r\n    }\r\n  }\r\n  const ComponentWithRouter = withRouter(InnerComponentWithRef, {\r\n    withRef: true,\r\n  });\r\n  return React.forwardRef((props, ref) => {\r\n    return <ComponentWithRouter {...props} forwardRef={ref} />;\r\n  });\r\n};\r\n\r\nclass Formulaire extends Component {\r\n  static propTypes = {\r\n    prop: PropTypes,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataToSend: {\r\n        UL: {\r\n          New: [],\r\n          update: [],\r\n          delete: [],\r\n        },\r\n        SM: { New: [], update: null, delete: null },\r\n        VL: {\r\n          New: [],\r\n          update: [],\r\n          delete: [],\r\n        },\r\n        ASV: {\r\n          New: [],\r\n          update: [],\r\n          delete: [],\r\n        },\r\n        ASC: {\r\n          New: [],\r\n          update: [],\r\n          delete: [],\r\n        },\r\n        VV: { New: [], update: [], delete: [] },\r\n        files: { New: [], update: [], delete: [] },\r\n        PRD: null,\r\n      },\r\n      AllSM: [],\r\n      AllSites: [],\r\n      AllVV: [],\r\n      AllVL: [],\r\n      AllFour: [],\r\n      AllTVA: [],\r\n      produit: null,\r\n      token: null,\r\n      ListAllUL: [],\r\n      drawerVisible: \"\",\r\n      token: null,\r\n      tabPointDeVente: false,\r\n      tabCommendable: false,\r\n      changecome: false,\r\n      Profiles: [],\r\n      loading: false,\r\n      form: {},\r\n      isLoading: this.props.match.params.id != null ? true : false,\r\n      image: null,\r\n      targetKeys: [],\r\n      update: this.props.match.params.id != null ? false : true,\r\n      defaultValue: null,\r\n\r\n      datas: { US_EMAIL: \"\", US_NOMUSR: \"\", US_PRNUSR: \"\", US_TYPUSR: \"\" },\r\n    };\r\n    this.getRefrechToken = this.getRefrechToken.bind(this);\r\n    this.getToken = this.getToken.bind(this);\r\n  }\r\n\r\n  // async getTarifeBySite(id_site) {\r\n  //   try {\r\n  //     const res = await this.getTarifeBySite(\r\n  //       \"http://localhost:8000/DMERP/v1/Referentiel/Sites/\",\r\n  //       id_site,\r\n  //       !!verifyToken ? verifyToken : this.state.token\r\n  //     );\r\n  //     console.log(\r\n  //       \"succes from api : Produit =>  (getTarifeBySites()) => :\",\r\n  //       res\r\n  //     );\r\n\r\n  //     console.log(\"-------------------fin-GetSites-------------------\");\r\n  //   } catch (error) {\r\n  //     console.log(\"Error from api : Produit =>  getSites  => : \", error);\r\n\r\n  //     if (error == \"Error: Request failed with status code 401\") {\r\n  //       this.props.goTo(\"403\");\r\n  //     } else if (error == \"Error: Network Error\") {\r\n  //       this.props.goTo(\"500\");\r\n  //     }\r\n  //     console.log(\"-------------------fin-GetSites-------------------\");\r\n  //   }\r\n  // }\r\n  formRef = React.createRef();\r\n  formContactRef = React.createRef();\r\n  adressRef = React.createRef();\r\n  setImage(img) {\r\n    this.setState({ image: img });\r\n  }\r\n  activerUpdate() {\r\n    if (this.props.match.params.id != null) {\r\n      this.setState({ update: !this.state.update });\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  onChange = (keys) => {\r\n    this.setState({ targetKeys: keys });\r\n  };\r\n\r\n  onFinish = async (values) => {\r\n    console.log(\"------------------debut-postProduit------------------\");\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n    );\r\n    var loadingOnsubmit = true;\r\n    message.loading(\"Loading..\", loadingOnsubmit);\r\n    try {\r\n      // const rangeTimeValue = values[\"date\"];\r\n\r\n      if (this.props.match.params.id != null) {\r\n        console.log(\"------------------debut-putProduit------------------\");\r\n        console.log(\"update produit => : \", values);\r\n        console.log(\"add+update complext data => : \", this.state.dataToSend);\r\n        values.RPRPHOTO = this.state.image;\r\n\r\n        const res = await updateProduit(\r\n          this.props.service,\r\n          this.props.match.params.id,\r\n          !!verifyToken ? verifyToken : this.state.token,\r\n          values,\r\n          this.state.dataToSend.SM,\r\n          this.state.dataToSend.VL,\r\n          this.state.dataToSend.files,\r\n          this.state.dataToSend.VV,\r\n          this.state.dataToSend.UL,\r\n          this.state.dataToSend.ASV\r\n        );\r\n        loadingOnsubmit = false;\r\n        notification.open({\r\n          message: \"Success\",\r\n          description: \"Le produit a été modifier avec succès.\",\r\n          className: \"custom-class\",\r\n          type: \"success\",\r\n          placement: \"bottomRight\",\r\n          style: {\r\n            width: 400,\r\n          },\r\n        });\r\n        this.props.onFormulaireChange(true);\r\n        this.props.goTo(\"../\" + userAdvancedSearchPath);\r\n      } else {\r\n        let photos = new FormData();\r\n        photos.append(\r\n          \"RPRPHOTO\",\r\n          !!this.state.image ? this.state.image.originFileObj : null\r\n        );\r\n\r\n        console.log(\"add produit => : \", values);\r\n        console.log(\"add SM => : \", this.state.dataToSend);\r\n        const res = await insertProduit(\r\n          this.props.service,\r\n\r\n          !!verifyToken ? verifyToken : this.state.token,\r\n          values,\r\n          photos,\r\n          this.state.dataToSend.SM,\r\n          this.state.dataToSend.VL,\r\n          this.state.dataToSend.files\r\n        );\r\n        loadingOnsubmit = false;\r\n        notification.open({\r\n          message: \"Success\",\r\n          description: \"Le produit a été créé avec succès.\",\r\n          className: \"custom-class\",\r\n          type: \"success\",\r\n          placement: \"bottomRight\",\r\n          style: {\r\n            width: 400,\r\n          },\r\n        });\r\n        this.props.onFormulaireChange(true);\r\n        this.props.goTo(userAdvancedSearchPath);\r\n      }\r\n      console.log(\"------------------debut-postProduit------------------\");\r\n    } catch (error) {\r\n      console.log(\"error2 :\", error);\r\n      this.props.onFormulaireChange(false);\r\n      notification.open({\r\n        message: \"Error\",\r\n        description: \"Le produit n'a pas pu être créé.Veuillez réessayer.\",\r\n        className: \"custom-class\",\r\n        type: \"error\",\r\n        placement: \"bottomRight\",\r\n        style: {\r\n          width: 400,\r\n        },\r\n      });\r\n    }\r\n  };\r\n  getToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    if (value == null) {\r\n      //  window.location.href = authApp;\r\n      console.log(\"tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ token: value });\r\n    console.log(\"tokne from host => :\", this.state.token);\r\n    console.log(\"-------------------fin-GetToken-------------------\");\r\n    await this.getSM();\r\n    await this.getSites();\r\n    await this.getFournisseurs();\r\n    await this.getTva();\r\n    this.props.match.params.id != null && (await this.getDatas());\r\n    this.props.match.params.id != null && (await this.getUL()); // await this.getDataById();\r\n  };\r\n  getRefrechToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetRefrechToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"403\");\r\n    }\r\n    if (value == null) {\r\n      //  window.location.href = authApp;\r\n      console.log(\"Refech tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ Refrech: value });\r\n    console.log(\"Refech tokne from host => :\", this.state.Refrech);\r\n    console.log(\"-------------------fin-GetRefrechToken-------------------\");\r\n    this.props.hostStorage.get(\"access_token\", await this.getToken);\r\n  };\r\n  async getFournisseurs() {\r\n    console.log(\"------------------debut-GetFournisseur------------------\");\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n    );\r\n    try {\r\n      const res = await getAllfournissuers(\r\n        \"http://localhost:8000/DMERP/v1/Referentiel/Fournisseurs/\",\r\n        \"\",\r\n        !!verifyToken ? verifyToken : this.state.token\r\n      );\r\n      console.log(\r\n        \"succes from api : Produit =>  (getFournisseurs()) => :\",\r\n        res\r\n      );\r\n      this.setState({\r\n        AllFour: res.data != null ? res.data : null,\r\n      });\r\n      console.log(\"-------------------fin-GetFournisseur-------------------\");\r\n    } catch (error) {\r\n      console.log(\"Error from api : Produit =>  getFournisseurs  => : \", error);\r\n\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"500\");\r\n      }\r\n      console.log(\"-------------------fin-GetFournisseur-------------------\");\r\n    }\r\n  }\r\n  async getTva() {\r\n    console.log(\"------------------debut-GetTVA------------------\");\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n    );\r\n    try {\r\n      const res = await getAllTVA(\r\n        \"http://localhost:8000/DMERP/v1/Referentiel/TVA/\",\r\n\r\n        !!verifyToken ? verifyToken : this.state.token\r\n      );\r\n      console.log(\"succes from api : Produit =>  (getTVA()) => :\", res);\r\n      this.setState({\r\n        AllTVA: res.data != null ? res.data : null,\r\n      });\r\n      console.log(\"-------------------fin-GetTVA-------------------\");\r\n    } catch (error) {\r\n      console.log(\"Error from api : Produit =>  getTVA  => : \", error);\r\n\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"500\");\r\n      }\r\n      console.log(\"-------------------fin-GetTVA-------------------\");\r\n    }\r\n  }\r\n  async getSites() {\r\n    console.log(\"------------------debut-GetSite------------------\");\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n    );\r\n    try {\r\n      const res = await getAllSites(\r\n        \"http://localhost:8000/DMERP/v1/Referentiel/Sites/\",\r\n        \"\",\r\n        !!verifyToken ? verifyToken : this.state.token\r\n      );\r\n      console.log(\"succes from api : Produit =>  (getSites()) => :\", res);\r\n      this.setState({\r\n        AllSites: res.data != null ? res.data : null,\r\n      });\r\n      console.log(\"-------------------fin-GetSites-------------------\");\r\n    } catch (error) {\r\n      console.log(\"Error from api : Produit =>  getSites  => : \", error);\r\n\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"500\");\r\n      }\r\n      console.log(\"-------------------fin-GetSites-------------------\");\r\n    }\r\n  }\r\n  async getSM() {\r\n    console.log(\r\n      \"------------------debut-GetStructures-Marchandise------------------\"\r\n    );\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n    );\r\n    try {\r\n      const res = await getAllSM(\r\n        this.props.service,\r\n        \"\",\r\n        !!verifyToken ? verifyToken : this.state.token\r\n      );\r\n      console.log(\r\n        \"succes from api : Produit =>  (getStructures-Marchandise()) => :\",\r\n        res\r\n      );\r\n      this.setState({\r\n        AllSM: res.data != null ? res.data : null,\r\n      });\r\n      console.log(\r\n        \"-------------------fin-GetStructures-Marchandise-------------------\"\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"Error from api : Produit =>  getStructures-Marchandise  => : \",\r\n        error\r\n      );\r\n\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"500\");\r\n      }\r\n      console.log(\r\n        \"-------------------fin-GetStructures-Marchandise-------------------\"\r\n      );\r\n    }\r\n  }\r\n  async getUL() {\r\n    console.log(\r\n      \"------------------debut-GetUnité-Logistique------------------\"\r\n    );\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n    );\r\n    try {\r\n      const res = await getUlByPrd(\r\n        this.props.service,\r\n        this.props.match.params.id,\r\n        !!verifyToken ? verifyToken : this.state.token\r\n      );\r\n      console.log(\r\n        \"succes from api : Produit =>  (getUnité-Logistique()) => :\",\r\n        res\r\n      );\r\n      this.setState({\r\n        ListAllUL: res.data != null ? res.data : null,\r\n      });\r\n      console.log(\"ul from formulaire \", this.state.ListAllUL);\r\n      console.log(\"-------------------fin--------------------\");\r\n    } catch (error) {\r\n      console.log(\r\n        \"Error from api : Produit =>  getUnité-Logistique  => : \",\r\n        error\r\n      );\r\n\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"500\");\r\n      }\r\n      console.log(\r\n        \"-------------------fin-GetUnité-Logistique-------------------\"\r\n      );\r\n    }\r\n  }\r\n  async getDatas() {\r\n    console.log(\r\n      \"------------------debut-GetProduit-\" +\r\n        this.props.match.params.id +\r\n        \"------------------\"\r\n    );\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n    );\r\n    try {\r\n      const res = await getProduitByID(\r\n        this.props.service,\r\n        this.props.match.params.id,\r\n        !!verifyToken ? verifyToken : this.state.token\r\n      );\r\n      !!res.data.VV &&\r\n        res.data.VV.map(\r\n          (data, index) =>\r\n            (data.RPVVPHOTO = \"http://localhost:8000\" + data.RPVVPHOTO)\r\n        );\r\n      console.log(\r\n        \"succes from api : Produit =>  (getProduit(\" +\r\n          this.props.match.params.id +\r\n          \")) => :\",\r\n        res\r\n      );\r\n      res.data.ASSVEN != null\r\n        ? (res.data.vendable = true)\r\n        : (res.data.vendable = false);\r\n\r\n      this.setState({\r\n        tabPointDeVente: res.data.vendable,\r\n        defaultValue: res.data != null ? res.data : null,\r\n        AllVV: res.data.VV != null ? res.data.VV : [],\r\n        AllVL: res.data.VL != null ? res.data.VL : [],\r\n        isLoading: false,\r\n      });\r\n      console.log(\r\n        \"-------------------fin-GetProduit-\" +\r\n          this.props.match.params.id +\r\n          \"-------------------\"\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"Error from api : Produit =>  (getProduit(\" +\r\n          this.props.match.params.id +\r\n          \"))  => : \",\r\n        error\r\n      );\r\n\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"500\");\r\n      }\r\n      console.log(\r\n        \"-------------------fin-GetProduit-\" +\r\n          this.props.match.params.id +\r\n          \"-------------------\"\r\n      );\r\n    }\r\n  }\r\n  onSubmit = () => {\r\n    // console.log(\"adress =>\", this.adressRef.current.getDataSource());\r\n    this.formRef.current.submit();\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n    this.formContactRef.current.onReset();\r\n    this.setState({ changecome: false });\r\n    // console.log(this.formRef.current);\r\n  };\r\n  onFill = () => {\r\n    this.formRef.current.setFieldsValue({\r\n      note: \"Hello world!\",\r\n      gender: \"male\",\r\n    });\r\n  };\r\n  async removeElem(dateFin) {\r\n    console.log(\"date fin => \", dateFin);\r\n    try {\r\n      await ActiveDesactiveUser(\r\n        this.props.service,\r\n\r\n        {\r\n          activate: false,\r\n          MUTDFIN: dateFin,\r\n          pk: this.props.match.params.id,\r\n        }\r\n      );\r\n      // deleteUser(this.props.service, this.props.match.params.id);\r\n      this.props.onFormulaireChange(true);\r\n      notification.open({\r\n        message: \"Info\",\r\n        description: \"This user is deleted successfully\",\r\n        className: \"custom-class\",\r\n        type: \"info\",\r\n        placement: \"bottomRight\",\r\n        style: {\r\n          width: 400,\r\n        },\r\n      });\r\n      message\r\n        .loading(\"Loading...\", 0.5)\r\n        .then(() => message.success(\"Finished\", 0.5));\r\n      await delay(750);\r\n\r\n      this.props.goTo(\"../\" + userAdvancedSearchPath);\r\n    } catch (error) {\r\n      console.log(error);\r\n      notification.open({\r\n        message: \"Error\",\r\n        description: \"This user could not be deleted\",\r\n        className: \"custom-class\",\r\n        type: \"error\",\r\n        placement: \"bottomRight\",\r\n        style: {\r\n          width: 400,\r\n        },\r\n      });\r\n    }\r\n  }\r\n  loading(value) {\r\n    this.setState({ loading: value });\r\n  }\r\n  async componentDidMount() {\r\n    this.props.match.params.id != null\r\n      ? this.props.disabelEditButton(false)\r\n      : this.props.disabelEditButton(true);\r\n\r\n    this.props.hostStorage.get(\"refresh_token\", await this.getRefrechToken);\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    if (!this.state.changecome) {\r\n      this.props.onFormulaireChange(false);\r\n      this.setState({ changecome: true });\r\n    }\r\n  };\r\n  enCheckVenduCahnge = (event) => {\r\n    console.log(\"------------------debut-enCheckVenduCahnge------------------\");\r\n    this.setState({ tabPointDeVente: event.target.checked });\r\n    console.log(`tabs point de vente is : ${event.target.checked}`);\r\n    console.log(\"-------------------fin-enCheckVenduCahnge-------------------\");\r\n  };\r\n  enCheckCommandeCahnge = (event) => {\r\n    console.log(\"------------------debut-enCheckVenduCahnge------------------\");\r\n    this.setState({ tabCommendable: event.target.checked });\r\n    console.log(`tabs point de vente is : ${event.target.checked}`);\r\n    console.log(\"-------------------fin-enCheckVenduCahnge-------------------\");\r\n  };\r\n  labelComposant = (label, Icon) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          // backgroundColor: \"#555\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {/* <Icon\r\n          className=\"site-form-item-icon\"\r\n          style={{\r\n            marginRight: \"10px\",\r\n          }}\r\n        />{\" \"} */}\r\n        <Typography\r\n          className={\"text-input-group\"}\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"80px\",\r\n            // color: \"#fff\",\r\n            fontSize: \"14px\",\r\n            fontWeight: \"600\",\r\n          }}\r\n        >\r\n          {label}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div style={{ height: \"100%\", width: \"100%\" }}>\r\n        {!this.state.isLoading && (\r\n          <Spin spinning={this.state.loading} delay={500}>\r\n            <Row\r\n              gutter={(16, 0)}\r\n              justify=\"center\"\r\n              style={{ width: this.state.drawerVisible }}\r\n            >\r\n              {/* 1435px */}\r\n              {/* <Button onClick={() => this.onSubmit()}>add</Button> */}\r\n              <Col span={this.state.drawerVisible == \"\" ? 18 : 24}>\r\n                <Row\r\n                  gutter={(16, 0)}\r\n                  justify=\"center\"\r\n                  align=\"stretch\"\r\n                  wrap={false}\r\n                >\r\n                  <Col\r\n                    // flex=\"auto\"\r\n                    span={24}\r\n                    style={{\r\n                      padding: \"0px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                  >\r\n                    <Divider\r\n                      className={\"border-main-content\"}\r\n                      orientation=\"left\"\r\n                      style={{\r\n                        margin: \"-12px  -2px -12px 0px\",\r\n                      }}\r\n                    >\r\n                      Information\r\n                    </Divider>{\" \"}\r\n                    <Row\r\n                      // gutter={[20, 20]}\r\n                      align=\"stretch\"\r\n                      justify=\"space-between\"\r\n                      className={\"border-main-content-2\"}\r\n                      style={{\r\n                        marginRight: \"0px\",\r\n                        marginLeft: \"0px\",\r\n                        padding: \"22px 22px\",\r\n                        borderRadius: \"3px\",\r\n                        borderWidth: \"0px 1px 1px 1px\",\r\n                        borderStyle: \"solid\",\r\n                      }}\r\n                    >\r\n                      <Col span={24}>\r\n                        <ConfigProvider\r\n                          form={{ validateMessages: validateMessages.fr }}\r\n                        >\r\n                          <Form\r\n                            ref={this.formRef}\r\n                            name=\"control-ref\"\r\n                            initialValues={{ ...this.state.defaultValue }}\r\n                            onFinish={this.onFinish}\r\n                            // encType=\"multipart/form-data\"\r\n                          >\r\n                            <Row\r\n                              gutter={[20, 20]}\r\n                              justify=\"center\"\r\n                              align=\"stretch\"\r\n                              wrap={false}\r\n                            >\r\n                              <Col flex={\"auto\"}>\r\n                                <Row\r\n                                  gutter={[10, 0]}\r\n                                  align=\"stretch\"\r\n                                  justify=\"space-between\"\r\n                                >\r\n                                  <Col span={11}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Form.Item\r\n                                          name={\"RPRCEXT\"}\r\n                                          hasFeedback\r\n                                          rules={[\r\n                                            {\r\n                                              required: true,\r\n                                              max: 50,\r\n                                            },\r\n                                          ]}\r\n                                        >\r\n                                          {/* {this.state.update ? ( */}\r\n                                          <Input\r\n                                            addonBefore={this.labelComposant(\r\n                                              \"Code\",\r\n                                              UserOutlined\r\n                                            )}\r\n                                            placeholder=\"Entrer le code...\"\r\n                                            readOnly={\r\n                                              this.state.update ? false : true\r\n                                            }\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        </Form.Item>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>\r\n                                  <Col span={13}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Form.Item\r\n                                          name={\"RPRLIBC\"}\r\n                                          hasFeedback\r\n                                          rules={[\r\n                                            {\r\n                                              required: false,\r\n                                              max: 50,\r\n                                            },\r\n                                          ]}\r\n                                        >\r\n                                          <Input\r\n                                            addonBefore={this.labelComposant(\r\n                                              \"Acronyme\",\r\n                                              MailOutlined\r\n                                            )}\r\n                                            placeholder=\"Entrer l'acronyme...\"\r\n                                            readOnly={\r\n                                              this.state.update ? false : true\r\n                                            }\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        </Form.Item>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>{\" \"}\r\n                                  <Col span={14}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Form.Item\r\n                                          name={\"RPRLIBL\"}\r\n                                          hasFeedback\r\n                                          rules={[\r\n                                            {\r\n                                              required: false,\r\n                                              max: 50,\r\n                                            },\r\n                                          ]}\r\n                                        >\r\n                                          <Input\r\n                                            addonBefore={this.labelComposant(\r\n                                              \"Libellé\",\r\n                                              MailOutlined\r\n                                            )}\r\n                                            placeholder=\"Entrer le libellé...\"\r\n                                            readOnly={\r\n                                              this.state.update ? false : true\r\n                                            }\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        </Form.Item>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>{\" \"}\r\n                                  <Col\r\n                                    span={5}\r\n                                    style={{\r\n                                      display: \"flex\",\r\n                                      alignContent: \"start\",\r\n                                      flexWrap: \"wrap\",\r\n                                    }}\r\n                                  >\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Form.Item\r\n                                          name={\"commandable\"}\r\n                                          valuePropName=\"checked\"\r\n                                        >\r\n                                          <Checkbox\r\n                                            onChange={\r\n                                              this.enCheckCommandeCahnge\r\n                                            }\r\n                                          >\r\n                                            Peut être acheté.\r\n                                          </Checkbox>\r\n                                        </Form.Item>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>\r\n                                  <Col\r\n                                    span={5}\r\n                                    style={{\r\n                                      display: \"flex\",\r\n                                      alignContent: \"start\",\r\n                                      flexWrap: \"wrap\",\r\n                                    }}\r\n                                  >\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Form.Item\r\n                                          name={\"vendable\"}\r\n                                          valuePropName=\"checked\"\r\n                                        >\r\n                                          <Checkbox\r\n                                            onChange={this.enCheckVenduCahnge}\r\n                                          >\r\n                                            ​Peut être vendu.\r\n                                          </Checkbox>\r\n                                        </Form.Item>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>\r\n                                  <Col span={24}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Form.Item\r\n                                          name={\"RPRDSC\"}\r\n                                          hasFeedback\r\n                                          rules={[\r\n                                            {\r\n                                              required: false,\r\n                                              max: 2024,\r\n                                            },\r\n                                          ]}\r\n                                        >\r\n                                          <Input.TextArea\r\n                                            addonBefore={this.labelComposant(\r\n                                              \"Description\",\r\n                                              UserOutlined\r\n                                            )}\r\n                                            placeholder=\"Entrer le description...\"\r\n                                            rows={4}\r\n                                            readOnly={\r\n                                              this.state.update ? false : true\r\n                                            }\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        </Form.Item>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>{\" \"}\r\n                              <Col flex={\"200px\"}>\r\n                                <Row gutter={[0, 0]} align=\"stretch\">\r\n                                  <Col flex=\"auto\">\r\n                                    <AvatarUpdate\r\n                                      setImage={(img) => this.setImage(img)}\r\n                                      defaultValue={\r\n                                        this.state.defaultValue != null\r\n                                          ? this.state.defaultValue.RPRPHOTO\r\n                                          : null\r\n                                      }\r\n                                      readOnly={\r\n                                        this.state.update ? false : true\r\n                                      }\r\n                                    />\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>{\" \"}\r\n                            </Row>\r\n                            <div>\r\n                              <Tabs\r\n                                type=\"card\"\r\n                                className=\"tabs-formulaire dms-tabs\"\r\n                              >\r\n                                <Tabs.TabPane\r\n                                  tab={<Tab title={\"Donnée Générale\"} />}\r\n                                  key=\"1\"\r\n                                >\r\n                                  <div\r\n                                    className={\"template-tabs-panel\"}\r\n                                    style={{\r\n                                      padding: \"15px\",\r\n                                      height: \"100%\",\r\n                                      border: \"1px solid #eee\",\r\n                                      borderTop: \"0px\",\r\n                                    }}\r\n                                  >\r\n                                    <TabInput\r\n                                      setNewSM={(datas) => {\r\n                                        const { New } =\r\n                                          this.state.dataToSend.SM;\r\n                                        New.push(datas);\r\n                                        console.log(\r\n                                          \"data a envoyer a l'api => \",\r\n                                          this.state.dataToSend\r\n                                        );\r\n                                      }}\r\n                                      AllSM={this.state.AllSM}\r\n                                      showDrawer={this.props.showDrawer}\r\n                                      closeDrawer={() =>\r\n                                        this.props.closeDrawer()\r\n                                      }\r\n                                      setSiseForm={(width) =>\r\n                                        this.setState({ drawerVisible: width })\r\n                                      }\r\n                                      setDrawerState={(\r\n                                        titre,\r\n                                        content,\r\n                                        width,\r\n                                        enClose\r\n                                      ) =>\r\n                                        this.props.setDrawerState(\r\n                                          titre,\r\n                                          content,\r\n                                          width,\r\n                                          () => enClose()\r\n                                        )\r\n                                      }\r\n                                      update={this.state.update}\r\n                                      ref={this.formContactRef}\r\n                                      handleInputChange={this.handleInputChange}\r\n                                    />\r\n                                  </div>\r\n                                </Tabs.TabPane>{\" \"}\r\n                                <Tabs.TabPane\r\n                                  tab={<Tab title={\"Logistique\"} />}\r\n                                  key=\"2\"\r\n                                >\r\n                                  <div\r\n                                    className={\"template-tabs-panel\"}\r\n                                    style={{\r\n                                      height: \"100%\",\r\n                                      border: \"1px solid #eee\",\r\n                                      borderTop: \"0px\",\r\n                                    }}\r\n                                  >\r\n                                    <LogistiqueTable\r\n                                      setNewVL={(VL, ULs) => {\r\n                                        const NewVL =\r\n                                          this.state.dataToSend.VL.New;\r\n                                        NewVL.push(VL);\r\n                                        const AllVL = this.state.AllVL;\r\n                                        AllVL.push(VL);\r\n                                        console.log(\r\n                                          \"data a envoyer a l'api => \",\r\n                                          this.state.dataToSend\r\n                                        );\r\n                                      }}\r\n                                      setNewUL={(UL) => {\r\n                                        if (UL.RPULCINVL != null) {\r\n                                          const NewUL =\r\n                                            this.state.dataToSend.UL.New;\r\n                                          NewUL.push(UL);\r\n                                          console.log(\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        } else {\r\n                                          const NewVL =\r\n                                            this.state.dataToSend.VL.New;\r\n                                          let VLIndex = NewVL.findIndex(\r\n                                            ({ key }) => key === UL.VL_key\r\n                                          );\r\n                                          NewVL[VLIndex].UL.push(UL);\r\n                                          console.log(\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        }\r\n                                      }}\r\n                                      setUpdateUL={(UL) => {\r\n                                        if (UL.ID_ROWID != null) {\r\n                                          const updateUL =\r\n                                            this.state.dataToSend.UL.update;\r\n                                          updateUL.push(UL);\r\n                                          console.log(\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        } else {\r\n                                          const VL =\r\n                                            this.state.dataToSend.VL.New;\r\n                                          let VLIndex = VL.findIndex(\r\n                                            ({ key }) => key === UL.VL_key\r\n                                          );\r\n                                          console.log(VL[VLIndex]);\r\n                                          VL[VLIndex].UL[UL.key] = UL;\r\n                                          console.log(\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        }\r\n                                      }}\r\n                                      setDeleteUL={(UL) => {\r\n                                        if (UL.ID_ROWID != null) {\r\n                                          const deleteUL =\r\n                                            this.state.dataToSend.UL.delete;\r\n                                          deleteUL.push(UL);\r\n                                          console.log(\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        } else {\r\n                                          const VL =\r\n                                            this.state.dataToSend.VL.New;\r\n                                          let VLIndex = VL.findIndex(\r\n                                            ({ key }) => key === UL.VL_key\r\n                                          );\r\n                                          console.log(VL[VLIndex]);\r\n                                          VL[VLIndex].UL = VL[\r\n                                            VLIndex\r\n                                          ].UL.filter(\r\n                                            (item) => item.key !== UL.key\r\n                                          );\r\n                                          console.log(\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        }\r\n                                      }}\r\n                                      setDeleteVL={(data) => {\r\n                                        if (data.ID_ROWID != null) {\r\n                                          const deleteVL =\r\n                                            this.state.dataToSend.VL.delete;\r\n                                          deleteVL.push(data);\r\n                                          console.log(\r\n                                            \"data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        } else {\r\n                                          const deleteNewVL =\r\n                                            this.state.dataToSend.VL;\r\n\r\n                                          deleteNewVL.New =\r\n                                            deleteNewVL.New.filter(\r\n                                              (item) => item.key !== data.key\r\n                                            );\r\n\r\n                                          console.log(\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        }\r\n                                      }}\r\n                                      setUpdateVL={(data, values) => {\r\n                                        if (data.ID_ROWID != null) {\r\n                                          const updateVL =\r\n                                            this.state.dataToSend.VL.update;\r\n                                          let result = updateVL.findIndex(\r\n                                            ({ ID_ROWID }) =>\r\n                                              ID_ROWID === data.ID_ROWID\r\n                                          );\r\n                                          if (result == -1) {\r\n                                            updateVL.push({\r\n                                              ...data,\r\n                                              ...values,\r\n                                            });\r\n                                          } else {\r\n                                            updateVL[result] = {\r\n                                              ...data,\r\n                                              ...values,\r\n                                            };\r\n                                          }\r\n                                          console.log(\r\n                                            result,\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        } else {\r\n                                          const updateNewVL =\r\n                                            this.state.dataToSend.VL.New;\r\n                                          var result = updateNewVL.findIndex(\r\n                                            ({ key }) => key === data.key\r\n                                          );\r\n                                          if (result != -1) {\r\n                                            updateNewVL[result] = {\r\n                                              ...data,\r\n                                              ...values,\r\n                                            };\r\n                                          }\r\n                                          console.log(\r\n                                            result,\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        }\r\n                                      }}\r\n                                      setListeAllUl={(Uls) => {\r\n                                        const { ListAllUL } = this.state;\r\n                                        Uls.map((Ul) => ListAllUL.push(Ul));\r\n                                        console.log(\r\n                                          \"Listes de toutes les ULs=> \",\r\n                                          this.state.ListAllUL\r\n                                        );\r\n                                      }}\r\n                                      showDrawer={this.props.showDrawer}\r\n                                      closeDrawer={() =>\r\n                                        this.props.closeDrawer()\r\n                                      }\r\n                                      setSiseForm={(width) =>\r\n                                        this.setState({ drawerVisible: width })\r\n                                      }\r\n                                      setDrawerState={(\r\n                                        titre,\r\n                                        content,\r\n                                        width,\r\n                                        enClose\r\n                                      ) =>\r\n                                        this.props.setDrawerState(\r\n                                          titre,\r\n                                          content,\r\n                                          width,\r\n                                          () => enClose()\r\n                                        )\r\n                                      }\r\n                                      ref={this.adressRef}\r\n                                      update={this.state.update}\r\n                                      datasource={\r\n                                        this.state.defaultValue != null\r\n                                          ? this.state.defaultValue.VL\r\n                                          : null\r\n                                      }\r\n                                    />\r\n                                  </div>\r\n                                </Tabs.TabPane>\r\n                                <Tabs.TabPane\r\n                                  tab={<Tab title={\"Variante de vente\"} />}\r\n                                  key=\"3\"\r\n                                >\r\n                                  <div\r\n                                    className={\"template-tabs-panel\"}\r\n                                    style={{\r\n                                      height: \"100%\",\r\n                                      border: \"1px solid #eee\",\r\n                                      borderTop: \"0px\",\r\n                                    }}\r\n                                  >\r\n                                    <VarianteVenteTable\r\n                                      ListAllUL={this.state.ListAllUL}\r\n                                      ListUL={this.state.dataToSend.VL.New}\r\n                                      setNewVL={(VV) => {\r\n                                        VV.ASV = [];\r\n                                        const { New } =\r\n                                          this.state.dataToSend.VL;\r\n                                        const NewVV =\r\n                                          this.state.dataToSend.VV.New;\r\n                                        const AllVV = this.state.AllVV;\r\n                                        VV.RPVVCINUL.UL != null\r\n                                          ? New[VV.RPVVCINUL.VL].UL[\r\n                                              VV.RPVVCINUL.UL\r\n                                            ].VV.push(VV)\r\n                                          : NewVV.push(VV);\r\n                                        VV.id =\r\n                                          VV.RPVVCINUL.UL != null\r\n                                            ? New[VV.RPVVCINUL.VL].UL[\r\n                                                VV.RPVVCINUL.UL\r\n                                              ].VV.length - 1\r\n                                            : NewVV.length - 1;\r\n                                        AllVV.push(VV);\r\n                                        console.log(\r\n                                          \"data a envoyer a l'api => \",\r\n                                          this.state.dataToSend\r\n                                        );\r\n                                      }}\r\n                                      setDeleteVV={(data) => {\r\n                                        if (data.ID_ROWID != null) {\r\n                                          const deleteVV =\r\n                                            this.state.dataToSend.VV.delete;\r\n                                          deleteVV.push(data);\r\n                                          console.log(\r\n                                            \"data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        } else if (\r\n                                          data.RPVVCINUL != null &&\r\n                                          data.RPVVCINUL.VL != null\r\n                                        ) {\r\n                                          const deleteNewVV =\r\n                                            this.state.dataToSend.VL.New[\r\n                                              data.RPVVCINUL.VL\r\n                                            ].UL[data.RPVVCINUL.UL];\r\n                                          deleteNewVV.VV =\r\n                                            deleteNewVV.VV.filter(\r\n                                              (item) => item.key !== data.key\r\n                                            );\r\n\r\n                                          console.log(\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        } else {\r\n                                          const deleteNewVV =\r\n                                            this.state.dataToSend.VV;\r\n\r\n                                          deleteNewVV.New =\r\n                                            deleteNewVV.New.filter(\r\n                                              (item) => item.key !== data.key\r\n                                            );\r\n\r\n                                          console.log(\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        }\r\n                                      }}\r\n                                      setUpdateVV={(data, values) => {\r\n                                        if (data.ID_ROWID != null) {\r\n                                          const updateVV =\r\n                                            this.state.dataToSend.VV.update;\r\n                                          let result = updateVV.findIndex(\r\n                                            ({ ID_ROWID }) =>\r\n                                              ID_ROWID === data.ID_ROWID\r\n                                          );\r\n                                          if (result == -1) {\r\n                                            updateVV.push({\r\n                                              ...data,\r\n                                              ...values,\r\n                                            });\r\n                                          } else {\r\n                                            updateVV[result] = {\r\n                                              ...data,\r\n                                              ...values,\r\n                                            };\r\n                                          }\r\n                                          console.log(\r\n                                            result,\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        } else if (\r\n                                          data.RPVVCINUL != null &&\r\n                                          data.RPVVCINUL.VL != null\r\n                                        ) {\r\n                                          const updateNewVV =\r\n                                            this.state.dataToSend.VL.New;\r\n                                          console.log(\r\n                                            \"afficheg avant karita 3odma data.RPVVCINUL\",\r\n                                            data.RPVVCINUL,\r\n                                            updateNewVV[data.RPVVCINUL.VL]\r\n                                          );\r\n                                          var result = updateNewVV[\r\n                                            data.RPVVCINUL.VL\r\n                                          ].UL[data.RPVVCINUL.UL].VV.findIndex(\r\n                                            ({ key }) => key === data.key\r\n                                          );\r\n                                          if (result != -1) {\r\n                                            updateNewVV[data.RPVVCINUL.VL].UL[\r\n                                              data.RPVVCINUL.UL\r\n                                            ].VV[result] = {\r\n                                              ...data,\r\n                                              ...values,\r\n                                            };\r\n                                          }\r\n                                          console.log(\r\n                                            result,\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                          // console.log(\r\n                                          //   \"data to send => \",\r\n                                          //   this.state.dataToSend\r\n                                          // );\r\n                                          // console.log(\r\n                                          //   \"update vv DANS new UL : => \",\r\n                                          //   {\r\n                                          //     ...data,\r\n                                          //     ...values,\r\n                                          //   }\r\n                                          // );\r\n                                        } else {\r\n                                          const updateNewVV =\r\n                                            this.state.dataToSend.VV.New;\r\n                                          var result = updateNewVV.findIndex(\r\n                                            ({ key }) => key === data.key\r\n                                          );\r\n                                          if (result != -1) {\r\n                                            updateNewVV[result] = {\r\n                                              ...data,\r\n                                              ...values,\r\n                                            };\r\n                                          }\r\n                                          console.log(\r\n                                            result,\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                          // console.log(\r\n                                          //   \"data to send => \",\r\n                                          //   this.state.dataToSend\r\n                                          // );\r\n                                          // console.log(\"update vv new : => \", {\r\n                                          //   ...data,\r\n                                          //   ...values,\r\n                                          // });\r\n                                        }\r\n                                      }}\r\n                                      showDrawer={this.props.showDrawer}\r\n                                      closeDrawer={() =>\r\n                                        this.props.closeDrawer()\r\n                                      }\r\n                                      setSiseForm={(width) =>\r\n                                        this.setState({ drawerVisible: width })\r\n                                      }\r\n                                      setDrawerState={(\r\n                                        titre,\r\n                                        content,\r\n                                        width,\r\n                                        enClose\r\n                                      ) =>\r\n                                        this.props.setDrawerState(\r\n                                          titre,\r\n                                          content,\r\n                                          width,\r\n                                          () => enClose()\r\n                                        )\r\n                                      }\r\n                                      ref={this.adressRef}\r\n                                      updateAdress={this.state.update}\r\n                                      update={this.state.update}\r\n                                      datasource={\r\n                                        this.state.defaultValue != null\r\n                                          ? this.state.defaultValue.VV\r\n                                          : null\r\n                                      }\r\n                                    />\r\n                                  </div>\r\n                                </Tabs.TabPane>\r\n                                <Tabs.TabPane\r\n                                  tab={<Tab title={\"Fichier\"} />}\r\n                                  key=\"4\"\r\n                                >\r\n                                  <div\r\n                                    className={\"template-tabs-panel\"}\r\n                                    style={{\r\n                                      height: \"100%\",\r\n                                      border: \"1px solid #eee\",\r\n                                      borderTop: \"0px\",\r\n                                    }}\r\n                                  >\r\n                                    <FileUpload\r\n                                      ListFiles={\r\n                                        !!this.state.defaultValue\r\n                                          ? this.state.defaultValue.Files\r\n                                          : []\r\n                                      }\r\n                                      setDeleteFiles={(file) => {\r\n                                        if (file.ID_ROWID != null) {\r\n                                          const files =\r\n                                            this.state.dataToSend.files;\r\n                                          files.delete.push(file);\r\n                                          console.log(\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        } else {\r\n                                          const deleteNewFile =\r\n                                            this.state.dataToSend.files;\r\n                                          deleteNewFile.New =\r\n                                            deleteNewFile.New.filter(\r\n                                              (item) => item.key !== file.key\r\n                                            );\r\n                                          console.log(\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        }\r\n                                      }}\r\n                                      setNewFiles={(file) => {\r\n                                        const { New } =\r\n                                          this.state.dataToSend.files;\r\n                                        // file.key = New.length;\r\n                                        New.push(file);\r\n\r\n                                        console.log(\r\n                                          \"data a envoyer a l'api => \",\r\n                                          this.state.dataToSend\r\n                                        );\r\n                                      }}\r\n                                      ref={this.adressRef}\r\n                                      updateAdress={this.state.update}\r\n                                      datasource={\r\n                                        this.state.defaultValue != null\r\n                                          ? this.state.defaultValue.contact !=\r\n                                            null\r\n                                            ? this.state.defaultValue.contact[0]\r\n                                                .Adresses\r\n                                            : null\r\n                                          : null\r\n                                      }\r\n                                    />\r\n                                  </div>\r\n                                </Tabs.TabPane>\r\n                                {this.state.tabPointDeVente && (\r\n                                  <Tabs.TabPane\r\n                                    tab={<Tab title={\"Ventes\"} />}\r\n                                    key=\"5\"\r\n                                  >\r\n                                    <div\r\n                                      className={\"template-tabs-panel\"}\r\n                                      style={{\r\n                                        height: \"100%\",\r\n                                        border: \"1px solid #eee\",\r\n                                        borderTop: \"0px\",\r\n                                      }}\r\n                                    >\r\n                                      <AssortimentVendable\r\n                                        AllSites={this.state.AllSites}\r\n                                        AllVV={this.state.AllVV}\r\n                                        setNewASV={(ASV) => {\r\n                                          if (ASV.RAVCINVV != null) {\r\n                                            const NewASV =\r\n                                              this.state.dataToSend.ASV;\r\n                                            NewASV.New.push(ASV);\r\n                                            console.log(\r\n                                              \"data a envoyer a l'api => \",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          } else if (ASV.VL != null) {\r\n                                            const NewVL =\r\n                                              this.state.dataToSend.VL.New;\r\n                                            console.log(\"allVl=> : \", NewVL);\r\n                                            console.log(\"asv=> : \", ASV);\r\n                                            NewVL[ASV.VL].UL[ASV.UL].VV[\r\n                                              ASV.VV\r\n                                            ].ASV.push(ASV);\r\n                                            console.log(\r\n                                              \"data a envoyer a l'api => \",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          } else {\r\n                                            const NewVV =\r\n                                              this.state.dataToSend.VV;\r\n                                            NewVV.New[ASV.VV].ASV.push(ASV);\r\n                                            console.log(\r\n                                              \"data a envoyer a l'api => \",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          }\r\n                                        }}\r\n                                        setNewVL={(VL, ULs) => {\r\n                                          const NewVL =\r\n                                            this.state.dataToSend.VL.New;\r\n                                          NewVL.push(VL);\r\n\r\n                                          console.log(\r\n                                            \"data a envoyer a l'api => \",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        }}\r\n                                        setNewUL={(UL) => {\r\n                                          if (UL.RPULCINVL != null) {\r\n                                            const NewUL =\r\n                                              this.state.dataToSend.UL.New;\r\n                                            NewUL.push(UL);\r\n                                            console.log(\r\n                                              \", data to send => :\",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          } else {\r\n                                            const NewVL =\r\n                                              this.state.dataToSend.VL.New;\r\n                                            let VLIndex = NewVL.findIndex(\r\n                                              ({ key }) => key === UL.VL_key\r\n                                            );\r\n                                            NewVL[VLIndex].UL.push(UL);\r\n                                            console.log(\r\n                                              \", data to send => :\",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          }\r\n                                        }}\r\n                                        setUpdateUL={(UL) => {\r\n                                          if (UL.ID_ROWID != null) {\r\n                                            const updateUL =\r\n                                              this.state.dataToSend.UL.update;\r\n                                            updateUL.push(UL);\r\n                                            console.log(\r\n                                              \", data to send => :\",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          } else {\r\n                                            const VL =\r\n                                              this.state.dataToSend.VL.New;\r\n                                            let VLIndex = VL.findIndex(\r\n                                              ({ key }) => key === UL.VL_key\r\n                                            );\r\n                                            console.log(VL[VLIndex]);\r\n                                            VL[VLIndex].UL[UL.key] = UL;\r\n                                            console.log(\r\n                                              \", data to send => :\",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          }\r\n                                        }}\r\n                                        setDeleteUL={(UL) => {\r\n                                          if (UL.ID_ROWID != null) {\r\n                                            const deleteUL =\r\n                                              this.state.dataToSend.UL.delete;\r\n                                            deleteUL.push(UL);\r\n                                            console.log(\r\n                                              \", data to send => :\",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          } else {\r\n                                            const VL =\r\n                                              this.state.dataToSend.VL.New;\r\n                                            let VLIndex = VL.findIndex(\r\n                                              ({ key }) => key === UL.VL_key\r\n                                            );\r\n                                            console.log(VL[VLIndex]);\r\n                                            VL[VLIndex].UL = VL[\r\n                                              VLIndex\r\n                                            ].UL.filter(\r\n                                              (item) => item.key !== UL.key\r\n                                            );\r\n                                            console.log(\r\n                                              \", data to send => :\",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          }\r\n                                        }}\r\n                                        setDeleteVL={(data) => {\r\n                                          if (data.ID_ROWID != null) {\r\n                                            const deleteVL =\r\n                                              this.state.dataToSend.ASV.delete;\r\n                                            deleteVL.push(data);\r\n                                            console.log(\r\n                                              \"data to send => :\",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          } else {\r\n                                            const deleteNewVL =\r\n                                              this.state.dataToSend.VL;\r\n\r\n                                            deleteNewVL.New[data.VL].UL[\r\n                                              data.UL\r\n                                            ].VV[data.VV].ASV = deleteNewVL.New[\r\n                                              data.VL\r\n                                            ].UL[data.UL].VV[\r\n                                              data.VV\r\n                                            ].ASV.filter(\r\n                                              (item) => item.key == data.key\r\n                                            );\r\n                                            console.log(\r\n                                              \"win el mochkila : \",\r\n                                              deleteNewVL.New[data.VL].UL[\r\n                                                data.UL\r\n                                              ].VV[data.VV].ASV.filter(\r\n                                                (item) => item.key !== data.key\r\n                                              )\r\n                                            );\r\n                                            console.log(\r\n                                              \", data to send => :\",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          }\r\n                                        }}\r\n                                        setUpdateVL={(data, values) => {\r\n                                          if (data.ID_ROWID != null) {\r\n                                            const updateVL =\r\n                                              this.state.dataToSend.ASV.update;\r\n                                            let result = updateVL.findIndex(\r\n                                              ({ ID_ROWID }) =>\r\n                                                ID_ROWID === data.ID_ROWID\r\n                                            );\r\n                                            if (result == -1) {\r\n                                              updateVL.push({\r\n                                                ...data,\r\n                                                ...values,\r\n                                              });\r\n                                            } else {\r\n                                              updateVL[result] = {\r\n                                                ...data,\r\n                                                ...values,\r\n                                              };\r\n                                            }\r\n                                            console.log(\r\n                                              result,\r\n                                              \", data to send => :\",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          } else {\r\n                                            const updateNewVL =\r\n                                              this.state.dataToSend.VL.New;\r\n                                            // var result = updateNewVL.findIndex(\r\n                                            //   ({ key }) => key === data.key\r\n                                            // );\r\n                                            // if (result != -1) {\r\n                                            updateNewVL[data.VL].UL[data.UL].VV[\r\n                                              data.VV\r\n                                            ].ASV = {\r\n                                              ...data,\r\n                                              ...values,\r\n                                            };\r\n                                            // }\r\n                                            console.log(\r\n                                              \"data to send => :\",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          }\r\n                                        }}\r\n                                        setListeAllUl={(Uls) => {\r\n                                          const { ListAllUL } = this.state;\r\n                                          Uls.map((Ul) => ListAllUL.push(Ul));\r\n                                          console.log(\r\n                                            \"Listes de toutes les ULs=> \",\r\n                                            this.state.ListAllUL\r\n                                          );\r\n                                        }}\r\n                                        showDrawer={this.props.showDrawer}\r\n                                        closeDrawer={() =>\r\n                                          this.props.closeDrawer()\r\n                                        }\r\n                                        setSiseForm={(width) =>\r\n                                          this.setState({\r\n                                            drawerVisible: width,\r\n                                          })\r\n                                        }\r\n                                        setDrawerState={(\r\n                                          titre,\r\n                                          content,\r\n                                          width,\r\n                                          enClose\r\n                                        ) =>\r\n                                          this.props.setDrawerState(\r\n                                            titre,\r\n                                            content,\r\n                                            width,\r\n                                            () => enClose()\r\n                                          )\r\n                                        }\r\n                                        ref={this.adressRef}\r\n                                        update={this.state.update}\r\n                                        datasource={\r\n                                          this.state.defaultValue != null\r\n                                            ? this.state.defaultValue.ASSVEN\r\n                                            : null\r\n                                        }\r\n                                      />\r\n                                    </div>\r\n                                  </Tabs.TabPane>\r\n                                )}\r\n                                {this.state.tabCommendable && (\r\n                                  <Tabs.TabPane\r\n                                    tab={<Tab title={\"Achats\"} />}\r\n                                    key=\"6\"\r\n                                  >\r\n                                    <div\r\n                                      className={\"template-tabs-panel\"}\r\n                                      style={{\r\n                                        height: \"100%\",\r\n                                        border: \"1px solid #eee\",\r\n                                        borderTop: \"0px\",\r\n                                      }}\r\n                                    >\r\n                                      <AssortimentCommandable\r\n                                        AllSites={this.state.AllSites}\r\n                                        AllVL={this.state.AllVL}\r\n                                        AllVV={this.state.AllVV}\r\n                                        AllFour={this.state.AllFour}\r\n                                        AllTVA={this.state.AllTVA}\r\n                                        setNewASV={(ASV) => {\r\n                                          if (ASV.RAVCINVV != null) {\r\n                                            const NewASC =\r\n                                              this.state.dataToSend.ASC;\r\n                                            NewASC.New.push(ASV);\r\n                                            console.log(\r\n                                              \"data a envoyer a l'api => \",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          } else {\r\n                                            const NewVL =\r\n                                              this.state.dataToSend.VL.New;\r\n                                            console.log(\"allVl=> : \", NewVL);\r\n                                            console.log(\"asv=> : \", ASV);\r\n                                            NewVL[ASV.VL].ASC.push(ASV);\r\n                                            console.log(\r\n                                              \"data a envoyer a l'api => \",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          }\r\n                                        }}\r\n                                        setNewVL={(VL, ULs) => {\r\n                                          const NewVL =\r\n                                            this.state.dataToSend.VL.New;\r\n                                          NewVL.push(VL);\r\n\r\n                                          console.log(\r\n                                            \"data a envoyer a l'api => \",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        }}\r\n                                        setNewUL={(UL) => {\r\n                                          if (UL.RPULCINVL != null) {\r\n                                            const NewUL =\r\n                                              this.state.dataToSend.UL.New;\r\n                                            NewUL.push(UL);\r\n                                            console.log(\r\n                                              \", data to send => :\",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          } else {\r\n                                            const NewVL =\r\n                                              this.state.dataToSend.VL.New;\r\n                                            let VLIndex = NewVL.findIndex(\r\n                                              ({ key }) => key === UL.VL_key\r\n                                            );\r\n                                            NewVL[VLIndex].UL.push(UL);\r\n                                            console.log(\r\n                                              \", data to send => :\",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          }\r\n                                        }}\r\n                                        setUpdateUL={(UL) => {\r\n                                          if (UL.ID_ROWID != null) {\r\n                                            const updateUL =\r\n                                              this.state.dataToSend.UL.update;\r\n                                            updateUL.push(UL);\r\n                                            console.log(\r\n                                              \", data to send => :\",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          } else {\r\n                                            const VL =\r\n                                              this.state.dataToSend.VL.New;\r\n                                            let VLIndex = VL.findIndex(\r\n                                              ({ key }) => key === UL.VL_key\r\n                                            );\r\n                                            console.log(VL[VLIndex]);\r\n                                            VL[VLIndex].UL[UL.key] = UL;\r\n                                            console.log(\r\n                                              \", data to send => :\",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          }\r\n                                        }}\r\n                                        setDeleteUL={(UL) => {\r\n                                          if (UL.ID_ROWID != null) {\r\n                                            const deleteUL =\r\n                                              this.state.dataToSend.UL.delete;\r\n                                            deleteUL.push(UL);\r\n                                            console.log(\r\n                                              \", data to send => :\",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          } else {\r\n                                            const VL =\r\n                                              this.state.dataToSend.VL.New;\r\n                                            let VLIndex = VL.findIndex(\r\n                                              ({ key }) => key === UL.VL_key\r\n                                            );\r\n                                            console.log(VL[VLIndex]);\r\n                                            VL[VLIndex].UL = VL[\r\n                                              VLIndex\r\n                                            ].UL.filter(\r\n                                              (item) => item.key !== UL.key\r\n                                            );\r\n                                            console.log(\r\n                                              \", data to send => :\",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          }\r\n                                        }}\r\n                                        setDeleteVL={(data) => {\r\n                                          if (data.ID_ROWID != null) {\r\n                                            const deleteVL =\r\n                                              this.state.dataToSend.ASV.delete;\r\n                                            deleteVL.push(data);\r\n                                            console.log(\r\n                                              \"data to send => :\",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          } else {\r\n                                            const deleteNewVL =\r\n                                              this.state.dataToSend.VL;\r\n\r\n                                            deleteNewVL.New[data.VL].UL[\r\n                                              data.UL\r\n                                            ].VV[data.VV].ASV = deleteNewVL.New[\r\n                                              data.VL\r\n                                            ].UL[data.UL].VV[\r\n                                              data.VV\r\n                                            ].ASV.filter(\r\n                                              (item) => item.key == data.key\r\n                                            );\r\n                                            console.log(\r\n                                              \"win el mochkila : \",\r\n                                              deleteNewVL.New[data.VL].UL[\r\n                                                data.UL\r\n                                              ].VV[data.VV].ASV.filter(\r\n                                                (item) => item.key !== data.key\r\n                                              )\r\n                                            );\r\n                                            console.log(\r\n                                              \", data to send => :\",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          }\r\n                                        }}\r\n                                        setUpdateVL={(data, values) => {\r\n                                          if (data.ID_ROWID != null) {\r\n                                            const updateVL =\r\n                                              this.state.dataToSend.ASV.update;\r\n                                            let result = updateVL.findIndex(\r\n                                              ({ ID_ROWID }) =>\r\n                                                ID_ROWID === data.ID_ROWID\r\n                                            );\r\n                                            if (result == -1) {\r\n                                              updateVL.push({\r\n                                                ...data,\r\n                                                ...values,\r\n                                              });\r\n                                            } else {\r\n                                              updateVL[result] = {\r\n                                                ...data,\r\n                                                ...values,\r\n                                              };\r\n                                            }\r\n                                            console.log(\r\n                                              result,\r\n                                              \", data to send => :\",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          } else {\r\n                                            const updateNewVL =\r\n                                              this.state.dataToSend.VL.New;\r\n                                            // var result = updateNewVL.findIndex(\r\n                                            //   ({ key }) => key === data.key\r\n                                            // );\r\n                                            // if (result != -1) {\r\n                                            updateNewVL[data.VL].UL[data.UL].VV[\r\n                                              data.VV\r\n                                            ].ASV = {\r\n                                              ...data,\r\n                                              ...values,\r\n                                            };\r\n                                            // }\r\n                                            console.log(\r\n                                              \"data to send => :\",\r\n                                              this.state.dataToSend\r\n                                            );\r\n                                          }\r\n                                        }}\r\n                                        setListeAllUl={(Uls) => {\r\n                                          const { ListAllUL } = this.state;\r\n                                          Uls.map((Ul) => ListAllUL.push(Ul));\r\n                                          console.log(\r\n                                            \"Listes de toutes les ULs=> \",\r\n                                            this.state.ListAllUL\r\n                                          );\r\n                                        }}\r\n                                        showDrawer={this.props.showDrawer}\r\n                                        closeDrawer={() =>\r\n                                          this.props.closeDrawer()\r\n                                        }\r\n                                        setSiseForm={(width) =>\r\n                                          this.setState({\r\n                                            drawerVisible: width,\r\n                                          })\r\n                                        }\r\n                                        setDrawerState={(\r\n                                          titre,\r\n                                          content,\r\n                                          width,\r\n                                          enClose\r\n                                        ) =>\r\n                                          this.props.setDrawerState(\r\n                                            titre,\r\n                                            content,\r\n                                            width,\r\n                                            () => enClose()\r\n                                          )\r\n                                        }\r\n                                        ref={this.adressRef}\r\n                                        update={this.state.update}\r\n                                        datasource={\r\n                                          this.state.defaultValue != null\r\n                                            ? this.state.defaultValue.ASSVEN\r\n                                            : null\r\n                                        }\r\n                                      />\r\n                                    </div>\r\n                                  </Tabs.TabPane>\r\n                                )}\r\n                              </Tabs>\r\n                            </div>{\" \"}\r\n                          </Form>\r\n                        </ConfigProvider>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col span={18}></Col>\r\n            </Row>\r\n          </Spin>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouterAndRef(Formulaire);\r\n","import React, { useImperativeHandle } from \"react\";\r\nimport {\r\n  MemoryRouter,\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n  Redirect,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport DMSProfileHomeSearch from \"./pages/Searche\";\r\nimport DMSProfileInserting from \"./pages/Formulaire\";\r\nimport DMSProfileAdvancedSearch from \"./pages/Results\";\r\nimport Error404 from \"../../templates/template1/Pages/Error404\";\r\nimport {\r\n  userCreationPath,\r\n  userAdvancedSearchPath,\r\n  userHomeSearchPath,\r\n  userUpdatePath,\r\n} from \"../../config\";\r\nconst DMSRoute = React.forwardRef((props, ref) => {\r\n  const history = useHistory();\r\n  const refFormulaire = React.createRef();\r\n  const refHistory = React.createRef();\r\n  useImperativeHandle(ref, () => ({\r\n    Route: {\r\n      search: userHomeSearchPath,\r\n      create: userCreationPath,\r\n      update: userUpdatePath,\r\n      result: userAdvancedSearchPath,\r\n    },\r\n    removeElem: (datefin) => {\r\n      refFormulaire.current.removeElem(datefin);\r\n    },\r\n    activerUpdate: () => {\r\n      refFormulaire.current.activerUpdate();\r\n    },\r\n    history: () => {\r\n      return refHistory.current.history;\r\n    },\r\n    onReset: () => {\r\n      refFormulaire.current.onReset();\r\n    },\r\n    onSubmit: () => {\r\n      refFormulaire.current.onSubmit();\r\n    },\r\n    loadingFormulaire: (value) => {\r\n      refFormulaire.current.loading(value);\r\n      // refFormulaire\r\n    },\r\n    CleanInputChange: (value) => {\r\n      refFormulaire.current.CleanInputChange();\r\n    },\r\n\r\n    history: refHistory.current.history,\r\n    goBack: () => {\r\n      refHistory.current.history.goBack();\r\n    },\r\n    goForward: () => {\r\n      refHistory.current.history.goForward();\r\n    },\r\n  }));\r\n  // history.push(profileHomeSearchPath);\r\n  return (\r\n    <MemoryRouter\r\n      ref={refHistory}\r\n      initialEntries={[userHomeSearchPath]}\r\n      initialIndex={0}\r\n    >\r\n      <Switch>\r\n        {/*  */}\r\n        <Route exact path={userHomeSearchPath}>\r\n          <DMSProfileHomeSearch\r\n            showDrawer={props.showDrawer}\r\n            closeDrawer={() => props.closeDrawer()}\r\n            setDrawerState={(titre, content, width, enClose) =>\r\n              props.setDrawerState(titre, content, width, () => enClose())\r\n            }\r\n            history={history}\r\n            hostStorage={props.hostStorage}\r\n            service={props.service}\r\n            goTo={(link) => props.goTo(link)}\r\n          />\r\n        </Route>\r\n        <Route exact path={userCreationPath}>\r\n          <DMSProfileInserting\r\n            showDrawer={props.showDrawer}\r\n            closeDrawer={() => props.closeDrawer()}\r\n            setDrawerState={(titre, content, width, enClose) =>\r\n              props.setDrawerState(titre, content, width, () => enClose())\r\n            }\r\n            history={history}\r\n            hostStorage={props.hostStorage}\r\n            icon={props.icon}\r\n            disabelEditButton={(value) => props.disabelEditButton(value)}\r\n            service={props.service}\r\n            services={props.services.formulaire}\r\n            ref={refFormulaire}\r\n            goTo={(link) => props.goTo(link)}\r\n            // wrappedComponentRef={(c) => (refFormulaire = c)}\r\n            onFormulaireChange={(value) => props.onFormulaireChange(value)}\r\n          />\r\n        </Route>\r\n        <Route exact path={userAdvancedSearchPath}>\r\n          <DMSProfileAdvancedSearch\r\n            showDrawer={props.showDrawer}\r\n            closeDrawer={() => props.closeDrawer()}\r\n            setDrawerState={(titre, content, width, enClose) =>\r\n              props.setDrawerState(titre, content, width, () => enClose())\r\n            }\r\n            history={history}\r\n            hostStorage={props.hostStorage}\r\n            service={props.service}\r\n            services={props.services.result}\r\n            goTo={(link) => props.goTo(link)}\r\n          />\r\n        </Route>\r\n        <Route exact path={userUpdatePath + \":id\"}>\r\n          <DMSProfileInserting\r\n            showDrawer={props.showDrawer}\r\n            closeDrawer={() => props.closeDrawer()}\r\n            setDrawerState={(titre, content, width, enClose) =>\r\n              props.setDrawerState(titre, content, width, () => enClose())\r\n            }\r\n            history={history}\r\n            hostStorage={props.hostStorage}\r\n            icon={props.icon}\r\n            ref={refFormulaire}\r\n            disabelEditButton={(value) => props.disabelEditButton(value)}\r\n            service={props.service}\r\n            services={props.services.formulaire}\r\n            onFormulaireChange={(value) => props.onFormulaireChange(value)}\r\n            goTo={(link) => props.goTo(link)}\r\n          />\r\n        </Route>\r\n        <Route path=\"404\">\r\n          <Error404 />\r\n        </Route>\r\n        <Redirect from=\"*\" to=\"404\" />\r\n      </Switch>\r\n    </MemoryRouter>\r\n  );\r\n});\r\n\r\nexport default DMSRoute;\r\n","import { Col, Input, Row, Space, message, ConfigProvider } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport {\r\n  AudioOutlined,\r\n  FilterOutlined,\r\n  FilterTwoTone,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Affix,\r\n  Button,\r\n  Checkbox,\r\n  Form,\r\n  Modal,\r\n  Select,\r\n  TimePicker,\r\n} from \"dmsui\";\r\nimport {\r\n  authApp,\r\n  userAdvancedSearchPath,\r\n  userCreationPath,\r\n} from \"../../../config\";\r\nimport { validateMessages } from \"../../../Constante\";\r\nimport { connexion } from \"../../../DjangoService/authnService\";\r\nimport { getAllSM } from \"../../../DjangoService/ProduitService\";\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nfunction makeTree(nodes, parentId) {\r\n  return nodes\r\n    .filter((node) => node.mere === parentId)\r\n    .reduce(\r\n      (tree, node) => [\r\n        ...tree,\r\n        {\r\n          title: node.RRSMLIBL,\r\n          value: node.ID_ROWID,\r\n          children: makeTree(nodes, node.ID_ROWID),\r\n        },\r\n      ],\r\n      []\r\n    );\r\n}\r\nclass Searche extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { width: \"\", visible: false, TreeSM: [] };\r\n    this.getRefrechToken = this.getRefrechToken.bind(this);\r\n    this.getToken = this.getToken.bind(this);\r\n  }\r\n  formRef = React.createRef();\r\n\r\n  async componentDidMount() {\r\n    this.props.hostStorage.get(\"refresh_token\", await this.getRefrechToken);\r\n  }\r\n  getToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    if (value == null) {\r\n      console.log(\"tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ token: value });\r\n    console.log(\"tokne from host => :\", this.state.token);\r\n    console.log(\"-------------------fin-GetToken-------------------\");\r\n    await this.getSM();\r\n  };\r\n  getRefrechToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetRefrechToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"403\");\r\n    }\r\n    if (value == null) {\r\n      //  window.location.href = authApp;\r\n      console.log(\"Refech tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ Refrech: value });\r\n    console.log(\"Refech tokne from host => :\", this.state.Refrech);\r\n    console.log(\"-------------------fin-GetRefrechToken-------------------\");\r\n    this.props.hostStorage.get(\"access_token\", await this.getToken);\r\n  };\r\n  async getSM() {\r\n    console.log(\r\n      \"------------------debut-GetStructures-Marchandise------------------\"\r\n    );\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n    );\r\n    try {\r\n      const res = await getAllSM(\r\n        this.props.service,\r\n        \"\",\r\n        !!verifyToken ? verifyToken : this.state.token\r\n      );\r\n      console.log(\r\n        \"succes from api : Produit =>  (getStructures-Marchandise()) => :\",\r\n        res\r\n      );\r\n      var TreeSM = makeTree(res.data, null);\r\n      console.log(res.data, \"=> tree =>\", TreeSM);\r\n\r\n      this.setState({\r\n        TreeSM,\r\n      });\r\n      console.log(\r\n        \"-------------------fin-GetStructures-Marchandise-------------------\"\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"Error from api : Produit =>  getStructures-Marchandise  => : \",\r\n        error\r\n      );\r\n\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"500\");\r\n      }\r\n      console.log(\r\n        \"-------------------fin-GetStructures-Marchandise-------------------\"\r\n      );\r\n    }\r\n  }\r\n  onSearch = (value) => {\r\n    console.log(\"------------------debut-onSearch------------------\");\r\n    console.log(\"Rechercher par => :\", value);\r\n    this.props.goTo(userAdvancedSearchPath + \"?search=\" + value);\r\n    console.log(\"-------------------fin-onSearch-------------------\");\r\n  };\r\n  onFilter = (value) => {\r\n    console.log(\"------------------debut-onSearch------------------\");\r\n    console.log(\"Filtrer par => :\", value);\r\n    this.props.goTo(userAdvancedSearchPath + \"?\" + value);\r\n    console.log(\"-------------------fin-onSearch-------------------\");\r\n  };\r\n  onFinish = async (values) => {\r\n    console.log(\r\n      \"------------------debut-Submit-NewVarianteVente------------------\"\r\n    );\r\n\r\n    var loadingOnsubmit = true;\r\n    message.loading(\"Loading..\", loadingOnsubmit);\r\n    try {\r\n      const filtre =\r\n        \"&RSSITE=\" +\r\n        (values.RSSITE != null ? values.RSSITE : \"\") +\r\n        \"&RSLIBL=\" +\r\n        (values.RSLIBL != null ? values.RSLIBL : \"\") +\r\n        \"&RSLIBC=\" +\r\n        (values.RSLIBC != null ? values.RSLIBC : \"\") +\r\n        \"&RSZGEO=\" +\r\n        (values.RSZGEO != null ? values.RSZGEO : \"\") +\r\n        \"&RSAdress=\" +\r\n        (values.RSAdress != null ? values.RSAdress : \"\") +\r\n        \"&RSCINCAL__RCSHEUREO=\" +\r\n        (values.RCSHEUREO != null ? values.RCSHEUREO.format(\"HH:mm\") : \"\") +\r\n        \"&RSCINCAL__RCSHEUREF=\" +\r\n        (values.RCSHEUREF != null ? values.RCSHEUREF.format(\"HH:mm\") : \"\") +\r\n        \"&RSCINCAL__RCSINFSAM=\" +\r\n        (values.RCSINFSAM != null ? values.RCSINFSAM : \"\") +\r\n        \"&RSCINCAL__RCSINFDIM=\" +\r\n        (values.RCSINFDIM != null ? values.RCSINFDIM : \"\") +\r\n        \"&RSCINCAL__RCSINFLUN=\" +\r\n        (values.RCSINFLUN != null ? values.RCSINFLUN : \"\") +\r\n        \"&RSCINCAL__RCSINFMAR=\" +\r\n        (values.RCSINFMAR != null ? values.RCSINFMAR : \"\") +\r\n        \"&RSCINCAL__RCSINFMER=\" +\r\n        (values.RCSINFMER != null ? values.RCSINFMER : \"\") +\r\n        \"&RSCINCAL__RCSINFJEU=\" +\r\n        (values.RCSINFMJEU != null ? values.RCSINFJEU : \"\") +\r\n        \"&RSCINCAL__RCSINFVEN=\" +\r\n        (values.RCSINFMJVEN != null ? values.RCSINFVEN : \"\");\r\n      console.log(\"filtre => : \", filtre);\r\n      this.onFilter(filtre);\r\n\r\n      console.log(\r\n        \"------------------fin-Submit-NewVarianteVente------------------\"\r\n      );\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      console.log(\r\n        \"------------------fin-Submit-NewVarianteVente------------------\"\r\n      );\r\n    }\r\n  };\r\n\r\n  onSubmit = () => {\r\n    this.formRef.current.submit();\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n  render() {\r\n    const { visible } = this.state;\r\n    return (\r\n      <div\r\n        style={{ height: \"100%\", width: this.state.width, paddingTop: \"90px\" }}\r\n      >\r\n        <Affix\r\n          offsetTop={150}\r\n          style={{ position: \"fixed\", left: \"95%\", top: \"90%\" }}\r\n        >\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"circle\"\r\n            size={\"large\"}\r\n            onClick={() => this.props.goTo(userCreationPath)}\r\n            // style={{ width: \"50px\", height: \"50px\" }}\r\n          >\r\n            <PlusOutlined />\r\n          </Button>\r\n        </Affix>\r\n        <Modal\r\n          title={\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <FilterTwoTone\r\n                style={{ marginRight: \"6px\" }}\r\n                twoToneColor=\"#52488b\"\r\n              />\r\n              <div style={{ color: \"#52488b\" }}>Recherche avancée</div>\r\n            </div>\r\n          }\r\n          centered\r\n          visible={visible}\r\n          onOk={() => {\r\n            this.onSubmit();\r\n            this.setState({ visible: false });\r\n          }}\r\n          onCancel={() => {\r\n            this.setState({ visible: false });\r\n            this.onReset();\r\n          }}\r\n          okText={\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <FilterTwoTone\r\n                style={{ marginRight: \"6px\" }}\r\n                twoToneColor=\"#fff\"\r\n              />\r\n              <div>Apply filter</div>\r\n            </div>\r\n          }\r\n          // cancelText=\"取消\"\r\n          width={800}\r\n        >\r\n          <ConfigProvider form={{ validateMessages: validateMessages.fr }}>\r\n            <Form\r\n              ref={this.formRef}\r\n              layout=\"vertical\"\r\n              name=\"control-ref\"\r\n              onFinish={this.onFinish}\r\n            >\r\n              <Row gutter={[20, 20]} justify=\"center\" align=\"stretch\">\r\n                <Col span={24}>\r\n                  <Row gutter={[16, 0]} align=\"stretch\" justify=\"space-between\">\r\n                    <Col span={16}>\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col flex=\"auto\">\r\n                          <Form.Item\r\n                            label=\"Code\"\r\n                            style={{\r\n                              marginBottom: \"15px\",\r\n                            }}\r\n                            name={\"RSSITE\"}\r\n                          >\r\n                            <Input placeholder=\"Entrer le code...\" />\r\n                          </Form.Item>{\" \"}\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>{\" \"}\r\n                    <Col span={8}>\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col flex=\"auto\">\r\n                          <Form.Item\r\n                            label=\"Acronyme\"\r\n                            style={{\r\n                              marginBottom: \"15px\",\r\n                            }}\r\n                            name={\"RSLIBC\"}\r\n                          >\r\n                            <Input placeholder=\"Entrer l'acronyme...\" />\r\n                          </Form.Item>{\" \"}\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col span={16}>\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col flex=\"auto\">\r\n                          <Form.Item\r\n                            style={{\r\n                              marginBottom: \"15px\",\r\n                            }}\r\n                            label=\"Libelle\"\r\n                            name={\"RSLIBL\"}\r\n                          >\r\n                            <Input placeholder=\"Entrer libelle...\" />\r\n                          </Form.Item>{\" \"}\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col flex=\"auto\">\r\n                          <Form.Item\r\n                            style={{\r\n                              marginBottom: \"15px\",\r\n                            }}\r\n                            label=\"Zone Geo\"\r\n                            name={\"RSZGEO\"}\r\n                          >\r\n                            <Select\r\n                              allowClear\r\n                              placeholder=\"Selectionner la zone geographique...\"\r\n                            >\r\n                              <Select.Option value={0}>Algerie</Select.Option>\r\n                              <Select.Option value={1}>Allemagne</Select.Option>\r\n                              <Select.Option value={2}>\r\n                                Arabie saoudite\r\n                              </Select.Option>\r\n                              <Select.Option value={3}>France</Select.Option>\r\n                            </Select>\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>{\" \"}\r\n                    <Col span={16}>\r\n                      <Row gutter={[15, 0]} align=\"stretch\">\r\n                        <Col span={24}>\r\n                          <Form.Item\r\n                            style={{\r\n                              marginBottom: \"15px\",\r\n                            }}\r\n                            label=\"Adresse\"\r\n                            name={\"RSAdress\"}\r\n                          >\r\n                            <Input placeholder=\"Entrer l'adresse...\" />\r\n                          </Form.Item>{\" \"}\r\n                        </Col>\r\n                        <Col\r\n                          span={12}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignContent: \"center\",\r\n                            flexWrap: \"wrap\",\r\n                            width: \"100%\",\r\n                          }}\r\n                        >\r\n                          <Form.Item\r\n                            style={{ marginBottom: \"15px\", width: \"100%\" }}\r\n                            name={\"RCSHEUREO\"}\r\n                            label=\"Heure d'ouverteure\"\r\n                            valuePropName=\"checked\"\r\n                            // hasFeedback\r\n                          >\r\n                            <TimePicker\r\n                              style={{ width: \"100%\" }}\r\n                              defaultOpenValue={moment(\"00:00:00\", \"HH:mm\")}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>{\" \"}\r\n                        <Col\r\n                          span={12}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignContent: \"center\",\r\n                            flexWrap: \"wrap\",\r\n                            width: \"100%\",\r\n                          }}\r\n                        >\r\n                          <Form.Item\r\n                            style={{ marginBottom: \"15px\", width: \"100%\" }}\r\n                            name={\"RCSHEUREF\"}\r\n                            label=\"Heure de fermture\"\r\n                            valuePropName=\"checked\"\r\n                            // hasFeedback\r\n                          >\r\n                            <TimePicker\r\n                              style={{ width: \"100%\" }}\r\n                              defaultOpenValue={moment(\"00:00:00\", \"HH:mm\")}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col\r\n                      span={8}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignContent: \"center\",\r\n                        flexWrap: \"wrap\",\r\n                        // marginBottom: \"15px\",\r\n                      }}\r\n                    >\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Row>\r\n                          <Col flex=\"auto\">\r\n                            <Form.Item\r\n                              name={\"RCSINFSAM\"}\r\n                              valuePropName=\"checked\"\r\n                            >\r\n                              <Checkbox style={{ lineHeight: \"32px\" }}>\r\n                                Samedi\r\n                              </Checkbox>\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col flex=\"auto\">\r\n                            <Form.Item\r\n                              name={\"RCSINFDIM\"}\r\n                              valuePropName=\"checked\"\r\n                            >\r\n                              <Checkbox style={{ lineHeight: \"32px\" }}>\r\n                                dimanche\r\n                              </Checkbox>\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col flex=\"auto\">\r\n                            <Form.Item\r\n                              name={\"RCSINFLUN\"}\r\n                              valuePropName=\"checked\"\r\n                            >\r\n                              <Checkbox style={{ lineHeight: \"32px\" }}>\r\n                                lundi\r\n                              </Checkbox>\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col flex=\"auto\">\r\n                            <Form.Item\r\n                              name={\"RCSINFMAR\"}\r\n                              valuePropName=\"checked\"\r\n                            >\r\n                              <Checkbox style={{ lineHeight: \"32px\" }}>\r\n                                mardi\r\n                              </Checkbox>\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col flex=\"auto\">\r\n                            <Form.Item\r\n                              name={\"RCSINFMER\"}\r\n                              valuePropName=\"checked\"\r\n                            >\r\n                              <Checkbox style={{ lineHeight: \"32px\" }}>\r\n                                mercredi\r\n                              </Checkbox>\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col flex=\"auto\">\r\n                            <Form.Item\r\n                              name={\"RCSINFJEU\"}\r\n                              valuePropName=\"checked\"\r\n                            >\r\n                              <Checkbox style={{ lineHeight: \"32px\" }}>\r\n                                jeudi\r\n                              </Checkbox>\r\n                            </Form.Item>\r\n                          </Col>{\" \"}\r\n                          <Col flex=\"auto\">\r\n                            <Form.Item\r\n                              name={\"RCSINFVEN\"}\r\n                              valuePropName=\"checked\"\r\n                            >\r\n                              <Checkbox style={{ lineHeight: \"32px\" }}>\r\n                                vendredi\r\n                              </Checkbox>\r\n                            </Form.Item>\r\n                          </Col>\r\n                        </Row>\r\n                      </Row>\r\n                    </Col>{\" \"}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </ConfigProvider>\r\n        </Modal>\r\n        <Row gutter={[16, 30]} align=\"middle\" justify=\"space-around\">\r\n          <Col span={24}>\r\n            <Space>\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/search3.png\"}\r\n                alt=\"ooo\"\r\n                style={{ width: \"410px\" }}\r\n              />\r\n            </Space>\r\n          </Col>{\" \"}\r\n          <Col span={this.state.width == \"\" ? 9 : 15}>\r\n            {\" \"}\r\n            <Row align=\"stretch\" justify=\"space-between\">\r\n              <Col span={2}>\r\n                <Button\r\n                  type=\"primary\"\r\n                  style={{ height: \"100%\" }}\r\n                  onClick={(e) => {\r\n                    this.setState({ visible: true });\r\n                  }}\r\n                >\r\n                  <FilterOutlined />\r\n                </Button>\r\n              </Col>\r\n              <Col span={22}>\r\n                <Input.Search\r\n                  placeholder=\"what are you looking for ?\"\r\n                  enterButton=\"Search\"\r\n                  size=\"large\"\r\n                  suffix={suffix}\r\n                  onSearch={(e) => this.onSearch(e)}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Searche);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Modal,\r\n  notification,\r\n  Row,\r\n  Space,\r\n  Tag,\r\n  Tooltip,\r\n  Avatar,\r\n} from \"antd\";\r\nimport { DatePicker, Table } from \"dmsui\";\r\nimport \"./style.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport {\r\n  CheckCircleTwoTone,\r\n  CheckOutlined,\r\n  CloseCircleTwoTone,\r\n  InfoOutlined,\r\n  SnippetsOutlined,\r\n  UserOutlined,\r\n  DeleteOutlined,\r\n  MergeCellsOutlined,\r\n  SplitCellsOutlined,\r\n  EnvironmentTwoTone,\r\n  ClockCircleTwoTone,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  ActiveDesactiveUser,\r\n  // getAllUsers,\r\n} from \"../../../DjangoService/userService\";\r\nimport { authApp, userUpdatePath } from \"../../../config\";\r\nimport { connexion } from \"../../../DjangoService/authnService\";\r\nimport TitleCustomize from \"./formulaireComponents/TitleCustomize\";\r\nimport { getAllProduits } from \"../../../DjangoService/ProduitService\";\r\n\r\n// const pagination = { position: \"bottom\" };\r\nconst vueSysteme = [];\r\nfor (let i = 1; i <= 1; i++) {\r\n  vueSysteme.push({\r\n    titre: \"Vue systéme \" + i,\r\n    check: true,\r\n  });\r\n}\r\nconst vuesPersonnalises = [];\r\nfor (let i = 1; i <= 3; i++) {\r\n  vuesPersonnalises.push({\r\n    titre: \"Vues personnalisés \" + i,\r\n    check: false,\r\n  });\r\n}\r\nconst DescriptionItem = ({ title, content }) => (\r\n  <div className=\"site-description-item-profile-wrapper\">\r\n    <p className=\"site-description-item-profile-p-label\">{title}:</p>\r\n    {content}\r\n  </div>\r\n);\r\nclass Results extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: \"\",\r\n      token: null,\r\n      bordered: false,\r\n      loading: false,\r\n      // pagination,\r\n      model: {\r\n        title: \"\",\r\n        Content: \"\",\r\n        width: 300,\r\n        onOk: console.log(\"ok\"),\r\n        visible: false,\r\n      },\r\n      dateFinDesactiver: \"20202-28-06 11:34:00\",\r\n      columns: [\r\n        {\r\n          title: \"Code\",\r\n          dataIndex: \"RSSITE\",\r\n          ellipsis: true,\r\n          width: \"20%\",\r\n          fixed: \"left\",\r\n          // sorter: (a, b) => a.age - b.age,\r\n          render: (_, record) => (\r\n            <Tooltip placement=\"topLeft\" title={record.RSSITE}>\r\n              <div\r\n                style={\r\n                  !record.MUTETAT\r\n                    ? { cursor: \"not-allowed\", color: \"#7a7a7a\" }\r\n                    : {}\r\n                }\r\n              >\r\n                {record.RSSITE}\r\n              </div>\r\n            </Tooltip>\r\n          ),\r\n        },\r\n\r\n        {\r\n          title: \"Acronyme\",\r\n          dataIndex: \"RSLIBC\",\r\n          ellipsis: true,\r\n          width: \"10%\",\r\n          ellipsis: {\r\n            showTitle: false,\r\n          },\r\n          render: (_, record) => (\r\n            <Tooltip placement=\"topLeft\" title={record.RSLIBC}>\r\n              <div\r\n                style={\r\n                  !record.MUTETAT\r\n                    ? { cursor: \"not-allowed\", color: \"#7a7a7a\" }\r\n                    : {}\r\n                }\r\n              >\r\n                {record.RSLIBC}\r\n              </div>\r\n            </Tooltip>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Libelle\",\r\n          ellipsis: true,\r\n          width: \"15%\",\r\n          dataIndex: \"RSLIBL\",\r\n          render: (_, record) => (\r\n            <Tooltip placement=\"topLeft\" title={record.RSLIBL}>\r\n              <div\r\n                style={\r\n                  !record.MUTETAT\r\n                    ? { cursor: \"not-allowed\", color: \"#7a7a7a\" }\r\n                    : {}\r\n                }\r\n              >\r\n                {record.RSLIBL}\r\n              </div>\r\n            </Tooltip>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Adresse\",\r\n          ellipsis: true,\r\n          width: \"18%\",\r\n          dataIndex: \"RSAdress\",\r\n          render: (_, record) => (\r\n            <Tooltip placement=\"topLeft\" title={record.RSAdress}>\r\n              <div\r\n                style={\r\n                  !record.MUTETAT\r\n                    ? { cursor: \"not-allowed\", color: \"#7a7a7a\" }\r\n                    : {}\r\n                }\r\n              >\r\n                <EnvironmentTwoTone /> <a>{record.RSAdress}</a>\r\n              </div>\r\n            </Tooltip>\r\n          ),\r\n        },\r\n        // {\r\n        //   title: \"Catégorie\",\r\n        //   ellipsis: true,\r\n        //   width: \"10%\",\r\n        //   dataIndex: \"structure\",\r\n        //   render: (_, record) => (\r\n        //     <Tooltip placement=\"topLeft\" title={record.structure}>\r\n        //       <div\r\n        //         style={\r\n        //           !record.MUTETAT\r\n        //             ? { cursor: \"not-allowed\", color: \"#7a7a7a\" }\r\n        //             : {}\r\n        //         }\r\n        //       >\r\n        //         <Link>{record.structure}</Link>{\" \"}\r\n        //       </div>\r\n        //     </Tooltip>\r\n        //   ),\r\n        // },\r\n\r\n        {\r\n          title: \"Jour de fermture\",\r\n          ellipsis: true,\r\n          width: \"22%\",\r\n          dataIndex: \"Calendrier\",\r\n          render: (_, record) => {\r\n            var jour = [];\r\n            jour =\r\n              record.Calendrier != null\r\n                ? this.getUniteStockPrd(record.Calendrier)\r\n                : [];\r\n            return (\r\n              <span\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-start\",\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                {jour.map((data) => (\r\n                  <Tag\r\n                    // style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n                    color={data.color}\r\n                    key={data.titre}\r\n                  >\r\n                    {data.titre}\r\n                  </Tag>\r\n                ))}\r\n              </span>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: \"Open\",\r\n          ellipsis: true,\r\n          dataIndex: \"RCSHEUREO\",\r\n          width: \"10%\",\r\n          render: (_, record) => (\r\n            <Tooltip\r\n              placement=\"topLeft\"\r\n              title={!!record.Calendrier && record.Calendrier.RCSHEUREO}\r\n            >\r\n              {!!record.Calendrier && (\r\n                <div\r\n                  style={\r\n                    !record.MUTETAT\r\n                      ? {\r\n                          cursor: \"not-allowed\",\r\n                          color: \"#7a7a7a\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          alignItems: \"center\",\r\n                        }\r\n                      : {\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          alignItems: \"center\",\r\n                        }\r\n                  }\r\n                >\r\n                  <div>{record.Calendrier.RCSHEUREO}</div>\r\n                  <ClockCircleTwoTone twoToneColor=\"#bbb\" />\r\n                </div>\r\n              )}\r\n            </Tooltip>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Close\",\r\n          ellipsis: true,\r\n          width: \"10%\",\r\n          dataIndex: \"RCSHEUREF\",\r\n          render: (_, record) => (\r\n            <Tooltip\r\n              placement=\"topLeft\"\r\n              title={!!record.Calendrier && record.Calendrier.RCSHEUREF}\r\n            >\r\n              {!!record.Calendrier && (\r\n                <div\r\n                  style={\r\n                    !record.MUTETAT\r\n                      ? {\r\n                          cursor: \"not-allowed\",\r\n                          color: \"#7a7a7a\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          alignItems: \"center\",\r\n                        }\r\n                      : {\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          alignItems: \"center\",\r\n                        }\r\n                  }\r\n                >\r\n                  {record.Calendrier.RCSHEUREF}\r\n                  <ClockCircleTwoTone twoToneColor=\"#bbb\" />\r\n                </div>\r\n              )}\r\n            </Tooltip>\r\n          ),\r\n        },\r\n\r\n        {\r\n          title: \" \",\r\n          key: \"action\",\r\n          width: \"4%\",\r\n          fixed: \"right\",\r\n          width: 170,\r\n          // sorter: true,\r\n          render: (_, record) => {\r\n            // console.log(\"hhhh\", record);\r\n            return (\r\n              <Space\r\n                size=\"middle\"\r\n                style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n              >\r\n                <Button\r\n                  className={\"dms-button-info dms-button dms\"}\r\n                  // onClick={() => console.log(\"see\", record.ID_ROWID)}\r\n                  shape=\"circle\"\r\n                  disabled={!record.MUTETAT}\r\n                  onClick={() =>\r\n                    this.props.goTo(userUpdatePath + record.ID_ROWID)\r\n                  }\r\n                  icon={<InfoOutlined />}\r\n                  size=\"small\"\r\n                />\r\n\r\n                <Button\r\n                  className={\"dms-button-error dms-button dms\"}\r\n                  shape=\"circle\"\r\n                  // disabled={!record.MUTETAT}\r\n                  icon={\r\n                    !record.MUTETAT ? <CheckOutlined /> : <DeleteOutlined />\r\n                  }\r\n                  // {}<MinusOutlined />\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    console.log(\"delete\", record.id);\r\n                    this.setState({\r\n                      model: {\r\n                        title: \"Delete user\",\r\n                        width: 300,\r\n                        Content: (\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"center\",\r\n                            }}\r\n                          >\r\n                            <Space direction=\"vertical\" size={5} align=\"center\">\r\n                              <p>\r\n                                {record.MUTETAT\r\n                                  ? \"Do you want to disable user \" +\r\n                                    record.username +\r\n                                    \"?\"\r\n                                  : \"Do you want to enable user \" +\r\n                                    record.username +\r\n                                    \"?\"}\r\n                              </p>\r\n                              {record.MUTETAT && (\r\n                                <DatePicker\r\n                                  style={{ width: \"100%\" }}\r\n                                  showTime\r\n                                  onChange={this.onChange}\r\n                                  onOk={this.onOk}\r\n                                />\r\n                              )}\r\n                            </Space>\r\n                          </div>\r\n                        ),\r\n                        onOk: async () => {\r\n                          console.log(\"ok\", this.state.dateFinDesactiver);\r\n                          try {\r\n                            await ActiveDesactiveUser(\r\n                              this.props.service,\r\n\r\n                              {\r\n                                activate: !record.MUTETAT,\r\n                                MUTDFIN: this.state.dateFinDesactiver,\r\n                                pk: record.id,\r\n                              }\r\n                            );\r\n                            this.getData();\r\n                            // await deleteUser(this.props.service, record.id);\r\n                            // this.handleDelete(record.key);\r\n                            notification.open({\r\n                              message: \"Success\",\r\n                              description: record.MUTETAT\r\n                                ? record.username + \" is disabled successfully\"\r\n                                : record.username + \" is enabled successfully\",\r\n                              className: \"custom-class\",\r\n                              type: \"success\",\r\n                              placement: \"bottomRight\",\r\n                              style: {\r\n                                width: 400,\r\n                              },\r\n                            });\r\n                          } catch (error) {\r\n                            console.log(error);\r\n                            notification.open({\r\n                              message: \"Error\",\r\n                              placement: \"bottomRight\",\r\n                              type: \"error\",\r\n                              description: record.MUTETAT\r\n                                ? record.username + \" could not be disabled.\"\r\n                                : record.username + \" could not be enabled.\",\r\n                              className: \"custom-class\",\r\n                              style: {\r\n                                width: 400,\r\n                              },\r\n                            });\r\n                          }\r\n                        },\r\n                        visible: true,\r\n                      },\r\n                    });\r\n                    // deleteUser(this.props.service, record.id);\r\n                  }}\r\n                />\r\n              </Space>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      publier: false,\r\n      datass: [],\r\n      loading: true,\r\n      // expandable,\r\n      showHeader: true,\r\n      rowSelection: {},\r\n      scroll: undefined,\r\n      hasData: true,\r\n      tableLayout: undefined,\r\n      top: \"none\",\r\n      bottom: \"bottomRight\",\r\n    };\r\n    this.getToken = this.getToken.bind(this);\r\n    this.getRefrechToken = this.getRefrechToken.bind(this);\r\n  }\r\n\r\n  getTypePrd(value, etat) {\r\n    switch (value) {\r\n      case 1:\r\n        return (\r\n          <Tag\r\n            style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n            color={!etat ? \"default\" : \"purple\"}\r\n            key={value}\r\n          >\r\n            service\r\n          </Tag>\r\n        );\r\n      case 2:\r\n        return (\r\n          <Tag\r\n            style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n            color={!etat ? \"default\" : \"magenta\"}\r\n            key={value}\r\n          >\r\n            consommable\r\n          </Tag>\r\n        );\r\n      default:\r\n        return (\r\n          <Tag\r\n            style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n            color={!etat ? \"default\" : \"red\"}\r\n            key={value}\r\n          >\r\n            autre\r\n          </Tag>\r\n        );\r\n    }\r\n  }\r\n  getUniteStockPrd(value, etat) {\r\n    console.log(\"calandrier => : \", value);\r\n    var cal = [];\r\n    if (value.RCSINFSAM) cal.push({ titre: \"Samedi\", color: \"purple\" });\r\n    if (value.RCSINFDIM) cal.push({ titre: \"dimanche\", color: \"magenta\" });\r\n    if (value.RCSINFLUN) cal.push({ titre: \"lundi\", color: \"volcano\" });\r\n    if (value.RCSINFMAR) cal.push({ titre: \"mardi\", color: \"lime\" });\r\n    if (value.RCSINFMER) cal.push({ titre: \"mercredi\", color: \"cyan\" });\r\n    if (value.RCSINFJEU) cal.push({ titre: \"jeudi\", color: \"geekblue\" });\r\n    if (value.RCSINFVEN) cal.push({ titre: \"vendredi\", color: \"gold\" });\r\n    return cal;\r\n    // cal.map((data) => {\r\n    //   console.log(data);\r\n    //   return (\r\n    //     <Tag\r\n    //       style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n    //       color={!etat ? \"default\" : data.color}\r\n    //       key={value}\r\n    //     >\r\n    //       {data.titre}\r\n    //     </Tag>\r\n    //   );\r\n    // });\r\n    // switch (value) {\r\n    //   case 1:\r\n    //     return (\r\n    //       <Tag\r\n    //         style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n    //         color={!etat ? \"default\" : \"cyan\"}\r\n    //         key={value}\r\n    //       >\r\n    //         piece\r\n    //       </Tag>\r\n    //     );\r\n    //   case 2:\r\n    //     return (\r\n    //       <Tag\r\n    //         style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n    //         color={!etat ? \"default\" : \"blue\"}\r\n    //         key={value}\r\n    //       >\r\n    //         Kilo fix\r\n    //       </Tag>\r\n    //     );\r\n    //   case 3:\r\n    //     return (\r\n    //       <Tag\r\n    //         style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n    //         color={!etat ? \"default\" : \"geekblue\"}\r\n    //         key={value}\r\n    //       >\r\n    //         Kilo moyen\r\n    //       </Tag>\r\n    //     );\r\n    //   case 4:\r\n    //     return (\r\n    //       <Tag\r\n    //         style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n    //         color={!etat ? \"default\" : \"green\"}\r\n    //         key={value}\r\n    //       >\r\n    //         kilo Pese\r\n    //       </Tag>\r\n    //     );\r\n    //   default:\r\n    //     return (\r\n    //       <Tag\r\n    //         style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n    //         color={!etat ? \"default\" : \"lime\"}\r\n    //         key={value}\r\n    //       >\r\n    //         autre\r\n    //       </Tag>\r\n    //     );\r\n    // }\r\n  }\r\n  getToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    if (value == null) {\r\n      //  window.location.href = authApp;\r\n      console.log(\"tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ token: value });\r\n    console.log(\"tokne from host => :\", this.state.token);\r\n    console.log(\"-------------------fin-GetToken-------------------\");\r\n    await this.getData();\r\n  };\r\n  getRefrechToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetRefrechToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"403\");\r\n    }\r\n    if (value == null) {\r\n      //  window.location.href = authApp;\r\n      console.log(\"Refech tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ Refrech: value });\r\n    console.log(\"Refech tokne from host => :\", this.state.Refrech);\r\n    console.log(\"-------------------fin-GetRefrechToken-------------------\");\r\n  };\r\n  async componentDidMount() {\r\n    console.log(\"------------------debut-ResultaDeRecherche------------------\");\r\n    const { location } = this.props.history;\r\n\r\n    var search = \"\";\r\n    var filter = \"\";\r\n    console.log(\"location.search  =>  :\", location.search);\r\n    if (location.search != \"\") {\r\n      search = location.search.slice(1).split(\"?\")[0].split(\"search=\")[1];\r\n      if (search == null) {\r\n        filter = location.search.slice(1).split(\"?\")[0];\r\n      }\r\n    }\r\n    this.setState({ search: search, filter });\r\n    console.log(\"Valeur de recherche => :\", search);\r\n    console.log(\"Valeur de filtrage => :\", filter);\r\n    console.log(\"-------------------fin-ResultaDeRecherche-------------------\");\r\n    this.props.hostStorage.get(\"refresh_token\", await this.getRefrechToken);\r\n    this.props.hostStorage.get(\"access_token\", await this.getToken);\r\n  }\r\n  onChange = (value, dateString) => {\r\n    console.log(\"Selected Time: \", value);\r\n    console.log(\r\n      \"Formatted Selected Time: \",\r\n      dateString,\r\n      this.state.dateFinDesactiver\r\n    );\r\n    this.setState({ dateFinDesactiver: dateString });\r\n  };\r\n  refrechpage() {\r\n    // this.props.history.replace(\"app\");\r\n    window.location.reload();\r\n  }\r\n  onOk(value) {\r\n    console.log(\"onOk: \", value);\r\n  }\r\n  handleDelete = (key) => {\r\n    const dataSource = [...this.state.datass];\r\n    this.setState({\r\n      datass: dataSource.filter((item) => item.key !== key),\r\n    });\r\n  };\r\n  async getData() {\r\n    console.log(\"------------------debut-GetProduits------------------\");\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n      // () => this.getData()\r\n    );\r\n    try {\r\n      const res = await getAllProduits(\r\n        this.props.service,\r\n        this.state.search,\r\n\r\n        !!verifyToken ? verifyToken : this.state.token,\r\n        this.state.filter\r\n      );\r\n      console.log(\"succes from api : user (getAll()) => :\", res);\r\n\r\n      res.data != null &&\r\n        res.data.map((data, index) => {\r\n          Object.assign(data, {\r\n            key: index,\r\n            MUTETAT: true,\r\n          });\r\n        });\r\n      this.setState({\r\n        datass: res.data != null ? res.data : null,\r\n        loading: false,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error  :  GetUsers  => : \", error);\r\n      this.setState({\r\n        // datass: [\r\n        //   {\r\n        //     key: 1,\r\n        //     ID_ROWID: 0,\r\n        //     MUTETAT: true,\r\n        //     RPRCEXT: \"FSC8DX4F6S48DS\",\r\n        //     RPRLIBL: \"clavier sans file\",\r\n        //     RPRLIBC: \"clavier\",\r\n        //     RPRTYPE: \"service\",\r\n        //     RPRCINSM: \"électronique\",\r\n        //     RPRUSTOCK: \"Piece\",\r\n        //     RPRIGARANTI: true,\r\n        //     RPRIDAnger: false,\r\n        //     RPRPHOTO: process.env.PUBLIC_URL + \"/photo.png\",\r\n        //   },\r\n        // ],\r\n        loading: false,\r\n      });\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"500\");\r\n      }\r\n    }\r\n    console.log(\"-------------------fin-GetUser-------------------\");\r\n  }\r\n  render() {\r\n    const { xScroll, yScroll, ...state } = this.state;\r\n    const scroll = {};\r\n    if (yScroll) {\r\n      scroll.y = 240;\r\n    }\r\n    if (xScroll) {\r\n      scroll.x = \"100vw\";\r\n    }\r\n\r\n    const tableColumns = this.state.columns.map((item) => ({\r\n      ...item,\r\n      ellipsis: state.ellipsis,\r\n    }));\r\n    if (xScroll === \"fixed\") {\r\n      tableColumns[0].fixed = true;\r\n      tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n    }\r\n    return (\r\n      <div style={{ height: \"100%\", width: \"100%\" }}>\r\n        <Row justify=\"center\">\r\n          <Col span={24} style={{ height: \"587px\", backgroundColor: \"#fff\" }}>\r\n            <Modal\r\n              title={this.state.model.title}\r\n              centered\r\n              visible={this.state.model.visible}\r\n              onOk={() => {\r\n                this.state.model.onOk();\r\n                this.setState({\r\n                  model: {\r\n                    title: \"\",\r\n                    Content: \"\",\r\n                    onOk: console.log(\"ok\"),\r\n                    visible: false,\r\n                  },\r\n                });\r\n                // setVisible(false);\r\n              }}\r\n              onCancel={() =>\r\n                this.setState({\r\n                  model: {\r\n                    title: \"\",\r\n                    Content: \"\",\r\n                    width: 400,\r\n                    onOk: console.log(\"ok\"),\r\n                    visible: false,\r\n                  },\r\n                })\r\n              }\r\n              width={this.state.model.width}\r\n            >\r\n              {this.state.model.Content}\r\n            </Modal>\r\n            <Table\r\n              className=\"template-dms\"\r\n              title={() => (\r\n                <TitleCustomize\r\n                  vues={{\r\n                    vueSysteme: vueSysteme,\r\n                    vuesPersonnalises: vuesPersonnalises,\r\n                  }}\r\n                  title={\"Produits\"}\r\n                  enAdd={this.handleAdd}\r\n                  type=\"primary\"\r\n                  style={{\r\n                    marginBottom: 16,\r\n                  }}\r\n                />\r\n              )}\r\n              size=\"small\"\r\n              pagination={{\r\n                position: [\"none\", \"bottomRight\"],\r\n              }}\r\n              scroll={{ x: 2245 }}\r\n              {...this.state}\r\n              vues={{\r\n                vueSysteme: vueSysteme,\r\n                vuesPersonnalises: vuesPersonnalises,\r\n              }}\r\n              size=\"small\"\r\n              columns={tableColumns}\r\n              dataSource={state.hasData ? this.state.datass : null}\r\n              scroll={scroll}\r\n              scroll={{ y: 435 }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Results);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Row } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { Checkbox, Form, Tag, TimePicker, Typography } from \"dmsui\";\r\n\r\nexport default class TabInput extends Component {\r\n  static propTypes = {\r\n    prop: PropTypes,\r\n  };\r\n\r\n  render() {\r\n    const { update, handleInputChange } = this.props;\r\n    return (\r\n      <Row\r\n        gutter={update ? [0, 0] : [0, 20]}\r\n        align=\"top\"\r\n        justify=\"space-between\"\r\n      >\r\n        <Col span={7} style={{ display: \"flex\" }}>\r\n          <Typography\r\n            className={\"text-input-group\"}\r\n            style={{\r\n              marginTop: \"6px\",\r\n              fontSize: \"14px\",\r\n              fontWeight: \"600\",\r\n            }}\r\n          >\r\n            Jours de fermeture :\r\n          </Typography>\r\n        </Col>{\" \"}\r\n        <Col span={13} style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          {update ? (\r\n            <Row>\r\n              <Col flex=\"auto\">\r\n                <Form.Item name={\"RCSINFSAM\"} valuePropName=\"checked\">\r\n                  <Checkbox style={{ lineHeight: \"32px\" }}>Samedi</Checkbox>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col flex=\"auto\">\r\n                <Form.Item name={\"RCSINFDIM\"} valuePropName=\"checked\">\r\n                  <Checkbox\r\n                    onChange={handleInputChange}\r\n                    style={{ lineHeight: \"32px\" }}\r\n                  >\r\n                    dimanche\r\n                  </Checkbox>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col flex=\"auto\">\r\n                <Form.Item name={\"RCSINFLUN\"} valuePropName=\"checked\">\r\n                  <Checkbox\r\n                    onChange={handleInputChange}\r\n                    style={{ lineHeight: \"32px\" }}\r\n                  >\r\n                    lundi\r\n                  </Checkbox>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col flex=\"auto\">\r\n                <Form.Item name={\"RCSINFMAR\"} valuePropName=\"checked\">\r\n                  <Checkbox\r\n                    onChange={handleInputChange}\r\n                    style={{ lineHeight: \"32px\" }}\r\n                  >\r\n                    mardi\r\n                  </Checkbox>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col flex=\"auto\">\r\n                <Form.Item name={\"RCSINFMER\"} valuePropName=\"checked\">\r\n                  <Checkbox\r\n                    onChange={handleInputChange}\r\n                    style={{ lineHeight: \"32px\" }}\r\n                  >\r\n                    mercredi\r\n                  </Checkbox>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col flex=\"auto\">\r\n                <Form.Item name={\"RCSINFJEU\"} valuePropName=\"checked\">\r\n                  <Checkbox\r\n                    onChange={handleInputChange}\r\n                    style={{ lineHeight: \"32px\" }}\r\n                  >\r\n                    jeudi\r\n                  </Checkbox>\r\n                </Form.Item>\r\n              </Col>{\" \"}\r\n              <Col flex=\"auto\">\r\n                <Form.Item name={\"RCSINFVEN\"} valuePropName=\"checked\">\r\n                  <Checkbox\r\n                    onChange={handleInputChange}\r\n                    style={{ lineHeight: \"32px\" }}\r\n                  >\r\n                    vendredi\r\n                  </Checkbox>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          ) : (\r\n            <Row>\r\n              {this.props.jourF.map((data) => (\r\n                <Tag\r\n                  style={{ padding: \"3px 9px\" }}\r\n                  color={data.color}\r\n                  key={data.titre}\r\n                >\r\n                  {data.titre}\r\n                </Tag>\r\n              ))}\r\n            </Row>\r\n          )}\r\n        </Col>\r\n        <Col span={7} style={{ display: \"flex\" }}>\r\n          <Typography\r\n            className={\"text-input-group\"}\r\n            style={{\r\n              marginTop: \"6px\",\r\n              fontSize: \"14px\",\r\n              fontWeight: \"600\",\r\n            }}\r\n          >\r\n            Heure d'ouverture et de fermeture :\r\n          </Typography>\r\n        </Col>{\" \"}\r\n        <Col span={6} style={{ display: \"flex\" }}>\r\n          <Form.Item\r\n            name={\"time\"}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: false,\r\n              },\r\n            ]}\r\n          >\r\n            <TimePicker.RangePicker\r\n              onChange={handleInputChange}\r\n              disabled={update ? false : true}\r\n              defaultValue={moment(\"12:08\", \"HH:mm\")}\r\n              format={\"HH:mm\"}\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport { Col, Divider, Input, Row, message, ConfigProvider } from \"antd\";\r\nimport { Form, notification, Select, Spin, Tab, Tabs, Typography } from \"dmsui\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { GlobalOutlined, MailOutlined, UserOutlined } from \"@ant-design/icons\";\r\n\r\nimport TabInput from \"./formulaireComponents/TabInput\";\r\nimport { authApp, userAdvancedSearchPath } from \"../../../config\";\r\nimport { validateMessages } from \"../../../Constante\";\r\nimport { connexion } from \"../../../DjangoService/authnService\";\r\nimport {\r\n  getSiteByID,\r\n  insertSite,\r\n  updateSite,\r\n} from \"../../../DjangoService/SiteService\";\r\n\r\nconst withRouterAndRef = (WrappedComponent) => {\r\n  class InnerComponentWithRef extends React.Component {\r\n    render() {\r\n      const { forwardRef, ...rest } = this.props;\r\n      return <WrappedComponent {...rest} ref={forwardRef} />;\r\n    }\r\n  }\r\n  const ComponentWithRouter = withRouter(InnerComponentWithRef, {\r\n    withRef: true,\r\n  });\r\n  return React.forwardRef((props, ref) => {\r\n    return <ComponentWithRouter {...props} forwardRef={ref} />;\r\n  });\r\n};\r\n\r\nclass Formulaire extends Component {\r\n  static propTypes = {\r\n    prop: PropTypes,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jourF: [],\r\n\r\n      drawerVisible: \"\",\r\n      token: null,\r\n      changecome: false,\r\n      loading: false,\r\n      isLoading: this.props.match.params.id != null ? true : false,\r\n\r\n      update: this.props.match.params.id != null ? false : true,\r\n      defaultValue: null,\r\n    };\r\n    this.getRefrechToken = this.getRefrechToken.bind(this);\r\n    this.getToken = this.getToken.bind(this);\r\n  }\r\n\r\n  formRef = React.createRef();\r\n  formContactRef = React.createRef();\r\n  adressRef = React.createRef();\r\n\r\n  activerUpdate() {\r\n    if (this.props.match.params.id != null) {\r\n      this.setState({ update: !this.state.update });\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  onFinish = async (values) => {\r\n    const rangeTimeValue = values[\"time\"];\r\n    values.RCSHEUREO = rangeTimeValue[0].format(\"HH:mm\");\r\n    values.RCSHEUREF = rangeTimeValue[1].format(\"HH:mm\");\r\n    console.log(\"------------------debut-postSite------------------\");\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n    );\r\n    var loadingOnsubmit = true;\r\n    message.loading(\"Loading..\", loadingOnsubmit);\r\n    try {\r\n      if (this.props.match.params.id != null) {\r\n        console.log(\"------------------debut-putSite------------------\");\r\n        console.log(\"update Site => : \", values);\r\n\r\n        const res = await updateSite(\r\n          this.props.service,\r\n          this.props.match.params.id,\r\n          !!verifyToken ? verifyToken : this.state.token,\r\n          values,\r\n          this.state.defaultValue.Calendrier.ID_ROWID\r\n        );\r\n        loadingOnsubmit = false;\r\n        notification.open({\r\n          message: \"Success\",\r\n          description: \"Le point de vente a été modifier avec succès.\",\r\n          className: \"custom-class\",\r\n          type: \"success\",\r\n          placement: \"bottomRight\",\r\n          style: {\r\n            width: 400,\r\n          },\r\n        });\r\n        this.props.onFormulaireChange(true);\r\n        this.props.goTo(\"../\" + userAdvancedSearchPath);\r\n      } else {\r\n        console.log(\"add point de vente => : \", values);\r\n        const res = await insertSite(\r\n          this.props.service,\r\n\r\n          !!verifyToken ? verifyToken : this.state.token,\r\n          values\r\n        );\r\n        loadingOnsubmit = false;\r\n        notification.open({\r\n          message: \"Success\",\r\n          description: \"Le point de vente a été créé avec succès.\",\r\n          className: \"custom-class\",\r\n          type: \"success\",\r\n          placement: \"bottomRight\",\r\n          style: {\r\n            width: 400,\r\n          },\r\n        });\r\n        this.props.onFormulaireChange(true);\r\n        this.props.goTo(userAdvancedSearchPath);\r\n      }\r\n      console.log(\"------------------debut-postSite------------------\");\r\n    } catch (error) {\r\n      console.log(\"error2 :\", error);\r\n      this.props.onFormulaireChange(false);\r\n      notification.open({\r\n        message: \"Error\",\r\n        description:\r\n          \"Le point de vente n'a pas pu être créé.Veuillez réessayer.\",\r\n        className: \"custom-class\",\r\n        type: \"error\",\r\n        placement: \"bottomRight\",\r\n        style: {\r\n          width: 400,\r\n        },\r\n      });\r\n    }\r\n  };\r\n  getToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    if (value == null) {\r\n      console.log(\"tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ token: value });\r\n    console.log(\"tokne from host => :\", this.state.token);\r\n    console.log(\"-------------------fin-GetToken-------------------\");\r\n\r\n    this.props.match.params.id != null && (await this.getDatas());\r\n  };\r\n  getRefrechToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetRefrechToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"403\");\r\n    }\r\n    if (value == null) {\r\n      console.log(\"Refech tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ Refrech: value });\r\n    console.log(\"Refech tokne from host => :\", this.state.Refrech);\r\n    console.log(\"-------------------fin-GetRefrechToken-------------------\");\r\n    this.props.hostStorage.get(\"access_token\", await this.getToken);\r\n  };\r\n\r\n  async getDatas() {\r\n    console.log(\r\n      \"------------------debut-GetSite-\" +\r\n        this.props.match.params.id +\r\n        \"------------------\"\r\n    );\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n    );\r\n    try {\r\n      const res = await getSiteByID(\r\n        this.props.service,\r\n        this.props.match.params.id,\r\n        !!verifyToken ? verifyToken : this.state.token\r\n      );\r\n      res.data.time = [\r\n        moment(res.data.Calendrier.RCSHEUREO, \"HH:mm\"),\r\n        moment(res.data.Calendrier.RCSHEUREF, \"HH:mm\"),\r\n      ];\r\n      const value = res.data.Calendrier;\r\n      const { jourF } = this.state;\r\n      if (value.RCSINFSAM) jourF.push({ titre: \"Samedi\", color: \"purple\" });\r\n      if (value.RCSINFDIM) jourF.push({ titre: \"dimanche\", color: \"magenta\" });\r\n      if (value.RCSINFLUN) jourF.push({ titre: \"lundi\", color: \"volcano\" });\r\n      if (value.RCSINFMAR) jourF.push({ titre: \"mardi\", color: \"lime\" });\r\n      if (value.RCSINFMER) jourF.push({ titre: \"mercredi\", color: \"cyan\" });\r\n      if (value.RCSINFJEU) jourF.push({ titre: \"jeudi\", color: \"geekblue\" });\r\n      if (value.RCSINFVEN) jourF.push({ titre: \"vendredi\", color: \"gold\" });\r\n      res.data.RCSINFSAM = res.data.Calendrier.RCSINFSAM;\r\n      res.data.RCSINFDIM = res.data.Calendrier.RCSINFDIM;\r\n      res.data.RCSINFLUN = res.data.Calendrier.RCSINFLUN;\r\n      res.data.RCSINFMAR = res.data.Calendrier.RCSINFMAR;\r\n      res.data.RCSINFMER = res.data.Calendrier.RCSINFMER;\r\n      res.data.RCSINFJEU = res.data.Calendrier.RCSINFJEU;\r\n      res.data.RCSINFVEN = res.data.Calendrier.RCSINFVEN;\r\n\r\n      this.setState({\r\n        defaultValue: res.data != null ? res.data : null,\r\n        isLoading: false,\r\n      });\r\n      console.log(\r\n        \"succes from api : point de vente =>  (getSite(\" +\r\n          this.props.match.params.id +\r\n          \")) => :\",\r\n        this.state.defaultValue\r\n      );\r\n      console.log(\r\n        \"-------------------fin-GetSite-\" +\r\n          this.props.match.params.id +\r\n          \"-------------------\"\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"Error from api : Point de vente =>  (getSite(\" +\r\n          this.props.match.params.id +\r\n          \"))  => : \",\r\n        error\r\n      );\r\n\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"500\");\r\n      }\r\n      console.log(\r\n        \"-------------------fin-GetSite-\" +\r\n          this.props.match.params.id +\r\n          \"-------------------\"\r\n      );\r\n    }\r\n  }\r\n  onSubmit = () => {\r\n    this.formRef.current.submit();\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n    this.setState({ changecome: false });\r\n    // console.log(this.formRef.current);\r\n  };\r\n\r\n  loading(value) {\r\n    this.setState({ loading: value });\r\n  }\r\n  async componentDidMount() {\r\n    this.props.match.params.id != null\r\n      ? this.props.disabelEditButton(false)\r\n      : this.props.disabelEditButton(true);\r\n\r\n    this.props.hostStorage.get(\"refresh_token\", await this.getRefrechToken);\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    if (!this.state.changecome) {\r\n      this.props.onFormulaireChange(false);\r\n      this.setState({ changecome: true });\r\n    }\r\n  };\r\n\r\n  labelSelectComposant = (label, Icon) => {\r\n    return (\r\n      <div\r\n        className={\"ant-input-group-addon\"}\r\n        style={{\r\n          border: \"1px solid #dcdcdc\",\r\n          display: \"inline-flex\",\r\n          width: \"128px\",\r\n          // backgroundColor: \"#fafafa\",\r\n          paddingLeft: \"10px\",\r\n          height: \"32px\",\r\n          width: \"37%\",\r\n        }}\r\n      >\r\n        <div\r\n          //\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          <Typography\r\n            className={\"text-input-group\"}\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"120px\",\r\n              // color: \"#fff\",\r\n              fontSize: \"14px\",\r\n              fontWeight: \"600\",\r\n            }}\r\n          >\r\n            {label}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  labelComposant = (label, Icon) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          // backgroundColor: \"#555\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {/* <Icon\r\n          className=\"site-form-item-icon\"\r\n          style={{\r\n            marginRight: \"10px\",\r\n          }}\r\n        />{\" \"} */}\r\n        <Typography\r\n          className={\"text-input-group\"}\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"80px\",\r\n            // color: \"#fff\",\r\n            fontSize: \"14px\",\r\n            fontWeight: \"600\",\r\n          }}\r\n        >\r\n          {label}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div style={{ height: \"100%\", width: \"100%\" }}>\r\n        {!this.state.isLoading && (\r\n          <Spin spinning={this.state.loading} delay={500}>\r\n            <Row\r\n              gutter={(16, 0)}\r\n              justify=\"center\"\r\n              style={{ width: this.state.drawerVisible }}\r\n            >\r\n              <Col span={this.state.drawerVisible == \"\" ? 18 : 24}>\r\n                <Row\r\n                  gutter={(16, 0)}\r\n                  justify=\"center\"\r\n                  align=\"stretch\"\r\n                  wrap={false}\r\n                >\r\n                  <Col\r\n                    span={24}\r\n                    style={{\r\n                      padding: \"0px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                  >\r\n                    <Divider\r\n                      className={\"border-main-content\"}\r\n                      orientation=\"left\"\r\n                      style={{\r\n                        margin: \"-12px  -2px -12px 0px\",\r\n                      }}\r\n                    >\r\n                      Information\r\n                    </Divider>{\" \"}\r\n                    <Row\r\n                      align=\"stretch\"\r\n                      justify=\"space-between\"\r\n                      className={\"border-main-content-2\"}\r\n                      style={{\r\n                        marginRight: \"0px\",\r\n                        marginLeft: \"0px\",\r\n                        padding: \"22px 22px\",\r\n                        borderRadius: \"3px\",\r\n                        borderWidth: \"0px 1px 1px 1px\",\r\n                        borderStyle: \"solid\",\r\n                      }}\r\n                    >\r\n                      <Col span={24}>\r\n                        <ConfigProvider\r\n                          form={{ validateMessages: validateMessages.fr }}\r\n                        >\r\n                          <Form\r\n                            ref={this.formRef}\r\n                            name=\"control-ref\"\r\n                            initialValues={{ ...this.state.defaultValue }}\r\n                            onFinish={this.onFinish}\r\n                          >\r\n                            <Row\r\n                              gutter={[20, 20]}\r\n                              justify=\"center\"\r\n                              align=\"stretch\"\r\n                              wrap={false}\r\n                            >\r\n                              <Col flex={\"auto\"}>\r\n                                <Row\r\n                                  gutter={[10, 0]}\r\n                                  align=\"stretch\"\r\n                                  justify=\"space-between\"\r\n                                >\r\n                                  <Col span={16}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Form.Item\r\n                                          name={\"RSSITE\"}\r\n                                          hasFeedback\r\n                                          rules={[\r\n                                            {\r\n                                              required: true,\r\n                                              max: 50,\r\n                                            },\r\n                                          ]}\r\n                                        >\r\n                                          <Input\r\n                                            addonBefore={this.labelComposant(\r\n                                              \"Code\",\r\n                                              UserOutlined\r\n                                            )}\r\n                                            placeholder=\"Entrer le code...\"\r\n                                            readOnly={\r\n                                              this.state.update ? false : true\r\n                                            }\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        </Form.Item>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>\r\n                                  <Col span={8}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Form.Item\r\n                                          name={\"RSLIBC\"}\r\n                                          hasFeedback\r\n                                          rules={[\r\n                                            {\r\n                                              required: false,\r\n                                              max: 50,\r\n                                            },\r\n                                          ]}\r\n                                        >\r\n                                          <Input\r\n                                            addonBefore={this.labelComposant(\r\n                                              \"Acronyme\",\r\n                                              MailOutlined\r\n                                            )}\r\n                                            placeholder=\"Entrer l'acronyme...\"\r\n                                            readOnly={\r\n                                              this.state.update ? false : true\r\n                                            }\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        </Form.Item>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>{\" \"}\r\n                                  <Col span={24}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Form.Item\r\n                                          name={\"RSLIBL\"}\r\n                                          hasFeedback\r\n                                          rules={[\r\n                                            {\r\n                                              required: false,\r\n                                              max: 50,\r\n                                            },\r\n                                          ]}\r\n                                        >\r\n                                          <Input\r\n                                            addonBefore={this.labelComposant(\r\n                                              \"Libellé\",\r\n                                              null\r\n                                            )}\r\n                                            placeholder=\"Entrer le libellé...\"\r\n                                            readOnly={\r\n                                              this.state.update ? false : true\r\n                                            }\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        </Form.Item>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>{\" \"}\r\n                                  <Col span={7}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Input.Group compact>\r\n                                          {this.labelSelectComposant(\r\n                                            \"Zone géo\",\r\n                                            GlobalOutlined\r\n                                          )}\r\n\r\n                                          <Form.Item\r\n                                            name={\"RSZGEO\"}\r\n                                            style={{\r\n                                              marginBottom: \"15px\",\r\n                                              width: \"63%\",\r\n                                            }}\r\n                                            hasFeedback\r\n                                            rules={[\r\n                                              {\r\n                                                required: false,\r\n                                              },\r\n                                            ]}\r\n                                          >\r\n                                            <Select\r\n                                              onChange={this.handleInputChange}\r\n                                              allowClear\r\n                                              disabled={\r\n                                                this.state.update ? false : true\r\n                                              }\r\n                                              placeholder=\"Selectionner la zone geographique...\"\r\n                                            >\r\n                                              <Select.Option value={0}>\r\n                                                Algerie\r\n                                              </Select.Option>\r\n                                              <Select.Option value={1}>\r\n                                                Allemagne\r\n                                              </Select.Option>\r\n                                              <Select.Option value={2}>\r\n                                                Arabie saoudite\r\n                                              </Select.Option>\r\n                                              <Select.Option value={3}>\r\n                                                France\r\n                                              </Select.Option>\r\n                                            </Select>\r\n                                          </Form.Item>\r\n                                        </Input.Group>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>\r\n                                  <Col span={17}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Form.Item name={\"RSAdress\"}>\r\n                                          <Input\r\n                                            addonBefore={this.labelComposant(\r\n                                              \"Adresse\",\r\n                                              null\r\n                                            )}\r\n                                            placeholder=\"Entrer l'adresse...\"\r\n                                            readOnly={\r\n                                              this.state.update ? false : true\r\n                                            }\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        </Form.Item>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>\r\n                                  <Col span={24}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Form.Item\r\n                                          name={\"RSDESC\"}\r\n                                          hasFeedback\r\n                                          rules={[\r\n                                            {\r\n                                              required: false,\r\n                                              max: 2024,\r\n                                            },\r\n                                          ]}\r\n                                        >\r\n                                          <Input.TextArea\r\n                                            addonBefore={this.labelComposant(\r\n                                              \"Description\",\r\n                                              null\r\n                                            )}\r\n                                            disabled={\r\n                                              this.state.update ? false : true\r\n                                            }\r\n                                            placeholder=\"Entrer le description...\"\r\n                                            rows={7}\r\n                                            readOnly={\r\n                                              this.state.update ? false : true\r\n                                            }\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        </Form.Item>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>{\" \"}\r\n                            </Row>\r\n                            <div>\r\n                              <Tabs\r\n                                type=\"card\"\r\n                                className=\"tabs-formulaire dms-tabs\"\r\n                              >\r\n                                <Tabs.TabPane\r\n                                  tab={<Tab title={\"Calendrier\"} />}\r\n                                  key=\"1\"\r\n                                >\r\n                                  <div\r\n                                    className={\"template-tabs-panel\"}\r\n                                    style={{\r\n                                      padding: \"15px\",\r\n                                      height: \"100%\",\r\n                                      border: \"1px solid #eee\",\r\n                                      borderTop: \"0px\",\r\n                                    }}\r\n                                  >\r\n                                    <TabInput\r\n                                      jourF={this.state.jourF}\r\n                                      update={this.state.update}\r\n                                      ref={this.formContactRef}\r\n                                      handleInputChange={this.handleInputChange}\r\n                                    />\r\n                                  </div>\r\n                                </Tabs.TabPane>{\" \"}\r\n                              </Tabs>\r\n                            </div>{\" \"}\r\n                          </Form>\r\n                        </ConfigProvider>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col span={18}></Col>\r\n            </Row>\r\n          </Spin>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouterAndRef(Formulaire);\r\n","import React, { Component } from \"react\";\r\nimport { Space, Menu, Button, Divider, Row, Col, Dropdown } from \"dmsui\";\r\nimport {\r\n  MoreOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  PushpinOutlined,\r\n  SearchOutlined,\r\n  SyncOutlined,\r\n  PrinterOutlined,\r\n  DownloadOutlined,\r\n  FilterOutlined,\r\n  AppstoreAddOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nexport default class TitleCustomize extends Component {\r\n  render() {\r\n    return (\r\n      <Row justify=\"end\">\r\n        <Col span={20} style={{ display: \"flex\" }}>\r\n          <Space size={0}>\r\n            <Dropdown\r\n              overlay={\r\n                <Menu style={{ minWidth: \"250px\" }} className=\"dms-divder-menu\">\r\n                  <Divider orientation=\"left\" plain>\r\n                    Vues système\r\n                  </Divider>\r\n                  {this.props.vues.vueSysteme.map((data, indes) => (\r\n                    <Menu.Item key=\"1\">\r\n                      <Row>\r\n                        <Col span={2}>\r\n                          <Button\r\n                            type=\"text\"\r\n                            shape=\"circle\"\r\n                            icon={data.check && <PushpinOutlined />}\r\n                            size={\"small\"}\r\n                            // onClick={(e) => e.preventDefault()}\r\n                          />\r\n                        </Col>\r\n                        <Col span={17}>\r\n                          <Divider type=\"vertical\" />\r\n                          {data.titre}\r\n                        </Col>\r\n                        <Col span={5}>\r\n                          <Row wrap={false} justify=\"end\" align=\"middle\">\r\n                            <Col span={24}>\r\n                              <Space>\r\n                                <Button\r\n                                  type=\"text\"\r\n                                  shape=\"circle\"\r\n                                  icon={<EditOutlined />}\r\n                                  size={\"small\"}\r\n                                  // onClick={(e) => e.preventDefault()}\r\n                                />\r\n                                <Button\r\n                                  type=\"text\"\r\n                                  shape=\"circle\"\r\n                                  icon={<DeleteOutlined />}\r\n                                  size={\"small\"}\r\n                                  // onClick={(e) => e.preventDefault()}\r\n                                />\r\n                              </Space>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </Menu.Item>\r\n                  ))}\r\n\r\n                  <Divider orientation=\"left\" plain>\r\n                    Vues personnalisés\r\n                  </Divider>\r\n                  {this.props.vues.vuesPersonnalises.map((data, indes) => (\r\n                    <Menu.Item key=\"1\">\r\n                      <Row>\r\n                        <Col span={2}>\r\n                          <Button\r\n                            type=\"text\"\r\n                            shape=\"circle\"\r\n                            icon={data.check && <PushpinOutlined />}\r\n                            size={\"small\"}\r\n                            // onClick={(e) => e.preventDefault()}\r\n                          />\r\n                        </Col>\r\n                        <Col span={17}>\r\n                          <Divider type=\"vertical\" />\r\n                          {data.titre}\r\n                        </Col>\r\n                        <Col span={5}>\r\n                          <Row wrap={false} justify=\"end\" align=\"middle\">\r\n                            <Col span={24}>\r\n                              <Space>\r\n                                <Button\r\n                                  type=\"text\"\r\n                                  shape=\"circle\"\r\n                                  icon={<EditOutlined />}\r\n                                  size={\"small\"}\r\n                                  // onClick={(e) => e.preventDefault()}\r\n                                />\r\n                                <Button\r\n                                  type=\"text\"\r\n                                  shape=\"circle\"\r\n                                  icon={<DeleteOutlined />}\r\n                                  size={\"small\"}\r\n                                  // onClick={(e) => e.preventDefault()}\r\n                                />\r\n                              </Space>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </Menu.Item>\r\n                  ))}\r\n                  <Menu.Divider />\r\n                  <Menu.Item key=\"3\">\r\n                    <div className=\"vue-personnalisee\">\r\n                      Créer une vue personnalisée\r\n                    </div>\r\n                  </Menu.Item>\r\n                </Menu>\r\n              }\r\n              trigger={[\"click\"]}\r\n            >\r\n              <Button\r\n                type=\"text\"\r\n                // shape=\"circle\"\r\n                icon={\r\n                  <MoreOutlined\r\n                    className=\"dms-table-icon-secandary\"\r\n                    // style={{\r\n                    //   color: '#606060'e\r\n                    // }}\r\n                  />\r\n                }\r\n                // size={\"large\"}\r\n                onClick={(e) => e.preventDefault()}\r\n              />\r\n            </Dropdown>\r\n            {/* <Typography.Title level={5}> */}\r\n            <div\r\n              className=\"dms-table-icon-secandary\"\r\n              style={{\r\n                fontWeight: \"500\",\r\n                fontSize: \"17px\",\r\n                // color: '#444'\r\n              }}\r\n            >\r\n              {\" \"}\r\n              {this.props.title}\r\n            </div>\r\n            {/* </Typography.Title> */}\r\n            <Button\r\n              type=\"text\"\r\n              shape=\"circle\"\r\n              icon={<SyncOutlined className=\"dms-table-icon-primary\" />}\r\n              size={\"small\"}\r\n            />\r\n          </Space>\r\n        </Col>\r\n        <Col\r\n          span={4}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          <Space size={0}>\r\n            <Button\r\n              // shape=\"circle\"\r\n              type=\"text\"\r\n              icon={<SearchOutlined className=\"dms-table-icon-secandary\" />}\r\n              // size={\"large\"}\r\n            />\r\n            <Button\r\n              // shape=\"circle\"\r\n              type=\"text\"\r\n              icon={<PrinterOutlined className=\"dms-table-icon-secandary\" />}\r\n              // size={\"small\"}\r\n            />{\" \"}\r\n            <Button\r\n              // shape=\"circle\"\r\n              type=\"text\"\r\n              icon={<DownloadOutlined className=\"dms-table-icon-secandary\" />}\r\n              // size={\"large\"}\r\n            />{\" \"}\r\n            <Button\r\n              // shape=\"circle\"\r\n              type=\"text\"\r\n              icon={<FilterOutlined className=\"dms-table-icon-secandary\" />}\r\n              // size={\"large\"}\r\n            />\r\n            <Button\r\n              // shape=\"circle\"\r\n              type=\"text\"\r\n              onClick={(e) => this.props.enAdd(e)}\r\n              icon={<AppstoreAddOutlined className=\"dms-table-icon-primary\" />}\r\n              // size={\"large\"}\r\n            />\r\n          </Space>{\" \"}\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import React, { useImperativeHandle } from \"react\";\r\nimport {\r\n  MemoryRouter,\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n  Redirect,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport DMSProfileHomeSearch from \"./pages/Searche\";\r\nimport DMSProfileInserting from \"./pages/Formulaire\";\r\nimport DMSProfileAdvancedSearch from \"./pages/Results\";\r\nimport Error404 from \"../../templates/template1/Pages/Error404\";\r\nimport {\r\n  userCreationPath,\r\n  userAdvancedSearchPath,\r\n  userHomeSearchPath,\r\n  userUpdatePath,\r\n} from \"../../config\";\r\nconst DMSRoute = React.forwardRef((props, ref) => {\r\n  const history = useHistory();\r\n  const refFormulaire = React.createRef();\r\n  const refHistory = React.createRef();\r\n  useImperativeHandle(ref, () => ({\r\n    Route: {\r\n      search: userHomeSearchPath,\r\n      create: userCreationPath,\r\n      update: userUpdatePath,\r\n      result: userAdvancedSearchPath,\r\n    },\r\n    removeElem: (datefin) => {\r\n      refFormulaire.current.removeElem(datefin);\r\n    },\r\n    activerUpdate: () => {\r\n      refFormulaire.current.activerUpdate();\r\n    },\r\n    history: () => {\r\n      return refHistory.current.history;\r\n    },\r\n    onReset: () => {\r\n      refFormulaire.current.onReset();\r\n    },\r\n    onSubmit: () => {\r\n      refFormulaire.current.onSubmit();\r\n    },\r\n    loadingFormulaire: (value) => {\r\n      refFormulaire.current.loading(value);\r\n      // refFormulaire\r\n    },\r\n    CleanInputChange: (value) => {\r\n      refFormulaire.current.CleanInputChange();\r\n    },\r\n\r\n    history: refHistory.current.history,\r\n    goBack: () => {\r\n      refHistory.current.history.goBack();\r\n    },\r\n    goForward: () => {\r\n      refHistory.current.history.goForward();\r\n    },\r\n  }));\r\n  // history.push(profileHomeSearchPath);\r\n  return (\r\n    <MemoryRouter\r\n      ref={refHistory}\r\n      initialEntries={[userHomeSearchPath]}\r\n      initialIndex={0}\r\n    >\r\n      <Switch>\r\n        {/*  */}\r\n        <Route exact path={userHomeSearchPath}>\r\n          <DMSProfileHomeSearch\r\n            showDrawer={props.showDrawer}\r\n            closeDrawer={() => props.closeDrawer()}\r\n            setDrawerState={(titre, content, width, enClose) =>\r\n              props.setDrawerState(titre, content, width, () => enClose())\r\n            }\r\n            history={history}\r\n            hostStorage={props.hostStorage}\r\n            service={props.service}\r\n            goTo={(link) => props.goTo(link)}\r\n          />\r\n        </Route>\r\n        <Route exact path={userCreationPath}>\r\n          <DMSProfileInserting\r\n            showDrawer={props.showDrawer}\r\n            closeDrawer={() => props.closeDrawer()}\r\n            setDrawerState={(titre, content, width, enClose) =>\r\n              props.setDrawerState(titre, content, width, () => enClose())\r\n            }\r\n            history={history}\r\n            hostStorage={props.hostStorage}\r\n            icon={props.icon}\r\n            disabelEditButton={(value) => props.disabelEditButton(value)}\r\n            service={props.service}\r\n            services={props.services.formulaire}\r\n            ref={refFormulaire}\r\n            goTo={(link) => props.goTo(link)}\r\n            // wrappedComponentRef={(c) => (refFormulaire = c)}\r\n            onFormulaireChange={(value) => props.onFormulaireChange(value)}\r\n          />\r\n        </Route>\r\n        <Route exact path={userAdvancedSearchPath}>\r\n          <DMSProfileAdvancedSearch\r\n            showDrawer={props.showDrawer}\r\n            closeDrawer={() => props.closeDrawer()}\r\n            setDrawerState={(titre, content, width, enClose) =>\r\n              props.setDrawerState(titre, content, width, () => enClose())\r\n            }\r\n            history={history}\r\n            hostStorage={props.hostStorage}\r\n            service={props.service}\r\n            services={props.services.result}\r\n            goTo={(link) => props.goTo(link)}\r\n          />\r\n        </Route>\r\n        <Route exact path={userUpdatePath + \":id\"}>\r\n          <DMSProfileInserting\r\n            showDrawer={props.showDrawer}\r\n            closeDrawer={() => props.closeDrawer()}\r\n            setDrawerState={(titre, content, width, enClose) =>\r\n              props.setDrawerState(titre, content, width, () => enClose())\r\n            }\r\n            history={history}\r\n            hostStorage={props.hostStorage}\r\n            icon={props.icon}\r\n            ref={refFormulaire}\r\n            disabelEditButton={(value) => props.disabelEditButton(value)}\r\n            service={props.service}\r\n            services={props.services.formulaire}\r\n            onFormulaireChange={(value) => props.onFormulaireChange(value)}\r\n            goTo={(link) => props.goTo(link)}\r\n          />\r\n        </Route>\r\n        <Route path=\"404\">\r\n          <Error404 />\r\n        </Route>\r\n        <Redirect from=\"*\" to=\"404\" />\r\n      </Switch>\r\n    </MemoryRouter>\r\n  );\r\n});\r\n\r\nexport default DMSRoute;\r\n","import { Col, Input, Row, Space, message, ConfigProvider } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  AudioOutlined,\r\n  ClearOutlined,\r\n  FileAddOutlined,\r\n  FilterOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Affix,\r\n  Button,\r\n  Checkbox,\r\n  DatePicker,\r\n  Divider,\r\n  Form,\r\n  InputNumber,\r\n  Modal,\r\n  Radio,\r\n  Select,\r\n  TreeSelect,\r\n  Typography,\r\n} from \"dmsui\";\r\nimport {\r\n  authApp,\r\n  userAdvancedSearchPath,\r\n  userCreationPath,\r\n} from \"../../../config\";\r\nimport { validateMessages } from \"../../../Constante\";\r\nimport { connexion } from \"../../../DjangoService/authnService\";\r\nimport { getAllSM } from \"../../../DjangoService/ProduitService\";\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nfunction makeTree(nodes, parentId) {\r\n  return nodes\r\n    .filter((node) => node.mere === parentId)\r\n    .reduce(\r\n      (tree, node) => [\r\n        ...tree,\r\n        {\r\n          // ...node,\r\n          title: node.RRSMLIBL,\r\n          value: node.ID_ROWID,\r\n          children: makeTree(nodes, node.ID_ROWID),\r\n        },\r\n      ],\r\n      []\r\n    );\r\n}\r\nclass Searche extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { width: \"\", visible: false, TreeSM: [] };\r\n    this.getRefrechToken = this.getRefrechToken.bind(this);\r\n    this.getToken = this.getToken.bind(this);\r\n  }\r\n  formRef = React.createRef();\r\n\r\n  async componentDidMount() {\r\n    this.props.hostStorage.get(\"refresh_token\", await this.getRefrechToken);\r\n  }\r\n  getToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    if (value == null) {\r\n      //  window.location.href = authApp;\r\n      console.log(\"tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ token: value });\r\n    console.log(\"tokne from host => :\", this.state.token);\r\n    console.log(\"-------------------fin-GetToken-------------------\");\r\n    await this.getSM();\r\n  };\r\n  getRefrechToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetRefrechToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"403\");\r\n    }\r\n    if (value == null) {\r\n      //  window.location.href = authApp;\r\n      console.log(\"Refech tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ Refrech: value });\r\n    console.log(\"Refech tokne from host => :\", this.state.Refrech);\r\n    console.log(\"-------------------fin-GetRefrechToken-------------------\");\r\n    this.props.hostStorage.get(\"access_token\", await this.getToken);\r\n  };\r\n  async getSM() {\r\n    console.log(\r\n      \"------------------debut-GetStructures-Marchandise------------------\"\r\n    );\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n    );\r\n    try {\r\n      const res = await getAllSM(\r\n        this.props.service,\r\n        \"\",\r\n        !!verifyToken ? verifyToken : this.state.token\r\n      );\r\n      console.log(\r\n        \"succes from api : Produit =>  (getStructures-Marchandise()) => :\",\r\n        res\r\n      );\r\n      var TreeSM = makeTree(res.data, null);\r\n      console.log(res.data, \"=> tree =>\", TreeSM);\r\n\r\n      this.setState({\r\n        TreeSM,\r\n      });\r\n      console.log(\r\n        \"-------------------fin-GetStructures-Marchandise-------------------\"\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"Error from api : Produit =>  getStructures-Marchandise  => : \",\r\n        error\r\n      );\r\n\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"500\");\r\n      }\r\n      console.log(\r\n        \"-------------------fin-GetStructures-Marchandise-------------------\"\r\n      );\r\n    }\r\n  }\r\n  onSearch = (value) => {\r\n    console.log(\"------------------debut-onSearch------------------\");\r\n    console.log(\"Rechercher par => :\", value);\r\n    this.props.goTo(userAdvancedSearchPath + \"?search=\" + value);\r\n    console.log(\"-------------------fin-onSearch-------------------\");\r\n  };\r\n  onFilter = (value) => {\r\n    console.log(\"------------------debut-onSearch------------------\");\r\n    console.log(\"Filtrer par => :\", value);\r\n    this.props.goTo(userAdvancedSearchPath + \"?\" + value);\r\n    console.log(\"-------------------fin-onSearch-------------------\");\r\n  };\r\n  onFinish = async (values) => {\r\n    console.log(\r\n      \"------------------debut-Submit-NewVarianteVente------------------\"\r\n    );\r\n    var loadingOnsubmit = true;\r\n    message.loading(\"Loading..\", loadingOnsubmit);\r\n    try {\r\n      // console.log(\"filtre => : \", values);\r\n      const filtre =\r\n        \"&RFRLIBC=\" +\r\n        (values.RFRLIBC != null ? values.RFRLIBC : \"\") +\r\n        \"&RFRLIBL=\" +\r\n        (values.RFRLIBL != null ? values.RFRLIBL : \"\") +\r\n        \"&RFRTYPE=\" +\r\n        (values.RFRTYPE != null ? values.RFRTYPE : \"\") +\r\n        \"&RFRDEVISE=\" +\r\n        (values.RFRDEVISE != null ? values.RFRDEVISE : \"\") +\r\n        \"&RFRPAYS=\" +\r\n        (values.RFRPAYS != null ? values.RFRPAYS : \"\");\r\n      console.log(\"filtre => : \", filtre);\r\n      this.onFilter(filtre);\r\n\r\n      console.log(\r\n        \"------------------fin-Submit-NewVarianteVente------------------\"\r\n      );\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      console.log(\r\n        \"------------------fin-Submit-NewVarianteVente------------------\"\r\n      );\r\n    }\r\n  };\r\n\r\n  onSubmit = () => {\r\n    this.formRef.current.submit();\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n    // console.log(this.formRef.current);\r\n  };\r\n  render() {\r\n    const { visible } = this.state;\r\n    return (\r\n      <div\r\n        style={{ height: \"100%\", width: this.state.width, paddingTop: \"90px\" }}\r\n      >\r\n        <Affix\r\n          offsetTop={150}\r\n          style={{ position: \"fixed\", left: \"95%\", top: \"90%\" }}\r\n        >\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"circle\"\r\n            size={\"large\"}\r\n            onClick={() => this.props.goTo(userCreationPath)}\r\n            // style={{ width: \"50px\", height: \"50px\" }}\r\n          >\r\n            <PlusOutlined />\r\n          </Button>\r\n        </Affix>\r\n        <Modal\r\n          title=\"Recherche avancée\"\r\n          centered\r\n          visible={visible}\r\n          onOk={() => {\r\n            this.onSubmit();\r\n            this.setState({ visible: false });\r\n          }}\r\n          onCancel={() => {\r\n            this.setState({ visible: false });\r\n            this.onReset();\r\n          }}\r\n          okText=\"Apply filter\"\r\n          // cancelText=\"取消\"\r\n          width={800}\r\n        >\r\n          <ConfigProvider form={{ validateMessages: validateMessages.fr }}>\r\n            {/* <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"baseline\",\r\n              }}\r\n            >\r\n              <Typography\r\n                style={{\r\n                  display: \"flex\",\r\n                  fontSize: \"15px\",\r\n                  fontWeight: \"600\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                Recherche avancée\r\n              </Typography>\r\n              <Button\r\n                type=\"text\"\r\n                icon={<ClearOutlined />}\r\n                onClick={() => this.onReset()}\r\n              />\r\n            </div> */}\r\n            <Form\r\n              ref={this.formRef}\r\n              layout=\"vertical\"\r\n              name=\"control-ref\"\r\n              // initialValues={{\r\n              //   RPRTYPE: 1,\r\n              //   RPRETAT: 1,\r\n              //   RPRCINSM: 1,\r\n              //   RPRUSTOCK: 1,\r\n              //   RPRIGARANTI: false,\r\n              //   RPRIDAnger: false,\r\n              // }}\r\n              onFinish={this.onFinish}\r\n            >\r\n              <Row gutter={[20, 20]} justify=\"center\" align=\"stretch\">\r\n                <Col span={24}>\r\n                  <Row gutter={[16, 0]} align=\"stretch\" justify=\"space-between\">\r\n                    <Col span={8}>\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col flex=\"auto\">\r\n                          <Form.Item\r\n                            label=\"Acronyme\"\r\n                            style={{\r\n                              marginBottom: \"15px\",\r\n                            }}\r\n                            name={\"RFRLIBC\"}\r\n                          >\r\n                            <Input placeholder=\"Entrer l'acronyme...\" />\r\n                          </Form.Item>{\" \"}\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>{\" \"}\r\n                    <Col span={16}>\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col flex=\"auto\">\r\n                          <Form.Item\r\n                            style={{\r\n                              marginBottom: \"15px\",\r\n                            }}\r\n                            label=\"Libelle\"\r\n                            name={\"RFRLIBL\"}\r\n                          >\r\n                            <Input placeholder=\"Entrer libelle...\" />\r\n                          </Form.Item>{\" \"}\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col flex=\"auto\">\r\n                          <Form.Item\r\n                            style={{\r\n                              marginBottom: \"15px\",\r\n                            }}\r\n                            label=\"Type\"\r\n                            name={\"RFRTYPE\"}\r\n                          >\r\n                            <Select\r\n                              allowClear\r\n                              placeholder=\"Selectionner le type...\"\r\n                            >\r\n                              <Select.Option value={2}>\r\n                                Consommable\r\n                              </Select.Option>\r\n                              <Select.Option value={1}>Service</Select.Option>\r\n                            </Select>\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>{\" \"}\r\n                    <Col span={8}>\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col flex=\"auto\">\r\n                          <Form.Item\r\n                            name={\"RFRDEVISE\"}\r\n                            label=\"Devise\"\r\n                            style={{\r\n                              marginBottom: \"15px\",\r\n                            }}\r\n                          >\r\n                            <TreeSelect\r\n                              // treeDataSimpleMode\r\n                              style={{ width: \"100%\" }}\r\n                              // value={this.state.value}\r\n                              dropdownStyle={{\r\n                                maxHeight: 190,\r\n                                overflow: \"auto\",\r\n                              }}\r\n                              onChange={this.onChange}\r\n                              // loadData={this.onLoadData}\r\n                              showSearch\r\n                              style={{ width: \"100%\" }}\r\n                              placeholder=\"Selectionner la catégorie​...\"\r\n                              allowClear\r\n                              treeDefaultExpandAll\r\n                              treeData={this.state.TreeSM}\r\n                              // onChange={onChange}\r\n                            ></TreeSelect>\r\n                          </Form.Item>\r\n                          {/* <Form.Item\r\n                            style={{\r\n                              marginBottom: \"15px\",\r\n                            }}\r\n                            label=\"Catégorie\"\r\n                            name={\"RPRCINSM\"}\r\n                          >\r\n                            <Select\r\n                              allowClear\r\n                              placeholder=\"Selectionner l'unité logistique...\"\r\n                            >\r\n                              <Select.Option>service</Select.Option>\r\n                              <Select.Option>consomable</Select.Option>{\" \"}\r\n                            </Select>\r\n                          </Form.Item> */}\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>{\" \"}\r\n                    <Col span={8}>\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col flex=\"auto\">\r\n                          <Form.Item\r\n                            style={{\r\n                              marginBottom: \"15px\",\r\n                            }}\r\n                            label=\"pays\"\r\n                            name={\"RFRPAYS\"}\r\n                          >\r\n                            <Select\r\n                              allowClear\r\n                              placeholder=\"Selectionner l'Unite de stock...\"\r\n                            >\r\n                              <Select.Option value={\"FR\"}>Piece</Select.Option>\r\n                              <Select.Option value={\"DZ\"}>\r\n                                Kilo fix\r\n                              </Select.Option>\r\n                              <Select.Option value={\"ee\"}>\r\n                                Kilo moyen\r\n                              </Select.Option>\r\n                              <Select.Option value={\"4e\"}>\r\n                                kilo Pese\r\n                              </Select.Option>{\" \"}\r\n                            </Select>\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    {/* <Col span={8}>\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col flex=\"auto\">\r\n                          <Form.Item\r\n                            style={{\r\n                              marginBottom: \"15px\",\r\n                            }}\r\n                            label=\"Etat\"\r\n                            style={{\r\n                              // marginBottom: \"10px\",\r\n                              width: \"100%\",\r\n                            }}\r\n                            name={\"RPRETAT\"}\r\n                          >\r\n                            <InputNumber\r\n                              style={{\r\n                                width: \"100%\",\r\n                              }}\r\n                              // placeholder=\"...\"\r\n                            />\r\n                          </Form.Item>{\" \"}\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>{\" \"} */}\r\n                    {/* <Col\r\n                      span={8}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignContent: \"center\",\r\n                        flexWrap: \"wrap\",\r\n                        // marginBottom: \"15px\",\r\n                      }}\r\n                    >\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col flex=\"auto\">\r\n                          <Form.Item\r\n                            style={{ marginBottom: \"15px\" }}\r\n                            name={\"RPRIGARANTI\"}\r\n                            valuePropName=\"checked\"\r\n                            // hasFeedback\r\n                          >\r\n                            <Checkbox>​Garantie</Checkbox>\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>{\" \"} */}\r\n                    {/* <Col\r\n                      span={8}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignContent: \"center\",\r\n                        flexWrap: \"wrap\",\r\n                      }}\r\n                    >\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col flex=\"auto\">\r\n                          <Form.Item\r\n                            style={{ marginBottom: \"15px\" }}\r\n                            name={\"RPRIDAnger\"}\r\n                            valuePropName=\"checked\"\r\n                            // hasFeedback\r\n                          >\r\n                            <Checkbox>Produit dangereux</Checkbox>\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>{\" \"} */}\r\n                    {/* <Divider style={{ margin: \"0px\" }} />\r\n                    <Col span={24}>\r\n                      <Row gutter={[0, 0]} align=\"stretch\">\r\n                        <Col\r\n                          flex=\"auto\"\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"flex-end\",\r\n                            marginTop: \"10px\",\r\n                          }}\r\n                        >\r\n                          <Space>\r\n                            <Button\r\n                              onClick={(e) => {\r\n                                this.props.closeDrawer();\r\n                                this.onReset();\r\n                              }}\r\n                            >\r\n                              close\r\n                            </Button>\r\n                            <Button\r\n                              type=\"primary\"\r\n                              onClick={(e) => {\r\n                                this.onSubmit();\r\n                              }}\r\n                            >\r\n                              Apply Filter\r\n                            </Button>\r\n                          </Space>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>{\" \"} */}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </ConfigProvider>\r\n        </Modal>\r\n        <Row gutter={[16, 30]} align=\"middle\" justify=\"space-around\">\r\n          <Col span={24}>\r\n            <Space>\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/search3.png\"}\r\n                alt=\"ooo\"\r\n                style={{ width: \"410px\" }}\r\n              />\r\n            </Space>\r\n          </Col>{\" \"}\r\n          <Col span={this.state.width == \"\" ? 9 : 15}>\r\n            {\" \"}\r\n            <Row align=\"stretch\" justify=\"space-between\">\r\n              <Col span={2}>\r\n                <Button\r\n                  type=\"primary\"\r\n                  style={{ height: \"100%\" }}\r\n                  onClick={(e) => {\r\n                    this.setState({ visible: true });\r\n                    // this.props.showDrawer(e);\r\n                    // this.setState({ width: 1435 - 400 + \"px\" });\r\n                    // // this.props.setSiseForm(1435 - 350 + \"px\");\r\n                    // this.props.setDrawerState(\r\n                    //   \"\",\r\n                    //   \"ee\",\r\n\r\n                    //   400,\r\n                    //   () => {\r\n                    //     console.log(\"en close drawer\");\r\n                    //     this.setState({ width: \"\" });\r\n                    //     // this.props.setSiseForm(\"\");\r\n                    //   }\r\n                    // );\r\n                  }}\r\n                >\r\n                  <FilterOutlined />\r\n                </Button>\r\n              </Col>\r\n              <Col span={22}>\r\n                <Input.Search\r\n                  placeholder=\"what are you looking for ?\"\r\n                  enterButton=\"Search\"\r\n                  size=\"large\"\r\n                  suffix={suffix}\r\n                  // enterButton\r\n                  onSearch={(e) => this.onSearch(e)}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Searche);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Upload, Form } from \"antd\";\r\n// import ImgCrop from \"antd-img-crop\";\r\n\r\nconst AvatarUpdate = (props) => {\r\n  const [fileList, setFileList] = useState(\r\n    props.defaultValue != null\r\n      ? [\r\n          {\r\n            uid: \"-1\",\r\n            name: \"imagex.png\",\r\n            status: \"done\",\r\n            url: props.defaultValue != null ? props.defaultValue : \"\",\r\n          },\r\n        ]\r\n      : []\r\n  );\r\n  useEffect(async () => {\r\n    console.log(props.defaultValue);\r\n  }, []);\r\n  const onChange = ({ fileList: newFileList }) => {\r\n    setFileList(newFileList);\r\n    console.log(newFileList[0]);\r\n    props.setImage(newFileList[0]);\r\n  };\r\n\r\n  const onPreview = async (file) => {\r\n    let src = file.url;\r\n    if (!src) {\r\n      src = await new Promise((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file.originFileObj);\r\n        reader.onload = () => resolve(reader.result);\r\n      });\r\n    }\r\n    const image = new Image();\r\n    image.src = src;\r\n    const imgWindow = window.open(src);\r\n    imgWindow.document.write(image.outerHTML);\r\n  };\r\n\r\n  return (\r\n    // <ImgCrop rotate>\r\n    // <Form.Item\r\n    //   name={\"MUTPHOTOS\"}\r\n    //   // style={{ marginBottom: \"10px\" }}\r\n    //   rules={[\r\n    //     {\r\n    //       required: true,\r\n    //       // max: 150,\r\n    //     },\r\n    //   ]}\r\n    // >\r\n    <Upload\r\n      className=\"user-avatar\"\r\n      // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n      listType=\"picture-card\"\r\n      fileList={fileList}\r\n      onChange={onChange}\r\n      onPreview={onPreview}\r\n      disabled={props.readOnly}\r\n      style={{ width: \"100%\", objectFit: \"cover\" }}\r\n    >\r\n      {fileList.length < 1 && \"+ Upload\"}\r\n    </Upload>\r\n    // </Form.Item>\r\n    // </ImgCrop>\r\n  );\r\n};\r\nexport default AvatarUpdate;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Divider, Input, Row, message, ConfigProvider } from \"antd\";\r\nimport {\r\n  Button,\r\n  DatePicker,\r\n  Form,\r\n  InputNumber,\r\n  Space,\r\n  TreeSelect,\r\n  Typography,\r\n} from \"dmsui\";\r\nimport { ClearOutlined } from \"@ant-design/icons\";\r\nimport { validateMessages } from \"../../../../Constante\";\r\n\r\nexport default class StructureMarchandiseDrawer extends Component {\r\n  static propTypes = {\r\n    prop: PropTypes,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      value: null,\r\n    };\r\n  }\r\n  formRef = React.createRef();\r\n\r\n  onFinish = async (values) => {\r\n    console.log(\r\n      \"------------------debut-Submit-NewSTMarchandise------------------\"\r\n    );\r\n    var loadingOnsubmit = true;\r\n    message.loading(\"Loading..\", loadingOnsubmit);\r\n    try {\r\n      console.log(values);\r\n      this.props.setNewSM(values);\r\n      this.props.closeDrawer();\r\n      this.onReset();\r\n      console.log(\r\n        \"------------------fin-Submit-NewSTMarchandise------------------\"\r\n      );\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      console.log(\r\n        \"------------------fin-Submit-NewSTMarchandise------------------\"\r\n      );\r\n    }\r\n  };\r\n\r\n  onSubmit = () => {\r\n    this.formRef.current.submit();\r\n    console.log(this.formRef.current);\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n\r\n  labelComposant = (label, Icon) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100px\",\r\n            fontSize: \"14px\",\r\n            fontWeight: \"600\",\r\n          }}\r\n        >\r\n          {label}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  };\r\n  onChange = (value) => {\r\n    console.log(value);\r\n    this.setState({ value });\r\n  };\r\n  render() {\r\n    return (\r\n      <ConfigProvider form={{ validateMessages: validateMessages.fr }}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"baseline\",\r\n          }}\r\n        >\r\n          <Typography\r\n            style={{\r\n              display: \"flex\",\r\n              fontSize: \"15px\",\r\n              fontWeight: \"600\",\r\n              marginBottom: \"15px\",\r\n            }}\r\n          >\r\n            New Categorie\r\n          </Typography>\r\n          <Button\r\n            type=\"text\"\r\n            icon={<ClearOutlined />}\r\n            onClick={() => this.onReset()}\r\n          />\r\n        </div>\r\n        <Form\r\n          ref={this.formRef}\r\n          layout=\"vertical\"\r\n          name=\"control-ref\"\r\n          // initialValues={{ ...this.state.defaultValue }}\r\n          onFinish={this.onFinish}\r\n        >\r\n          <Row gutter={[20, 20]} justify=\"center\" align=\"stretch\">\r\n            <Col span={24}>\r\n              <Row gutter={[16, 0]} align=\"stretch\" justify=\"space-between\">\r\n                <Col span={16}>\r\n                  <Row gutter={[0, 0]} align=\"stretch\">\r\n                    <Col flex=\"auto\">\r\n                      <Form.Item\r\n                        label=\"Code\"\r\n                        name={\"RRSMCEXT\"}\r\n                        //   style={{ marginBottom: \"10px\" }}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            max: 50,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input placeholder=\"Entrer le code...\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Row gutter={[0, 0]} align=\"stretch\">\r\n                    <Col flex=\"auto\">\r\n                      <Form.Item\r\n                        label=\"Max niveaux\"\r\n                        name={\"RRSMNIV\"}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            type: \"number\",\r\n                          },\r\n                        ]}\r\n                        hasFeedback\r\n                      >\r\n                        <InputNumber\r\n                          style={{\r\n                            width: \"100%\",\r\n                          }}\r\n                          placeholder=\"max niveau...\"\r\n                        />\r\n                      </Form.Item>{\" \"}\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <Row gutter={[0, 0]} align=\"stretch\">\r\n                    <Col flex=\"auto\">\r\n                      <Form.Item\r\n                        label=\"Acronyme\"\r\n                        //   style={{ marginBottom: \"10px\" }}\r\n                        name={\"RRSMLIBC\"}\r\n                        rules={[\r\n                          {\r\n                            required: false,\r\n                            max: 35,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input placeholder=\"Entrer l'acronyme'...\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>{\" \"}\r\n                <Col span={24}>\r\n                  <Row gutter={[0, 0]} align=\"stretch\">\r\n                    <Col flex=\"auto\">\r\n                      <Form.Item\r\n                        label=\"Libellé\"\r\n                        name={\"RRSMLIBL\"}\r\n                        rules={[\r\n                          {\r\n                            required: false,\r\n                            max: 50,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input placeholder=\"Entrer libellé...\" />\r\n                      </Form.Item>{\" \"}\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <Row gutter={[0, 0]} align=\"stretch\">\r\n                    <Col flex=\"auto\">\r\n                      <Form.Item\r\n                        name={\"RLRINSMM\"}\r\n                        label=\"Categorie Mére\"\r\n                        style={{\r\n                          // marginBottom: \"10px\",\r\n                          width: \"100%\",\r\n                        }}\r\n                        hasFeedback\r\n                        rules={[\r\n                          {\r\n                            required: false,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <TreeSelect\r\n                          style={{ width: \"100%\" }}\r\n                          value={this.state.value}\r\n                          dropdownStyle={{\r\n                            maxHeight: 190,\r\n                            overflow: \"auto\",\r\n                          }}\r\n                          onChange={this.onChange}\r\n                          showSearch\r\n                          style={{ width: \"100%\" }}\r\n                          placeholder=\"Selectionner la catégorie​...\"\r\n                          allowClear\r\n                          treeDefaultExpandAll\r\n                          treeData={this.props.SMListes}\r\n                        ></TreeSelect>\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <Row gutter={[0, 0]} align=\"stretch\">\r\n                    <Col flex=\"auto\">\r\n                      <Form.Item\r\n                        label=\"Date Début\"\r\n                        style={{\r\n                          width: \"100%\",\r\n                        }}\r\n                        name={\"RLRDDEB\"}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                          },\r\n                        ]}\r\n                        hasFeedback\r\n                      >\r\n                        <DatePicker\r\n                          showTime\r\n                          format=\"YYYY-MM-DD HH:mm:ss\"\r\n                          style={{\r\n                            width: \"100%\",\r\n                          }}\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                      </Form.Item>{\" \"}\r\n                    </Col>\r\n                  </Row>\r\n                </Col>{\" \"}\r\n                <Divider />\r\n                <Col span={24}>\r\n                  <Row gutter={[0, 0]} align=\"stretch\">\r\n                    <Col\r\n                      flex=\"auto\"\r\n                      style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n                    >\r\n                      <Space>\r\n                        <Button\r\n                          onClick={(e) => {\r\n                            this.props.closeDrawer();\r\n                            this.onReset();\r\n                          }}\r\n                        >\r\n                          close\r\n                        </Button>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e) => {\r\n                            this.onSubmit();\r\n                          }}\r\n                        >\r\n                          submit\r\n                        </Button>\r\n                      </Space>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>{\" \"}\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </ConfigProvider>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Input, Row } from \"antd\";\r\nimport { Button, Checkbox, Form, Select, TreeSelect, Typography } from \"dmsui\";\r\n\r\nimport { AppstoreAddOutlined, GlobalOutlined } from \"@ant-design/icons\";\r\n\r\nimport StructureMarchandiseDrawer from \"./StructureMarchandiseDrawer\";\r\n\r\nfunction makeTree(nodes, parentId) {\r\n  return nodes\r\n    .filter((node) => node.mere === parentId)\r\n    .reduce(\r\n      (tree, node) => [\r\n        ...tree,\r\n        {\r\n          // ...node,\r\n          title: node.RRSMLIBL,\r\n          value: node.ID_ROWID,\r\n          children: makeTree(nodes, node.ID_ROWID),\r\n        },\r\n      ],\r\n      []\r\n    );\r\n}\r\nexport default class TabInput extends Component {\r\n  static propTypes = {\r\n    prop: PropTypes,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      TreeSM: [],\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.AllSM !== this.props.AllSM) {\r\n      var TreeSM = makeTree(this.props.AllSM, null);\r\n      console.log(this.props.AllSM, \"=> tree =>\", TreeSM);\r\n      this.setState({ TreeSM });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    var TreeSM = makeTree(this.props.AllSM, null);\r\n    console.log(this.props.AllSM, \"=> tree =>\", TreeSM);\r\n    this.setState({ TreeSM });\r\n  }\r\n\r\n  labelComposant = (label, Icon) => {\r\n    return (\r\n      <div\r\n        className={\"ant-input-group-addon\"}\r\n        style={{\r\n          border: \"1px solid #dcdcdc\",\r\n          display: \"inline-flex\",\r\n          width: \"128px\",\r\n          // backgroundColor: \"#fafafa\",\r\n          paddingLeft: \"10px\",\r\n          height: \"32px\",\r\n          width: \"25%\",\r\n        }}\r\n      >\r\n        <div\r\n          //\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          <Typography\r\n            className={\"text-input-group\"}\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"120px\",\r\n              // color: \"#fff\",\r\n              fontSize: \"14px\",\r\n              fontWeight: \"600\",\r\n            }}\r\n          >\r\n            {label}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { update, handleInputChange } = this.props;\r\n    return (\r\n      <Row gutter={[20, 20]} justify=\"center\" align=\"stretch\">\r\n        <Col span={24}>\r\n          <Row gutter={[16, 0]} align=\"stretch\" justify=\"space-between\">\r\n            <Col span={12}>\r\n              <Row gutter={[0, 0]} align=\"stretch\">\r\n                <Col flex=\"auto\">\r\n                  <Input.Group compact>\r\n                    {this.labelComposant(\"Type\", GlobalOutlined)}\r\n\r\n                    <Form.Item\r\n                      name={\"RPRTYPE\"}\r\n                      style={{\r\n                        marginBottom: \"15px\",\r\n                        width: \"75%\",\r\n                      }}\r\n                      hasFeedback\r\n                      rules={[\r\n                        {\r\n                          required: false,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        onChange={handleInputChange}\r\n                        allowClear\r\n                        placeholder=\"Selectionner le type...\"\r\n                        disabled={this.props.update ? false : true}\r\n                      >\r\n                        <Select.Option value={2}>Consommable</Select.Option>\r\n                        <Select.Option value={1}>Service</Select.Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Input.Group>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Row gutter={[0, 0]} align=\"stretch\">\r\n                <Col flex=\"auto\">\r\n                  <Input.Group compact>\r\n                    {this.labelComposant(\"Etat\", GlobalOutlined)}\r\n\r\n                    <Form.Item\r\n                      name={\"RPRETAT\"}\r\n                      style={{\r\n                        marginBottom: \"15px\",\r\n                        width: \"75%\",\r\n                      }}\r\n                      hasFeedback\r\n                      rules={[\r\n                        {\r\n                          required: false,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        onChange={handleInputChange}\r\n                        allowClear\r\n                        placeholder=\"Selectionner l'etat'...\"\r\n                        disabled={this.props.update ? false : true}\r\n                      >\r\n                        <Select.Option value={0}>1</Select.Option>\r\n                        <Select.Option value={1}>2</Select.Option>\r\n                        <Select.Option value={2}>3</Select.Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Input.Group>\r\n                </Col>\r\n              </Row>\r\n            </Col>{\" \"}\r\n            <Col span={12}>\r\n              <Row gutter={[0, 0]} align=\"stretch\">\r\n                <Col flex=\"auto\">\r\n                  <Input.Group compact>\r\n                    {this.labelComposant(\"Unité de stock\", GlobalOutlined)}\r\n                    <Form.Item\r\n                      name={\"RPRUSTOCK\"}\r\n                      style={{\r\n                        marginBottom: \"15px\",\r\n                        width: \"75%\",\r\n                      }}\r\n                      hasFeedback\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        onChange={handleInputChange}\r\n                        allowClear\r\n                        placeholder=\"Selectionner l'unité de stock'...\"\r\n                        disabled={this.props.update ? false : true}\r\n                      >\r\n                        <Select.Option value={1}>Piece</Select.Option>\r\n                        <Select.Option value={2}>Kilo fix</Select.Option>\r\n                        <Select.Option value={3}>Kilo moyen</Select.Option>\r\n                        <Select.Option value={4}>kilo Pese</Select.Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Input.Group>\r\n                </Col>\r\n              </Row>\r\n            </Col>{\" \"}\r\n            <Col span={12}>\r\n              <Row gutter={[0, 0]} align=\"stretch\">\r\n                <Col flex=\"auto\">\r\n                  <Input.Group compact>\r\n                    {this.labelComposant(\"Langue\", GlobalOutlined)}\r\n\r\n                    <Form.Item\r\n                      name={\"RPRLANGUE\"}\r\n                      style={{\r\n                        marginBottom: \"15px\",\r\n                        width: \"75%\",\r\n                      }}\r\n                      hasFeedback\r\n                      rules={[\r\n                        {\r\n                          required: false,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        onChange={handleInputChange}\r\n                        allowClear\r\n                        placeholder=\"Selectionner la langue...\"\r\n                        disabled={this.props.update ? false : true}\r\n                      >\r\n                        <Select.Option value={\"en\"}>Anglais</Select.Option>\r\n                        <Select.Option value={\"fr\"}>Français</Select.Option>\r\n                        <Select.Option value={\"ar\"}>Arabe</Select.Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Input.Group>\r\n                </Col>\r\n              </Row>\r\n            </Col>{\" \"}\r\n            <Col span={12}>\r\n              <Row gutter={[0, 0]} align=\"stretch\" wrap={false}>\r\n                <Col flex=\"auto\">\r\n                  <Input.Group compact>\r\n                    {this.labelComposant(\"Categorie\", GlobalOutlined)}\r\n\r\n                    <Form.Item\r\n                      name={\"RPRCINSM\"}\r\n                      style={{\r\n                        marginBottom: \"15px\",\r\n                        width: \"75%\",\r\n                      }}\r\n                      hasFeedback\r\n                      rules={[\r\n                        {\r\n                          required: false,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <TreeSelect\r\n                        disabled={this.props.update ? false : true}\r\n                        // treeDataSimpleMode\r\n                        style={{ width: \"100%\" }}\r\n                        // value={this.state.value}\r\n                        dropdownStyle={{\r\n                          maxHeight: 190,\r\n                          overflow: \"auto\",\r\n                        }}\r\n                        onChange={this.onChange}\r\n                        // loadData={this.onLoadData}\r\n                        showSearch\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"Selectionner la catégorie​...\"\r\n                        allowClear\r\n                        treeDefaultExpandAll\r\n                        treeData={this.state.TreeSM}\r\n                        // onChange={onChange}\r\n                      ></TreeSelect>\r\n                    </Form.Item>\r\n                  </Input.Group>\r\n                </Col>\r\n                <Col\r\n                  flex=\"40px\"\r\n                  style={{\r\n                    marginBottom: \"15px\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={this.props.update ? false : true}\r\n                    onClick={(e) => {\r\n                      this.props.showDrawer(e);\r\n                      this.props.setSiseForm(1435 - 500 + \"px\");\r\n                      this.props.setDrawerState(\r\n                        \"\",\r\n                        <StructureMarchandiseDrawer\r\n                          SMListes={this.state.TreeSM}\r\n                          setNewSM={(datas) => this.props.setNewSM(datas)}\r\n                          closeDrawer={() => this.props.closeDrawer()}\r\n                        />,\r\n                        500,\r\n                        () => {\r\n                          console.log(\"en close drawer\");\r\n                          this.props.setSiseForm(\"\");\r\n                        }\r\n                      );\r\n                    }}\r\n                    icon={<AppstoreAddOutlined />}\r\n                    size={\"small\"}\r\n                    style={{\r\n                      height: \"100%\",\r\n                      width: \"100%\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col\r\n              span={6}\r\n              style={{\r\n                display: \"flex\",\r\n                alignContent: \"center\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              <Row gutter={[0, 0]} align=\"stretch\">\r\n                <Col flex=\"auto\">\r\n                  <Form.Item\r\n                    style={{ marginBottom: \"15px\" }}\r\n                    name={\"RPRIGARANTI\"}\r\n                    valuePropName=\"checked\"\r\n                    // hasFeedback\r\n                  >\r\n                    <Checkbox disabled={this.props.update ? false : true}>\r\n                      ​Garantie\r\n                    </Checkbox>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </Col>{\" \"}\r\n            <Col\r\n              span={6}\r\n              style={{\r\n                display: \"flex\",\r\n                alignContent: \"center\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              <Row gutter={[0, 0]} align=\"stretch\">\r\n                <Col flex=\"auto\">\r\n                  <Form.Item\r\n                    style={{ marginBottom: \"15px\" }}\r\n                    name={\"RPRIDAnger\"}\r\n                    valuePropName=\"checked\"\r\n                    // hasFeedback\r\n                  >\r\n                    <Checkbox disabled={this.props.update ? false : true}>\r\n                      Produit dangereux\r\n                    </Checkbox>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </Col>{\" \"}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport { Table, Input, Popconfirm, Form } from \"antd\";\r\nimport {\r\n  Col,\r\n  DatePicker,\r\n  InputNumber,\r\n  Modal,\r\n  Row,\r\n  Select,\r\n  Typography,\r\n} from \"dmsui\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport VarianteVenteDrawer from \"./AdresseDrawer\";\r\nimport TitleCustomize from \"./TitleCustomize\";\r\nimport moment from \"moment\";\r\nconst expandable = {\r\n  expandedRowRender: (record) => <p>{record.description}</p>,\r\n};\r\nconst pagination = { position: \"bottom\" };\r\nconst vueSysteme = [];\r\nfor (let i = 1; i <= 1; i++) {\r\n  vueSysteme.push({\r\n    titre: \"Vue systéme \" + i,\r\n    check: true,\r\n  });\r\n}\r\nconst vuesPersonnalises = [];\r\nfor (let i = 1; i <= 3; i++) {\r\n  vuesPersonnalises.push({\r\n    titre: \"Vues personnalisés \" + i,\r\n    check: false,\r\n  });\r\n}\r\n\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(\r\n      `selectedRowKeys: ${selectedRowKeys}`,\r\n      \"selectedRows: \",\r\n      selectedRows\r\n    );\r\n  },\r\n  onSelect: (record, selected, selectedRows) => {\r\n    console.log(record, selected, selectedRows);\r\n  },\r\n  onSelectAll: (selected, selectedRows, changeRows) => {\r\n    console.log(selected, selectedRows, changeRows);\r\n  },\r\n};\r\n//befor\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  pattern,\r\n  max,\r\n  required,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  setUpdateAdresse,\r\n  Uls,\r\n  disabled,\r\n  type,\r\n  update,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n  useEffect(() => {\r\n    // console.log(\"tinane voila la\", max, \"record\", record, \"update => \", update);\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      console.log(\"Adresse update => \", values, \"recorde\", record);\r\n\r\n      toggleEdit();\r\n      setUpdateAdresse(record, values);\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log(\"Save failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        // rules={[\r\n        //   {\r\n        //     // required: required,\r\n        //     // max: max,\r\n        //     // pattern: pattern,\r\n        //     // message: `${title} is required.`,\r\n        //   },\r\n        // ]}\r\n      >\r\n        {type == \"number\" ? (\r\n          <InputNumber\r\n            size=\"small\"\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n            // readOnly={!update}\r\n          />\r\n        ) : type == \"select\" ? (\r\n          <Select\r\n            size=\"small\"\r\n            // style={{ width: \"100%\" }}\r\n            showSearch\r\n            // style={{ width: 200 }}\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n            optionFilterProp=\"children\"\r\n          >\r\n            {/* {Uls != null &&\r\n              Uls.map((Ul, index) => (\r\n                <Select.Option value={!!Ul.titre ? index : Ul.ID_ROWID}>\r\n                  {!!Ul.titre\r\n                    ? Ul.titre\r\n                    : getUlType(Ul.RPULTYPUL) + \", (\" + Ul.cextVl + \")\"}\r\n                </Select.Option>\r\n              ))} */}\r\n            <Select.Option value={0}>UVC</Select.Option>\r\n          </Select>\r\n        ) : (\r\n          <Input\r\n            size=\"small\"\r\n            // readOnly={!update}\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n          />\r\n        )}\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{\r\n          paddingRight: 24,\r\n        }}\r\n        onClick={toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\nconst DescriptionItem = ({ title, content }) => (\r\n  <div style={{ display: \"flex\" }}>\r\n    <p style={{ marginRight: \"10px\" }}>{title}:</p>\r\n    <Typography.Paragraph type=\"secondary\">\r\n      {content}\r\n      {/* editable={{ onChange: null }} */}\r\n    </Typography.Paragraph>{\" \"}\r\n  </div>\r\n);\r\nexport default class AdresseTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: \"Pays\",\r\n        max: 30,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        disabled: this.props.update,\r\n        dataIndex: \"RFAPAYS\",\r\n        width: \"14%\",\r\n        type: \"select\",\r\n        fixed: \"left\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n\r\n      {\r\n        title: \"Region\",\r\n        max: 10,\r\n        pattern: \"^[a-zA-Z0-9_-]+$\",\r\n        required: false,\r\n        type: \"select\",\r\n        disabled: this.props.update,\r\n        dataIndex: \"RFAREG\",\r\n        width: \"14%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n      },\r\n\r\n      {\r\n        title: \"Ville\",\r\n        max: 4,\r\n        pattern: \"^[0-9]*$\",\r\n        required: false,\r\n        dataIndex: \"RFAVILLE\",\r\n        width: \"14%\",\r\n        type: \"select\",\r\n        ellipsis: true,\r\n        editable: true,\r\n      },\r\n\r\n      {\r\n        title: \"Bureau distributeur\",\r\n        max: 15,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RFABDIST\",\r\n        // render: (_, record) => (\r\n        //   <Button\r\n        //     type=\"text\"\r\n        //     icon={<CodeSandboxOutlined />}\r\n        //     onClick={() => {\r\n        //       console.log(record);\r\n        //       this.showModalUL(record.RPVVCINUL);\r\n        //     }}\r\n        //   />\r\n        // ),\r\n        width: \"18%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Code postal\",\r\n        max: 5,\r\n        type: \"number\",\r\n        required: false,\r\n        dataIndex: \"RFACPOST\",\r\n        width: \"15%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Rue\",\r\n        max: 15,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RFARUE\",\r\n\r\n        width: \"20%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"\",\r\n        fixed: \"right\",\r\n\r\n        width: \"5%\",\r\n        dataIndex: \"operation\",\r\n        render: (_, record) =>\r\n          this.props.update && this.state.dataSource.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              {/* <a>Delete</a> */}\r\n              <DeleteOutlined style={{ color: \"#f44336\" }} />\r\n            </Popconfirm>\r\n          ) : null,\r\n      },\r\n    ];\r\n    this.state = {\r\n      // after\r\n      VLUL: [],\r\n      visible: false,\r\n      confirmLoading: false,\r\n      modalText: \"Content of the modal\",\r\n      bordered: false,\r\n      loading: false,\r\n      pagination,\r\n\r\n      expandable,\r\n      showHeader: true,\r\n      rowSelection: {},\r\n      scroll: undefined,\r\n      hasData: true,\r\n      tableLayout: undefined,\r\n      top: \"none\",\r\n      bottom: \"bottomRight\",\r\n\r\n      //before\r\n      dataSource: [],\r\n      count: 2,\r\n    };\r\n  }\r\n\r\n  getDataSource() {\r\n    return this.state.dataSource;\r\n  }\r\n  handleDelete = (keyy) => {\r\n    const dataSource = [...this.state.dataSource];\r\n    // console.log(dataSource, key);\r\n    const result = dataSource.findIndex(({ key }) => key == keyy);\r\n    console.log(dataSource, result);\r\n    this.props.setDeleteAdresse(dataSource[result]);\r\n    this.setState({\r\n      dataSource: dataSource.filter((item) => item.key !== keyy),\r\n    });\r\n  };\r\n  handleAdd = (datas) => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = datas;\r\n    newData.key = dataSource.length;\r\n\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n  handleSave = (row) => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, { ...item, ...row });\r\n    this.setState({\r\n      dataSource: newData,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    console.log(\"datas\", this.props.datasource);\r\n    this.props.datasource != null &&\r\n      this.props.datasource.map((data, index) => {\r\n        Object.assign(data, {\r\n          key: index,\r\n        });\r\n      });\r\n    this.setState({\r\n      dataSource: this.props.datasource != null ? this.props.datasource : [],\r\n    });\r\n\r\n    this.setState({\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  showModal = (data) => {\r\n    console.log(data);\r\n    this.setState({\r\n      visible: true,\r\n      width: 380,\r\n      contenu: (\r\n        <Row\r\n          gutter={[5, 5]}\r\n          // align=\"top\"\r\n          style={{\r\n            minHeight: \"180px\",\r\n            maxHeight: \"180px\",\r\n            // overflowY: \"auto\",\r\n          }}\r\n        >\r\n          {!!data && (\r\n            <Col\r\n              span={24}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <DatePicker.RangePicker\r\n                showTime\r\n                bordered={false}\r\n                defaultValue={[\r\n                  moment(data[0].PRCDDEB, \"YYYY-MM-DD HH:mm:ss\"),\r\n                  moment(data[0].PRCDFIN, \"YYYY-MM-DD HH:mm:ss\"),\r\n                ]}\r\n              />\r\n              {/* <DatePicker.RangePicker showTime /> */}\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/codeBarre.png\"}\r\n                style={{ width: \"300px\" }}\r\n              />{\" \"}\r\n              <Typography style={{ fontSize: \"17px\" }}>\r\n                {data[0].PRCCODE + \"\"}\r\n              </Typography>{\" \"}\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      ),\r\n      title: \"Code Bare\",\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      modalText: \"The modal will be closed after two seconds\",\r\n      confirmLoading: true,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({ visible: false, confirmLoading: false });\r\n    }, 2000);\r\n  };\r\n  handleCancel = () => {\r\n    console.log(\"Clicked cancel button\", this.state.VLUL);\r\n\r\n    this.setState({ visible: false });\r\n  };\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable || !this.props.update) {\r\n        return col;\r\n      }\r\n      console.log(\"boom ka => \", this.props.update);\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          max: col.max,\r\n          required: col.required,\r\n          disabled: col.disabled,\r\n          pattern: col.pattern,\r\n          type: col.type,\r\n          update: this.props.update,\r\n          handleSave: this.handleSave,\r\n          Uls: this.state.VLUL,\r\n          setUpdateAdresse: this.props.setUpdateAdresse,\r\n        }),\r\n      };\r\n    });\r\n\r\n    // ajouter de datatable\r\n    const { xScroll, yScroll, ...state } = this.state;\r\n    const scroll = {};\r\n    if (yScroll) {\r\n      scroll.y = 240;\r\n    }\r\n    if (xScroll) {\r\n      scroll.x = \"100vw\";\r\n    }\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <Table\r\n          className=\"template-dms\"\r\n          title={() => (\r\n            <TitleCustomize\r\n              vues={{\r\n                vueSysteme: vueSysteme,\r\n                vuesPersonnalises: vuesPersonnalises,\r\n              }}\r\n              title={\"Adresse\"}\r\n              activeAdd={this.props.update}\r\n              enAdd={(e) => {\r\n                this.props.showDrawer(e);\r\n                this.props.setSiseForm(1435 - 500 + \"px\");\r\n                this.props.setDrawerState(\r\n                  \"\",\r\n                  <VarianteVenteDrawer\r\n                    ListAllUL={this.props.ListAllUL}\r\n                    ListUL={this.props.ListUL}\r\n                    setNewAdresse={(Adresse) =>\r\n                      this.props.setNewAdresse(Adresse)\r\n                    }\r\n                    closeDrawer={() => this.props.closeDrawer()}\r\n                    addVV={(datas) => this.handleAdd(datas)}\r\n                    isLoading={this.props.isLoading}\r\n                    changecome={this.props.changecome}\r\n                    updateCtc={this.props.updateCtc}\r\n                    onFormulaireChange={(value) =>\r\n                      this.props.onFormulaireChange(value)\r\n                    }\r\n                    token={this.props.token}\r\n                    hostStorage={this.props.hostStorage}\r\n                    goTo={(link) => this.props.goTo(link)}\r\n                    handleInputChange={this.props.handleInputChange}\r\n                    user_id={this.props.user_id}\r\n                    service={this.props.service}\r\n                  />,\r\n                  500,\r\n                  () => {\r\n                    console.log(\"en close drawer\");\r\n                    this.props.setSiseForm(\"\");\r\n                  }\r\n                );\r\n              }}\r\n              type=\"primary\"\r\n              style={{\r\n                marginBottom: 16,\r\n              }}\r\n            />\r\n          )}\r\n          size=\"small\"\r\n          pagination={{ position: [this.state.top, this.state.bottom] }}\r\n          scroll={{ x: 500 }}\r\n          components={components}\r\n          rowSelection={{ ...rowSelection }}\r\n          rowClassName={() => \"editable-row\"}\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n        />{\" \"}\r\n        <Modal\r\n          title={this.state.title}\r\n          width={this.state.width}\r\n          visible={this.state.visible}\r\n          onOk={this.handleCancel}\r\n          confirmLoading={this.state.confirmLoading}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          {this.state.contenu}\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Divider, Input, Row, message, ConfigProvider } from \"antd\";\r\nimport {\r\n  Button,\r\n  DatePicker,\r\n  Form,\r\n  InputNumber,\r\n  Select,\r\n  Space,\r\n  Typography,\r\n  Upload,\r\n} from \"dmsui\";\r\n\r\nimport {\r\n  ClearOutlined,\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport { validateMessages } from \"../../../../Constante\";\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\nexport default class VarianteVenteDrawer extends Component {\r\n  static propTypes = {\r\n    prop: PropTypes,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      VLUL: [],\r\n      userData: [],\r\n      loadingPhoto: false,\r\n      changecome: false,\r\n      Profiles: [],\r\n      loading: true,\r\n      form: {},\r\n      photo: null,\r\n      targetKeys: [],\r\n      update: true,\r\n      defaultValue: this.props.contact != null ? this.props.contact[0] : null,\r\n      // null,\r\n\r\n      datas: { US_EMAIL: \"\", US_NOMUSR: \"\", US_PRNUSR: \"\", US_TYPUSR: \"\" },\r\n    };\r\n  }\r\n  formRef = React.createRef();\r\n\r\n  activerUpdate() {}\r\n  onChange = (keys) => {\r\n    this.setState({ targetKeys: keys });\r\n  };\r\n  getUlType(type) {\r\n    switch (type) {\r\n      case 0:\r\n        return \"uvc\";\r\n      case 1:\r\n        return \"sub-carton\";\r\n      case 2:\r\n        return \"carton\";\r\n      case 3:\r\n        return \"couche\";\r\n      case 3:\r\n        return \"palette\";\r\n      default:\r\n        return \"autre\";\r\n    }\r\n  }\r\n  onFinish = async (values) => {\r\n    console.log(\"------------------debut-Submit-NewAdresse------------------\");\r\n\r\n    var loadingOnsubmit = true;\r\n    message.loading(\"Loading..\", loadingOnsubmit);\r\n    try {\r\n      console.log(values);\r\n      this.props.setNewAdresse(values);\r\n      this.props.closeDrawer();\r\n      this.props.addVV(values);\r\n      this.onReset();\r\n      this.setState({ VLUL: [] });\r\n      console.log(\"------------------fin-Submit-NewAdresse------------------\");\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      console.log(\"------------------fin-Submit-NewAdresse------------------\");\r\n    }\r\n  };\r\n\r\n  onSubmit = () => {\r\n    this.formRef.current.submit();\r\n    console.log(this.formRef.current);\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n    this.setState({ changecome: false });\r\n    // console.log(this.formRef.current);\r\n  };\r\n  handleChange = (info) => {\r\n    getBase64(info.file.originFileObj, (imageUrl) =>\r\n      this.setState({\r\n        imageUrl,\r\n        loadingPhoto: false,\r\n      })\r\n    );\r\n    // }\r\n  };\r\n\r\n  labelComposant = (label, Icon) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100px\",\r\n            fontSize: \"14px\",\r\n            fontWeight: \"600\",\r\n          }}\r\n        >\r\n          {label}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  };\r\n  componentDidMount() {\r\n    console.log(\"all ul\", this.props.ListAllUL);\r\n    this.props.ListUL != null &&\r\n      this.props.ListUL.map((Vl, indexVl) => {\r\n        // console.log(\"ul nta3 vl => \", Vl);\r\n\r\n        Vl.UL != null &&\r\n          Vl.UL.map((Ul, indexUl) => {\r\n            const { VLUL } = this.state;\r\n            VLUL.push({\r\n              VL: indexVl,\r\n              UL: indexUl,\r\n              titre: Vl.RPLLCEXT + \" \" + Ul.RPULTYPUL,\r\n            });\r\n          });\r\n      });\r\n    this.setState({\r\n      loading: false,\r\n      VLUL: this.props.ListAllUL.concat(this.state.VLUL),\r\n    });\r\n    console.log(\"all ul finale\", this.state.VLUL);\r\n  }\r\n  render() {\r\n    const { isLoading, handleInputChange } = this.props;\r\n    const { loadingPhoto, imageUrl } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        {loadingPhoto ? <LoadingOutlined /> : <PlusOutlined />}\r\n        <div style={{ marginTop: 8 }}>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      !this.state.loading && (\r\n        <ConfigProvider form={{ validateMessages: validateMessages.fr }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"baseline\",\r\n            }}\r\n          >\r\n            <Typography\r\n              style={{\r\n                display: \"flex\",\r\n                fontSize: \"15px\",\r\n                fontWeight: \"600\",\r\n                marginBottom: \"15px\",\r\n              }}\r\n            >\r\n              New adresse\r\n            </Typography>\r\n            <Button\r\n              type=\"text\"\r\n              icon={<ClearOutlined />}\r\n              onClick={() => this.onReset()}\r\n            />\r\n          </div>\r\n          <Form\r\n            ref={this.formRef}\r\n            layout=\"vertical\"\r\n            name=\"control-ref\"\r\n            initialValues={{ ...this.state.defaultValue }}\r\n            onFinish={this.onFinish}\r\n          >\r\n            <Row gutter={[20, 20]} justify=\"center\" align=\"stretch\">\r\n              <Col span={24}>\r\n                <Row gutter={[16, 0]} align=\"stretch\" justify=\"space-between\">\r\n                  <Col span={12}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          label=\"Region\"\r\n                          name={\"RFAREG\"}\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                              // max: 35,\r\n                            },\r\n                          ]}\r\n                          hasFeedback\r\n                        >\r\n                          <Select\r\n                            allowClear\r\n                            placeholder=\"Selectionner la region...\"\r\n                          >\r\n                            <Select.Option value={\"nord\"}>nord</Select.Option>\r\n                            <Select.Option value={\"est\"}>est</Select.Option>\r\n                          </Select>\r\n                        </Form.Item>{\" \"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                  <Col span={12}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          label=\"Pays\"\r\n                          name={\"RFAPAYS\"}\r\n                          hasFeedback\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            allowClear\r\n                            placeholder=\"Selectionner le pays...\"\r\n                          >\r\n                            <Select.Option value={0}>algerie</Select.Option>\r\n                          </Select>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                  <Col span={18}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          label=\"Ville\"\r\n                          style={{\r\n                            // marginBottom: \"10px\",\r\n                            width: \"100%\",\r\n                          }}\r\n                          name={\"RFAVILLE\"}\r\n                          hasFeedback\r\n                        >\r\n                          <Select\r\n                            allowClear\r\n                            placeholder=\"Selectionner la ville...\"\r\n                          >\r\n                            <Select.Option value={\"tlemcen\"}>\r\n                              Tlemcen\r\n                            </Select.Option>\r\n                          </Select>\r\n                          {/* <InputNumber\r\n                            style={{\r\n                              width: \"100%\",\r\n                            }}\r\n                            placeholder=\"...\"\r\n                          /> */}\r\n                        </Form.Item>{\" \"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                  <Col span={6}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          label=\"Code postale\"\r\n                          style={{\r\n                            // marginBottom: \"10px\",\r\n                            width: \"100%\",\r\n                          }}\r\n                          name={\"RFACPOST\"}\r\n                          hasFeedback\r\n                        >\r\n                          <InputNumber\r\n                            style={{\r\n                              width: \"100%\",\r\n                            }}\r\n                            placeholder={5000}\r\n                          />\r\n                          {/* <DatePicker.RangePicker\r\n                            showTime\r\n                            style={{\r\n                              width: \"100%\",\r\n                            }}\r\n                          /> */}\r\n                        </Form.Item>{\" \"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                  <Col span={24}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          name={\"RFABDIST\"}\r\n                          label=\"Bureau distributeur\"\r\n                          hasFeedback\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                              max: 2024,\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input.TextArea\r\n                            placeholder=\"Entrer le bureau distributeur...\"\r\n                            rows={4}\r\n                            // readOnly={this.state.update ? false : true}\r\n                            // onChange={this.handleInputChange}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          name={\"RFARUE\"}\r\n                          label=\"Rue\"\r\n                          hasFeedback\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                              max: 2024,\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input.TextArea\r\n                            placeholder=\"Entrer le rue...\"\r\n                            rows={4}\r\n                            // readOnly={this.state.update ? false : true}\r\n                            // onChange={this.handleInputChange}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                  <Divider style={{ margin: \"0px\", marginTop: \"40px\" }} />\r\n                  <Col span={24}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col\r\n                        flex=\"auto\"\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"flex-end\",\r\n                          marginTop: \"10px\",\r\n                        }}\r\n                      >\r\n                        <Space>\r\n                          <Button\r\n                            onClick={(e) => {\r\n                              this.props.closeDrawer();\r\n                              this.onReset();\r\n                            }}\r\n                          >\r\n                            close\r\n                          </Button>\r\n                          <Button\r\n                            type=\"primary\"\r\n                            onClick={(e) => {\r\n                              this.onSubmit();\r\n                            }}\r\n                          >\r\n                            submit\r\n                          </Button>\r\n                        </Space>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ConfigProvider>\r\n      )\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Space, Menu, Button, Divider, Row, Col, Dropdown } from \"dmsui\";\r\nimport {\r\n  MoreOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  PushpinOutlined,\r\n  SearchOutlined,\r\n  SyncOutlined,\r\n  PrinterOutlined,\r\n  DownloadOutlined,\r\n  FilterOutlined,\r\n  AppstoreAddOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nexport default class TitleCustomize extends Component {\r\n  render() {\r\n    return (\r\n      <Row justify=\"end\">\r\n        <Col span={20} style={{ display: \"flex\" }}>\r\n          <Space size={0}>\r\n            <Dropdown\r\n              overlay={\r\n                <Menu style={{ minWidth: \"250px\" }} className=\"dms-divder-menu\">\r\n                  <Divider orientation=\"left\" plain>\r\n                    Vues système\r\n                  </Divider>\r\n                  {this.props.vues.vueSysteme.map((data, indes) => (\r\n                    <Menu.Item key=\"1\">\r\n                      <Row>\r\n                        <Col span={2}>\r\n                          <Button\r\n                            type=\"text\"\r\n                            shape=\"circle\"\r\n                            icon={data.check && <PushpinOutlined />}\r\n                            size={\"small\"}\r\n                            // onClick={(e) => e.preventDefault()}\r\n                          />\r\n                        </Col>\r\n                        <Col span={17}>\r\n                          <Divider type=\"vertical\" />\r\n                          {data.titre}\r\n                        </Col>\r\n                        <Col span={5}>\r\n                          <Row wrap={false} justify=\"end\" align=\"middle\">\r\n                            <Col span={24}>\r\n                              <Space>\r\n                                <Button\r\n                                  type=\"text\"\r\n                                  shape=\"circle\"\r\n                                  icon={<EditOutlined />}\r\n                                  size={\"small\"}\r\n                                  // onClick={(e) => e.preventDefault()}\r\n                                />\r\n                                <Button\r\n                                  type=\"text\"\r\n                                  shape=\"circle\"\r\n                                  icon={<DeleteOutlined />}\r\n                                  size={\"small\"}\r\n                                  // onClick={(e) => e.preventDefault()}\r\n                                />\r\n                              </Space>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </Menu.Item>\r\n                  ))}\r\n\r\n                  <Divider orientation=\"left\" plain>\r\n                    Vues personnalisés\r\n                  </Divider>\r\n                  {this.props.vues.vuesPersonnalises.map((data, indes) => (\r\n                    <Menu.Item key=\"1\">\r\n                      <Row>\r\n                        <Col span={2}>\r\n                          <Button\r\n                            type=\"text\"\r\n                            shape=\"circle\"\r\n                            icon={data.check && <PushpinOutlined />}\r\n                            size={\"small\"}\r\n                            // onClick={(e) => e.preventDefault()}\r\n                          />\r\n                        </Col>\r\n                        <Col span={17}>\r\n                          <Divider type=\"vertical\" />\r\n                          {data.titre}\r\n                        </Col>\r\n                        <Col span={5}>\r\n                          <Row wrap={false} justify=\"end\" align=\"middle\">\r\n                            <Col span={24}>\r\n                              <Space>\r\n                                <Button\r\n                                  type=\"text\"\r\n                                  shape=\"circle\"\r\n                                  icon={<EditOutlined />}\r\n                                  size={\"small\"}\r\n                                  // onClick={(e) => e.preventDefault()}\r\n                                />\r\n                                <Button\r\n                                  type=\"text\"\r\n                                  shape=\"circle\"\r\n                                  icon={<DeleteOutlined />}\r\n                                  size={\"small\"}\r\n                                  // onClick={(e) => e.preventDefault()}\r\n                                />\r\n                              </Space>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </Menu.Item>\r\n                  ))}\r\n                  <Menu.Divider />\r\n                  <Menu.Item key=\"3\">\r\n                    <div className=\"vue-personnalisee\">\r\n                      Créer une vue personnalisée\r\n                    </div>\r\n                  </Menu.Item>\r\n                </Menu>\r\n              }\r\n              trigger={[\"click\"]}\r\n            >\r\n              <Button\r\n                type=\"text\"\r\n                // shape=\"circle\"\r\n                icon={\r\n                  <MoreOutlined\r\n                    className=\"dms-table-icon-secandary\"\r\n                    // style={{\r\n                    //   color: '#606060'e\r\n                    // }}\r\n                  />\r\n                }\r\n                // size={\"large\"}\r\n                onClick={(e) => e.preventDefault()}\r\n              />\r\n            </Dropdown>\r\n            {/* <Typography.Title level={5}> */}\r\n            <div\r\n              className=\"dms-table-icon-secandary\"\r\n              style={{\r\n                fontWeight: \"500\",\r\n                fontSize: \"17px\",\r\n                // color: '#444'\r\n              }}\r\n            >\r\n              {\" \"}\r\n              {this.props.title}\r\n            </div>\r\n            {/* </Typography.Title> */}\r\n            <Button\r\n              type=\"text\"\r\n              shape=\"circle\"\r\n              icon={<SyncOutlined className=\"dms-table-icon-primary\" />}\r\n              size={\"small\"}\r\n            />\r\n          </Space>\r\n        </Col>\r\n        <Col\r\n          span={4}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          <Space size={0}>\r\n            <Button\r\n              // shape=\"circle\"\r\n              type=\"text\"\r\n              icon={<SearchOutlined className=\"dms-table-icon-secandary\" />}\r\n              // size={\"large\"}\r\n            />\r\n            <Button\r\n              // shape=\"circle\"\r\n              type=\"text\"\r\n              icon={<PrinterOutlined className=\"dms-table-icon-secandary\" />}\r\n              // size={\"small\"}\r\n            />{\" \"}\r\n            <Button\r\n              // shape=\"circle\"\r\n              type=\"text\"\r\n              icon={<DownloadOutlined className=\"dms-table-icon-secandary\" />}\r\n              // size={\"large\"}\r\n            />{\" \"}\r\n            <Button\r\n              // shape=\"circle\"\r\n              type=\"text\"\r\n              icon={<FilterOutlined className=\"dms-table-icon-secandary\" />}\r\n              // size={\"large\"}\r\n            />\r\n            {this.props.activeAdd != false && (\r\n              <Button\r\n                // shape=\"circle\"\r\n                type=\"text\"\r\n                onClick={(e) => this.props.enAdd(e)}\r\n                icon={\r\n                  <AppstoreAddOutlined className=\"dms-table-icon-primary\" />\r\n                }\r\n                // size={\"large\"}\r\n              />\r\n            )}\r\n          </Space>{\" \"}\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import { List, Avatar, Space, Input, ConfigProvider } from \"antd\";\r\nimport {\r\n  DownloadOutlined,\r\n  DeleteOutlined,\r\n  CloudUploadOutlined,\r\n  SelectOutlined,\r\n  AppstoreAddOutlined,\r\n  SearchOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Upload, Button } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Col,\r\n  Form,\r\n  Modal,\r\n  Popconfirm,\r\n  Row,\r\n  Select,\r\n  Tag,\r\n  Typography,\r\n} from \"dmsui\";\r\nimport { message } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { validateMessages } from \"../../../../Constante\";\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst props = {\r\n  name: \"file\",\r\n  multiple: true,\r\n  action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n  onChange(info) {\r\n    const { status } = info.file;\r\n    if (status !== \"uploading\") {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n\r\n    if (status === \"done\") {\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } else if (status === \"error\") {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n  onDrop(e) {\r\n    console.log(\"Dropped files\", e.dataTransfer.files);\r\n  },\r\n};\r\n\r\nvar listData = [];\r\nfunction confirmDelete() {\r\n  Modal.confirm({\r\n    title: \"Do you want to delete these items?\",\r\n    icon: <ExclamationCircleOutlined />,\r\n    content:\r\n      \"When clicked the OK button, this dialog will be closed after 1 second\",\r\n    onOk() {\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(Math.random() > 0.5 ? resolve : reject, 1000);\r\n      }).catch(() => console.log(\"Oops errors!\"));\r\n    },\r\n    onCancel() {},\r\n  });\r\n}\r\nexport class FileUpload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listData: [],\r\n      visible: false,\r\n      confirmLoading: false,\r\n      modalText: \"Content of the modal\",\r\n      loading: true,\r\n    };\r\n\r\n    this.deleteFiles = this.deleteFiles.bind(this);\r\n  }\r\n  formRef = React.createRef();\r\n  onFinish = async (values) => {\r\n    console.log(\"------------------debut-Submit-Newfiles------------------\");\r\n    // var loadingOnsubmit = true;\r\n    // message.loading(\"Loading..\", loadingOnsubmit);\r\n    try {\r\n      console.log(values);\r\n      var files = [];\r\n      values.RPTFILE.fileList.map((data, index) => {\r\n        this.state.listData.push({\r\n          RPTFILE: \"https://ant.design\",\r\n          RPTNAMFIL: values.RPTNAMFIL + \" \" + index,\r\n          avatar:\r\n            process.env.PUBLIC_URL +\r\n            \"/file/\" +\r\n            data.name.split(\".\").pop() +\r\n            \".png\",\r\n          extension: \".\" + data.name.split(\".\").pop(),\r\n          RPTTYPDOC: values.RPTTYPDOC,\r\n          key: this.state.listData.length + 1,\r\n        });\r\n        console.log(\"this.state.listData =>\", this.state.listData);\r\n        this.props.setNewFiles({\r\n          RPTFILE: data.originFileObj,\r\n          RPTNAMFIL: values.RPTNAMFIL + \" \" + index,\r\n          RPTTYPDOC: values.RPTTYPDOC,\r\n          key: this.state.listData.length,\r\n        });\r\n      });\r\n\r\n      this.setState({\r\n        modalText: \"The modal will be closed after two seconds\",\r\n        confirmLoading: true,\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({ visible: false, confirmLoading: false });\r\n        this.onReset();\r\n      }, 2000);\r\n      console.log(\"------------------fin-Submit-Newfiles------------------\");\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      console.log(\"------------------fin-Submit-Newfiles------------------\");\r\n    }\r\n  };\r\n  getfileimage(ext) {\r\n    switch (ext) {\r\n      case \".txt\":\r\n        return process.env.PUBLIC_URL + \"/file/doc.png\";\r\n      case \".doc\":\r\n        return process.env.PUBLIC_URL + \"/file/doc.png\";\r\n      case \".css\":\r\n        return process.env.PUBLIC_URL + \"/file/css.png\";\r\n      case \".gif\":\r\n        return process.env.PUBLIC_URL + \"/file/gif.png\";\r\n      case \".html\":\r\n        return process.env.PUBLIC_URL + \"/file/html.png\";\r\n      case \".mov\":\r\n        return process.env.PUBLIC_URL + \"/file/mov.png\";\r\n      case \".mp3\":\r\n        return process.env.PUBLIC_URL + \"/file/mp3.png\";\r\n      case \".pdf\":\r\n        return process.env.PUBLIC_URL + \"/file/pdf.png\";\r\n      case \".ppt\":\r\n        return process.env.PUBLIC_URL + \"/file/ppt.png\";\r\n      case \".xls\":\r\n        return process.env.PUBLIC_URL + \"/file/xls.png\";\r\n      case \".zip\":\r\n        return process.env.PUBLIC_URL + \"/file/zip.png\";\r\n      default:\r\n        return process.env.PUBLIC_URL + \"/file/jpg.png\";\r\n    }\r\n  }\r\n  getTypeDoc(value) {\r\n    switch (value) {\r\n      case 1:\r\n        return \"Image\";\r\n      case 2:\r\n        return \"Guide\";\r\n      case 3:\r\n        return \"Doc installation\";\r\n      default:\r\n        return \"autre\";\r\n    }\r\n  }\r\n  onSubmit = () => {\r\n    this.formRef.current.submit();\r\n    console.log(this.formRef.current);\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n  showModal = () => {\r\n    this.setState({ visible: true });\r\n  };\r\n  handleOk = () => {\r\n    this.onSubmit();\r\n  };\r\n  handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    this.setState({ visible: false });\r\n    this.onReset();\r\n  };\r\n  componentDidMount() {\r\n    this.state.listData = !!this.props.ListFiles ? this.props.ListFiles : [];\r\n    this.setState({ loading: false });\r\n  }\r\n  deleteFiles(itemm) {\r\n    console.log(\"itemm => \", itemm);\r\n    this.props.setDeleteFiles(itemm);\r\n    const listData = this.state.listData.filter((item) => item !== itemm);\r\n    this.setState({ listData });\r\n  }\r\n  render() {\r\n    return (\r\n      !this.state.loading && (\r\n        <div\r\n          style={{\r\n            padding: \"5px\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <Row gutter={[10, 10]} justify=\"space-between\" align=\"stretch\">\r\n            <Col\r\n              span={24}\r\n              style={{\r\n                height: \"100%\",\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n              }}\r\n            >\r\n              <Input\r\n                size=\"small\"\r\n                prefix={<SearchOutlined style={{ color: \"#aaa\" }} />}\r\n                bordered={false}\r\n                placeholder=\"Entrer le nom du fichier...\"\r\n              />\r\n              <Select defaultValue=\"Jiangsu\">\r\n                <Select.Option value=\"Zhejiang\">image</Select.Option>\r\n                <Select.Option value=\"Jxiangsu\"> Guide</Select.Option>\r\n                <Select.Option value=\"Jiangsu\"> Doc installation</Select.Option>\r\n              </Select>{\" \"}\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={this.showModal}\r\n                icon={<AppstoreAddOutlined />}\r\n              >\r\n                New\r\n              </Button>{\" \"}\r\n              <Modal\r\n                title=\"Title\"\r\n                style={{ display: \"flex\" }}\r\n                // centered\r\n                width={500}\r\n                visible={this.state.visible}\r\n                onOk={this.handleOk}\r\n                confirmLoading={this.state.confirmLoading}\r\n                onCancel={this.handleCancel}\r\n              >\r\n                <ConfigProvider\r\n                  form={{ validateMessages: validateMessages.fr }}\r\n                >\r\n                  {/* <p>{this.state.modalText}</p> */}\r\n                  <Form\r\n                    ref={this.formRef}\r\n                    layout=\"vertical\"\r\n                    name=\"control-ref\"\r\n                    initialValues={{ ...this.state.defaultValue }}\r\n                    onFinish={this.onFinish}\r\n                  >\r\n                    {\" \"}\r\n                    <Row\r\n                      gutter={[5, 5]}\r\n                      // align=\"top\"\r\n                      style={{\r\n                        minHeight: \"250px\",\r\n                        maxHeight: \"400px\",\r\n                        overflowY: \"auto\",\r\n                      }}\r\n                    >\r\n                      <Col span={8}>\r\n                        <Form.Item\r\n                          // label=\"Type\"\r\n                          name={\"RPTTYPDOC\"}\r\n                          hasFeedback\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select defaultValue={1} style={{ width: \"100%\" }}>\r\n                            <Select.Option value={1}>image</Select.Option>\r\n                            <Select.Option value={2}> Guide</Select.Option>\r\n                            <Select.Option value={3}>\r\n                              {\" \"}\r\n                              Doc installation\r\n                            </Select.Option>\r\n                          </Select>\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={16}>\r\n                        <Form.Item\r\n                          // label=\"Type\"\r\n                          name={\"RPTNAMFIL\"}\r\n                          hasFeedback\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input\r\n                            style={{ width: \"100%\" }}\r\n                            placeholder=\"Entrer le nom du fichier...\"\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      {/* </Input.Group> */}\r\n                      <Col span={24} style={{ height: \"200px\" }}>\r\n                        <Form.Item\r\n                          // label=\"Type\"\r\n                          name={\"RPTFILE\"}\r\n                          // hasFeedback\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Dragger {...props} listType=\"picture\">\r\n                            <p className=\"ant-upload-drag-icon\">\r\n                              <CloudUploadOutlined />\r\n                            </p>\r\n                            <p className=\"ant-upload-text\">\r\n                              Drop files to upload or <a>browse</a>\r\n                            </p>\r\n                          </Dragger>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </ConfigProvider>{\" \"}\r\n              </Modal>\r\n              {/* </Input.Group> */}\r\n            </Col>{\" \"}\r\n            <Col\r\n              span={24}\r\n              style={{\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              <List\r\n                // itemLayout=\"vertical\"\r\n                size=\"small\"\r\n                pagination={{\r\n                  onChange: (page) => {\r\n                    console.log(page);\r\n                  },\r\n                  pageSize: 4,\r\n                }}\r\n                dataSource={this.state.listData}\r\n                renderItem={(item) => (\r\n                  <List.Item\r\n                    key={item.title}\r\n                    actions={[\r\n                      <Link\r\n                        to={{\r\n                          pathname: process.env.PUBLIC_URL + \"cv.pdf\",\r\n                        }}\r\n                        target=\"_blank\"\r\n                        download\r\n                      >\r\n                        {\" \"}\r\n                        <Button\r\n                          type=\"text\"\r\n                          icon={\r\n                            <DownloadOutlined style={{ color: \"#69609e\" }} />\r\n                          }\r\n                          size=\"small\"\r\n                        />\r\n                      </Link>,\r\n                      <a\r\n                        href={process.env.PUBLIC_URL + \"/cv.pdf\"}\r\n                        target=\"_blank\"\r\n                      >\r\n                        <Button\r\n                          type=\"text\"\r\n                          icon={<SelectOutlined style={{ color: \"#69609e\" }} />}\r\n                          size=\"small\"\r\n                        />\r\n                      </a>,\r\n                      <Popconfirm\r\n                        title=\"Are you sure to delete this task?\"\r\n                        onConfirm={() => this.deleteFiles(item)}\r\n                        // onCancel={cancel}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                      >\r\n                        <a href=\"#\">\r\n                          <DeleteOutlined style={{ color: \"#69609e\" }} />\r\n                        </a>\r\n                      </Popconfirm>,\r\n                      // <EditOutlined />,\r\n                      // <Button\r\n                      //   type=\"text\"\r\n                      //   onClick={() => {\r\n                      //     this.deleteFiles(item);\r\n                      //     Modal.confirm({\r\n                      //       title: \"Do you want to delete these file?\",\r\n                      //       icon: <ExclamationCircleOutlined />,\r\n                      //       content:\r\n                      //         \"When clicked the OK button, this dialog will be closed after 1 second\",\r\n                      //       onOk() {\r\n                      //         console.log(\"file => :\", item);\r\n\r\n                      //         return new Promise((resolve, reject) => {\r\n                      //           setTimeout(\r\n                      //             Math.random() > 0.5 ? resolve : reject,\r\n                      //             1000\r\n                      //           );\r\n                      //         }).catch(() => console.log(\"Oops errors!\"));\r\n                      //       },\r\n                      //       onCancel() {},\r\n                      //     });\r\n                      //   }}\r\n                      //   icon={<DeleteOutlined style={{ color: \"#69609e\" }} />}\r\n                      //   size=\"small\"\r\n                      // />,\r\n                    ]}\r\n                  >\r\n                    <List.Item.Meta\r\n                      avatar={\r\n                        <Avatar\r\n                          src={this.getfileimage(item.extension)}\r\n                          shape=\"square\"\r\n                          style={{ padding: \"4px\" }}\r\n                        />\r\n                      }\r\n                      title={\r\n                        <Space style={{ display: \"flex\" }}>\r\n                          {\" \"}\r\n                          {/* <a href={item.href}></a> */}\r\n                          {/* <a href={\"cv.pdf\"} target=\"_blank\">\r\n                          {item.title}\r\n                        </a> */}\r\n                          <Link\r\n                            to={{\r\n                              pathname: process.env.PUBLIC_URL + \"cv.pdf\",\r\n                            }}\r\n                            target=\"_blank\"\r\n                            // download\r\n                          >\r\n                            {\" \"}\r\n                            {item.RPTNAMFIL}\r\n                          </Link>\r\n                          <Tag color=\"purple\">{item.extension}</Tag>\r\n                        </Space>\r\n                      }\r\n                      description={\r\n                        <div style={{ display: \"flex\" }}>\r\n                          <Typography.Text\r\n                            type=\"secondary\"\r\n                            style={{\r\n                              lineHeight: \"0.5715\",\r\n                              fontSize: \"12px\",\r\n                            }}\r\n                          >\r\n                            {this.getTypeDoc(item.RPTTYPDOC)}\r\n                          </Typography.Text>\r\n                        </div>\r\n                      }\r\n                    />\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            </Col>\r\n            <Col\r\n              span={10}\r\n              style={{\r\n                // border: \"1px solid #eee\",\r\n                // borderRadius: \"5px\",\r\n                padding: \"5px\",\r\n                // height: \"100%\",\r\n                overflowY: \"auto\",\r\n              }}\r\n            ></Col>{\" \"}\r\n          </Row>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n","import React, {\r\n  Component,\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Divider, Input, Row, message, ConfigProvider } from \"antd\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  InputNumber,\r\n  notification,\r\n  Select,\r\n  Space,\r\n  Table,\r\n  Typography,\r\n} from \"dmsui\";\r\n\r\nimport {\r\n  ClearOutlined,\r\n  MinusCircleOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport { insertUser, updateUser } from \"../../../../DjangoService/userService\";\r\nimport { userAdvancedSearchPath } from \"../../../../config\";\r\n//new\r\nimport { Popconfirm } from \"antd\";\r\nimport { DataTable } from \"dmsui\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport TitleCustomize from \"./TitleCustomize\";\r\nimport { validateMessages } from \"../../../../Constante\";\r\n//new\r\nconst expandable = {\r\n  expandedRowRender: (record) => <p>{record.description}</p>,\r\n};\r\nconst pagination = { position: \"bottom\" };\r\nconst vueSysteme = [];\r\nfor (let i = 1; i <= 1; i++) {\r\n  vueSysteme.push({\r\n    titre: \"Vue systéme \" + i,\r\n    check: true,\r\n  });\r\n}\r\nconst vuesPersonnalises = [];\r\nfor (let i = 1; i <= 3; i++) {\r\n  vuesPersonnalises.push({\r\n    titre: \"Vues personnalisés \" + i,\r\n    check: false,\r\n  });\r\n}\r\n\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(\r\n      `selectedRowKeys: ${selectedRowKeys}`,\r\n      \"selectedRows: \",\r\n      selectedRows\r\n    );\r\n  },\r\n  onSelect: (record, selected, selectedRows) => {\r\n    console.log(record, selected, selectedRows);\r\n  },\r\n  onSelectAll: (selected, selectedRows, changeRows) => {\r\n    console.log(selected, selectedRows, changeRows);\r\n  },\r\n};\r\n//befor\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  pattern,\r\n  max,\r\n  required,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  type,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n  useEffect(() => {\r\n    // console.log(\"tinane voila la\", max, \"record\", record);\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      console.log(\"variante vente update => \", values, \"recorde\", ...record);\r\n      toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log(\"Save failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        rules={[\r\n          {\r\n            required: required,\r\n            // max: max,\r\n            // pattern: pattern,\r\n            // message: `${title} is required.`,\r\n          },\r\n        ]}\r\n      >\r\n        {type == \"number\" ? (\r\n          <InputNumber\r\n            size=\"small\"\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n          />\r\n        ) : type == \"select\" ? (\r\n          <Select\r\n            size=\"small\"\r\n            // style={{ width: \"100%\" }}\r\n            showSearch\r\n            // style={{ width: 200 }}\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n            optionFilterProp=\"children\"\r\n          >\r\n            <Select.Option value={0}>UVC</Select.Option>\r\n            <Select.Option value={1}>Sub-carton</Select.Option>\r\n            <Select.Option value={2}>Carton</Select.Option>\r\n            <Select.Option value={3}>Layer</Select.Option>\r\n            <Select.Option value={4}>Palette</Select.Option>\r\n          </Select>\r\n        ) : (\r\n          <Input\r\n            size=\"small\"\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n          />\r\n        )}\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{\r\n          paddingRight: 24,\r\n        }}\r\n        onClick={toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\n//encien\r\n\r\nexport default class LogistiqueDrawer extends Component {\r\n  static propTypes = {\r\n    prop: PropTypes,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: \"Code\",\r\n        // max: 10,\r\n        type: \"text\",\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RPULCEXT\",\r\n        width: \"10%\",\r\n        fixed: \"left\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n\r\n      {\r\n        title: \"Type\",\r\n        // max: 10,\r\n        type: \"select\",\r\n        // pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RPULTYPUL\",\r\n        width: \"15%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n      {\r\n        title: \"Coefition\",\r\n        // max: 10,\r\n        type: \"number\",\r\n        // pattern: \"^[0-9]*$\",\r\n        required: true,\r\n        dataIndex: \"RPULCOEF\",\r\n        width: \"10%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n      {\r\n        title: \"Poid\",\r\n        type: \"number\",\r\n        // pattern: \"^[0-9]*$\",\r\n        required: false,\r\n        dataIndex: \"RPULPOID\",\r\n        width: \"8%\",\r\n        ellipsis: true,\r\n        showSorterTooltip: true,\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Longueur \",\r\n        type: \"number\",\r\n        // pattern: \"^[0-9]*$\",\r\n        required: false,\r\n        dataIndex: \"RPULLANG\",\r\n        width: \"11%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n      {\r\n        title: \"Largeur \",\r\n        type: \"number\",\r\n        // pattern: \"^[0-9]*$\",\r\n        required: false,\r\n        dataIndex: \"RPULLARG\",\r\n        width: \"10%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n      {\r\n        title: \"Hauteur \",\r\n        type: \"number\",\r\n        // pattern: \"^[0-9]*$\",\r\n        required: false,\r\n        dataIndex: \"RPULHAUT\",\r\n        width: \"10%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n      {\r\n        title: \"Description\",\r\n        type: \"text\",\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RPULDSC\",\r\n        width: \"20%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n      {\r\n        title: \"\",\r\n        fixed: \"right\",\r\n\r\n        width: \"5%\",\r\n        dataIndex: \"operation\",\r\n        render: (_, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              {/* <a>Delete</a> */}\r\n              <DeleteOutlined style={{ color: \"#f44336\" }} />\r\n            </Popconfirm>\r\n          ) : null,\r\n      },\r\n    ];\r\n    this.state = {\r\n      typeUniteL: [\r\n        { value: 0, titel: \"uvc\", active: true },\r\n        { value: 1, titel: \"sub-carton\", active: true },\r\n        { value: 2, titel: \"carton\", active: true },\r\n\r\n        { value: 3, titel: \"couche\", active: true },\r\n        { value: 4, titel: \"palette\", active: true },\r\n      ],\r\n      //new\r\n      bordered: false,\r\n      loading: false,\r\n      pagination,\r\n\r\n      expandable,\r\n      showHeader: true,\r\n      rowSelection: {},\r\n      scroll: undefined,\r\n      hasData: true,\r\n      tableLayout: undefined,\r\n      top: \"none\",\r\n      bottom: \"bottomRight\",\r\n\r\n      //before\r\n      dataSource: [],\r\n      count: 2,\r\n      //encien\r\n      userData: [],\r\n\r\n      changecome: false,\r\n      Profiles: [],\r\n      loading: false,\r\n      form: {},\r\n      photo: null,\r\n      // isLoading: this.props.match.params.id != null ? true : false,\r\n      // ii: false,\r\n      targetKeys: [],\r\n      update: true,\r\n      defaultValue: this.props.contact != null ? this.props.contact[0] : null,\r\n      // null,\r\n\r\n      datas: { US_EMAIL: \"\", US_NOMUSR: \"\", US_PRNUSR: \"\", US_TYPUSR: \"\" },\r\n    };\r\n  }\r\n  formRef = React.createRef();\r\n  onTypeChange = (value) => {\r\n    const { typeUniteL } = this.state;\r\n    typeUniteL[value].active = false;\r\n  };\r\n  activerUpdate() {}\r\n  onChange = (keys) => {\r\n    this.setState({ targetKeys: keys });\r\n  };\r\n  onFinish = async (values) => {\r\n    console.log(\r\n      \"------------------debut-Submit-NewPlanPalitisation------------------\"\r\n    );\r\n    var loadingOnsubmit = true;\r\n    message.loading(\"Loading..\", loadingOnsubmit);\r\n    try {\r\n      console.log(values);\r\n      values.UL != null\r\n        ? values.UL.map((data, index) => ((data.VV = []), (data.key = index)))\r\n        : (values.UL = []);\r\n      values.UL0 = this.state.dataSource;\r\n\r\n      this.props.setNewVL(values);\r\n      this.props.setListeAllUl(this.state.dataSource);\r\n      this.props.closeDrawer();\r\n      this.props.addVL(values);\r\n      this.onReset();\r\n      console.log(\r\n        \"------------------fin-Submit-NewPlanPalitisation------------------\"\r\n      );\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      console.log(\r\n        \"------------------fin-Submit-NewPlanPalitisation------------------\"\r\n      );\r\n    }\r\n  };\r\n  onSubmit = () => {\r\n    this.formRef.current.submit();\r\n    console.log(this.formRef.current);\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n    this.setState({ dataSource: [] });\r\n    // console.log(this.formRef.current);\r\n  };\r\n\r\n  labelComposant = (label, Icon) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100px\",\r\n            fontSize: \"14px\",\r\n            fontWeight: \"600\",\r\n          }}\r\n        >\r\n          {label}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  };\r\n  getDataSource() {\r\n    return this.state.dataSource;\r\n  }\r\n  handleDelete = (key) => {\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({\r\n      dataSource: dataSource.filter((item) => item.key !== key),\r\n    });\r\n  };\r\n  handleAdd = () => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = {\r\n      key: count,\r\n      RPULTYPUL: 0,\r\n      RPULCEXT: \"code..\",\r\n      RPULDSC: \"description..\",\r\n      RPULCOEF: 0,\r\n      RPULETAT: 0,\r\n      RPULPOID: 0,\r\n      RPULLANG: 0,\r\n      RPULLARG: 0,\r\n      RPULHAUT: 0,\r\n      VV: [],\r\n    };\r\n    this.setState({\r\n      dataSource: [newData, ...dataSource],\r\n      count: count + 1,\r\n    });\r\n  };\r\n  handleSave = (row) => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, { ...item, ...row });\r\n    this.setState({\r\n      dataSource: newData,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, handleInputChange } = this.props;\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          max: col.max,\r\n          required: col.required,\r\n          pattern: col.pattern,\r\n          type: col.type,\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n\r\n    // ajouter de datatable\r\n    const { xScroll, yScroll, ...state } = this.state;\r\n    const scroll = {};\r\n    if (yScroll) {\r\n      scroll.y = 240;\r\n    }\r\n    if (xScroll) {\r\n      scroll.x = \"100vw\";\r\n    }\r\n    return (\r\n      !isLoading && (\r\n        <ConfigProvider form={{ validateMessages: validateMessages.fr }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"baseline\",\r\n              borderBottom: \"1px solid #eee\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n          >\r\n            <Typography\r\n              style={{\r\n                display: \"flex\",\r\n                fontSize: \"15px\",\r\n                fontWeight: \"600\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              New plan de paltisation\r\n            </Typography>\r\n            <Button\r\n              type=\"text\"\r\n              icon={<ClearOutlined />}\r\n              onClick={() => this.onReset()}\r\n            />\r\n          </div>\r\n\r\n          <Form\r\n            ref={this.formRef}\r\n            layout=\"horizontal\"\r\n            name=\"control-ref\"\r\n            initialValues={{ ...this.state.defaultValue }}\r\n            onFinish={this.onFinish}\r\n          >\r\n            <Row\r\n              gutter={[20, 20]}\r\n              justify=\"center\"\r\n              align=\"stretch\"\r\n              style={{\r\n                overflowY: \"auto\",\r\n                height: \"430px\",\r\n              }}\r\n            >\r\n              <Col span={24}>\r\n                <Row gutter={[16, 0]} align=\"stretch\" justify=\"space-between\">\r\n                  <Col span={14}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          label=\"Code\"\r\n                          name={\"RPLLCEXT\"}\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                              max: 50,\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input placeholder=\"Entrer le code...\" />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col span={10}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item label=\"Etat\" name={\"RPLLETAT\"} hasFeedback>\r\n                          <InputNumber\r\n                            style={{\r\n                              width: \"100%\",\r\n                            }}\r\n                            placeholder=\"...\"\r\n                          />\r\n                        </Form.Item>{\" \"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                  <Col span={24}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          name={\"RPLLDSC\"}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              max: 2024,\r\n                            },\r\n                          ]}\r\n                          hasFeedback\r\n                        >\r\n                          <Input.TextArea\r\n                            rows={3}\r\n                            placeholder=\"Entrer le libellé Lang...\"\r\n                          />\r\n                        </Form.Item>{\" \"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.List name=\"UL\">\r\n                          {(fields, { add, remove }) => (\r\n                            <>\r\n                              <div\r\n                                style={{\r\n                                  width: \"100%\",\r\n                                  display: \"flex\",\r\n                                  justifyContent: \"space-between\",\r\n                                  alignItems: \"baseline\",\r\n                                  marginBottom: \"20px\",\r\n                                }}\r\n                              >\r\n                                <Typography.Title\r\n                                  level={5}\r\n                                  style={{\r\n                                    fontSize: \"16px\",\r\n                                    fontWeight: \"400px\",\r\n                                  }}\r\n                                >\r\n                                  Unité logistique\r\n                                </Typography.Title>\r\n                                <Button\r\n                                  type=\"dashed\"\r\n                                  onClick={() => add()}\r\n                                  style={{ width: \"6%\" }}\r\n                                  icon={<PlusOutlined />}\r\n                                >\r\n                                  {/* Add field */}\r\n                                </Button>\r\n                              </div>{\" \"}\r\n                              <Row\r\n                                gutter={[10, 10]}\r\n                                justify=\"space-between\"\r\n                                align=\"stretch\"\r\n                                style={{ marginBottom: \"10px\" }}\r\n                                // lets get it started\r\n                              >\r\n                                <Col span={7} style={{ display: \"flex\" }}>\r\n                                  Type\r\n                                </Col>{\" \"}\r\n                                <Col span={3} style={{ whiteSpace: \"nowrap\" }}>\r\n                                  Coefition\r\n                                </Col>{\" \"}\r\n                                <Col span={3} style={{ whiteSpace: \"nowrap\" }}>\r\n                                  Poid\r\n                                </Col>\r\n                                <Col span={3} style={{ whiteSpace: \"nowrap\" }}>\r\n                                  Langeur\r\n                                </Col>{\" \"}\r\n                                <Col span={3} style={{ whiteSpace: \"nowrap\" }}>\r\n                                  Largeur\r\n                                </Col>\r\n                                <Col span={3} style={{ whiteSpace: \"nowrap\" }}>\r\n                                  Hauteur\r\n                                </Col>\r\n                                <Col span={2}></Col>\r\n                              </Row>\r\n                              {/* <div\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  marginBottom: 8,\r\n                                  width: \"100%\",\r\n                                  justifyContent: \"space-between\",\r\n                                }}\r\n                              >\r\n                                {\" \"}\r\n                                <Space key={8} align=\"baseline\">\r\n                                  {\" \"}\r\n                                  <Row\r\n                                    gutter={[10, 10]}\r\n                                    justify=\"space-between\"\r\n                                    align=\"stretch\"\r\n                                    // wrap={false}\r\n                                  >\r\n                                    <Col span={7}>\r\n                                      {\" \"}\r\n                                      <Form.Item\r\n                                        // {...restField}\r\n                                        name={[\"UL\", \"RPULTYPUL\"]}\r\n                                        fieldKey={[\"UL\", \"RPULTYPUL\"]}\r\n                                        rules={[\r\n                                          {\r\n                                            required: true,\r\n                                          },\r\n                                        ]}\r\n                                      >\r\n                                        <Select\r\n                                          onChange={this.onTypeChange}\r\n                                          showSearch\r\n                                        >\r\n                                          {this.state.typeUniteL.map(\r\n                                            (data, index) => (\r\n                                              <Select.Option\r\n                                                value={data.value}\r\n                                                disabled={!data.active}\r\n                                              >\r\n                                                {data.titel}\r\n                                              </Select.Option>\r\n                                            )\r\n                                          )}\r\n                                        </Select>\r\n                                      </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={3}>\r\n                                      <Form.Item\r\n                                        // {...restField}\r\n                                        name={[\"UL\", \"RPULCOEF\"]}\r\n                                        fieldKey={[\"UL\", \"RPULCOEF\"]}\r\n                                        rules={[\r\n                                          {\r\n                                            required: true,\r\n                                          },\r\n                                        ]}\r\n                                      >\r\n                                        <InputNumber\r\n                                          style={{ width: \"100%\" }}\r\n                                        />\r\n                                      </Form.Item>{\" \"}\r\n                                    </Col>\r\n                                    <Col span={3}>\r\n                                      <Form.Item\r\n                                        // {...restField}\r\n                                        name={[\"UL\", \"RPULPOID\"]}\r\n                                        fieldKey={[\"UL\", \"RPULPOID\"]}\r\n                                        rules={[\r\n                                          {\r\n                                            required: false,\r\n                                          },\r\n                                        ]}\r\n                                      >\r\n                                        <InputNumber\r\n                                          style={{ width: \"100%\" }}\r\n                                        />\r\n                                      </Form.Item>{\" \"}\r\n                                    </Col>\r\n                                    <Col span={3}>\r\n                                      {\" \"}\r\n                                      <Form.Item\r\n                                        name={[\"UL\", \"RPULLANG\"]}\r\n                                        fieldKey={[\"UL\", \"RPULLANG\"]}\r\n                                        rules={[\r\n                                          {\r\n                                            required: false,\r\n                                          },\r\n                                        ]}\r\n                                      >\r\n                                        <InputNumber\r\n                                          style={{ width: \"100%\" }}\r\n                                        />\r\n                                      </Form.Item>\r\n                                    </Col>{\" \"}\r\n                                    <Col span={3}>\r\n                                      <Form.Item\r\n                                        name={[\"UL\", \"RPULLARG\"]}\r\n                                        fieldKey={[\"UL\", \"RPULLARG\"]}\r\n                                        rules={[\r\n                                          {\r\n                                            required: false,\r\n                                          },\r\n                                        ]}\r\n                                      >\r\n                                        <InputNumber\r\n                                          style={{ width: \"100%\" }}\r\n                                        />\r\n                                      </Form.Item>{\" \"}\r\n                                    </Col>\r\n                                    <Col span={3}>\r\n                                      {\" \"}\r\n                                      <Form.Item\r\n                                        name={[\"UL\", \"RPULHAUT\"]}\r\n                                        fieldKey={[\"UL\", \"RPULHAUT\"]}\r\n                                        rules={[\r\n                                          {\r\n                                            required: false,\r\n                                          },\r\n                                        ]}\r\n                                      >\r\n                                        <InputNumber\r\n                                          style={{ width: \"100%\" }}\r\n                                        />\r\n                                      </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={2}>\r\n                                      <MinusCircleOutlined\r\n                                        onClick={() => remove(\"UL\")}\r\n                                      />\r\n                                    </Col>\r\n                                  </Row>\r\n                                </Space>{\" \"}\r\n                              </div> */}\r\n                              {fields.map(\r\n                                ({ key, name, fieldKey, ...restField }) => (\r\n                                  <div\r\n                                    style={{\r\n                                      display: \"flex\",\r\n                                      marginBottom: 8,\r\n                                      width: \"100%\",\r\n                                      justifyContent: \"space-between\",\r\n                                    }}\r\n                                  >\r\n                                    {\" \"}\r\n                                    <Space key={key} align=\"baseline\">\r\n                                      {\" \"}\r\n                                      <Row\r\n                                        gutter={[10, 10]}\r\n                                        justify=\"space-between\"\r\n                                        align=\"stretch\"\r\n                                        // wrap={false}\r\n                                      >\r\n                                        <Col span={7}>\r\n                                          {\" \"}\r\n                                          <Form.Item\r\n                                            {...restField}\r\n                                            name={[name, \"RPULTYPUL\"]}\r\n                                            fieldKey={[fieldKey, \"RPULTYPUL\"]}\r\n                                            rules={[\r\n                                              {\r\n                                                required: true,\r\n                                              },\r\n                                            ]}\r\n                                          >\r\n                                            <Select\r\n                                              onChange={this.onTypeChange}\r\n                                              showSearch\r\n                                            >\r\n                                              {this.state.typeUniteL.map(\r\n                                                (data, index) => (\r\n                                                  <Select.Option\r\n                                                    value={data.value}\r\n                                                    disabled={!data.active}\r\n                                                  >\r\n                                                    {data.titel}\r\n                                                  </Select.Option>\r\n                                                )\r\n                                              )}\r\n                                            </Select>\r\n                                          </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={3}>\r\n                                          <Form.Item\r\n                                            {...restField}\r\n                                            name={[name, \"RPULCOEF\"]}\r\n                                            fieldKey={[fieldKey, \"RPULCOEF\"]}\r\n                                            rules={[\r\n                                              {\r\n                                                required: true,\r\n                                              },\r\n                                            ]}\r\n                                          >\r\n                                            <InputNumber\r\n                                              style={{ width: \"100%\" }}\r\n                                            />\r\n                                          </Form.Item>{\" \"}\r\n                                        </Col>\r\n                                        <Col span={3}>\r\n                                          <Form.Item\r\n                                            {...restField}\r\n                                            name={[name, \"RPULPOID\"]}\r\n                                            fieldKey={[fieldKey, \"RPULPOID\"]}\r\n                                            rules={[\r\n                                              {\r\n                                                required: false,\r\n                                              },\r\n                                            ]}\r\n                                          >\r\n                                            <InputNumber\r\n                                              style={{ width: \"100%\" }}\r\n                                            />\r\n                                          </Form.Item>{\" \"}\r\n                                        </Col>\r\n                                        <Col span={3}>\r\n                                          {\" \"}\r\n                                          <Form.Item\r\n                                            {...restField}\r\n                                            name={[name, \"RPULLANG\"]}\r\n                                            fieldKey={[fieldKey, \"RPULLANG\"]}\r\n                                            rules={[\r\n                                              {\r\n                                                required: false,\r\n                                              },\r\n                                            ]}\r\n                                          >\r\n                                            <InputNumber\r\n                                              style={{ width: \"100%\" }}\r\n                                            />\r\n                                          </Form.Item>\r\n                                        </Col>{\" \"}\r\n                                        <Col span={3}>\r\n                                          <Form.Item\r\n                                            {...restField}\r\n                                            name={[name, \"RPULLARG\"]}\r\n                                            fieldKey={[fieldKey, \"RPULLARG\"]}\r\n                                            rules={[\r\n                                              {\r\n                                                required: false,\r\n                                              },\r\n                                            ]}\r\n                                          >\r\n                                            <InputNumber\r\n                                              style={{ width: \"100%\" }}\r\n                                            />\r\n                                          </Form.Item>{\" \"}\r\n                                        </Col>\r\n                                        <Col span={3}>\r\n                                          {\" \"}\r\n                                          <Form.Item\r\n                                            {...restField}\r\n                                            name={[name, \"RPULHAUT\"]}\r\n                                            fieldKey={[fieldKey, \"RPULHAUT\"]}\r\n                                            rules={[\r\n                                              {\r\n                                                required: false,\r\n                                              },\r\n                                            ]}\r\n                                          >\r\n                                            <InputNumber\r\n                                              style={{ width: \"100%\" }}\r\n                                            />\r\n                                          </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={2}>\r\n                                          <MinusCircleOutlined\r\n                                            onClick={() => remove(name)}\r\n                                          />\r\n                                        </Col>\r\n                                      </Row>\r\n                                    </Space>{\" \"}\r\n                                  </div>\r\n                                )\r\n                              )}\r\n                              <Form.Item>\r\n                                <Button\r\n                                  type=\"dashed\"\r\n                                  onClick={() => {\r\n                                    add();\r\n                                  }}\r\n                                  block\r\n                                  icon={<PlusOutlined />}\r\n                                >\r\n                                  Add field\r\n                                </Button>\r\n                              </Form.Item>\r\n                            </>\r\n                          )}\r\n                        </Form.List>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  {/* <Col span={24}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Table\r\n                          className=\"template-dms\"\r\n                          title={() => (\r\n                            <TitleCustomize\r\n                              vues={{\r\n                                vueSysteme: vueSysteme,\r\n                                vuesPersonnalises: vuesPersonnalises,\r\n                              }}\r\n                              title={\"Unité Logistique\"}\r\n                              enAdd={this.handleAdd}\r\n                              type=\"primary\"\r\n                              style={{\r\n                                marginBottom: 16,\r\n                              }}\r\n                            />\r\n                          )}\r\n                          size=\"small\"\r\n                          pagination={{\r\n                            position: [this.state.top, this.state.bottom],\r\n                          }}\r\n                          scroll={{ x: 850 }}\r\n                          components={components}\r\n                          rowSelection={{ ...rowSelection }}\r\n                          rowClassName={() => \"editable-row\"}\r\n                          dataSource={dataSource}\r\n                          columns={columns}\r\n                        />{\" \"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"} */}\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Divider />\r\n          <Row gutter={[0, 0]} align=\"stretch\">\r\n            <Col\r\n              flex=\"auto\"\r\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n            >\r\n              <Space>\r\n                <Button\r\n                  onClick={(e) => {\r\n                    this.props.closeDrawer();\r\n                    this.onReset();\r\n                  }}\r\n                >\r\n                  close\r\n                </Button>\r\n                <Button\r\n                  type=\"primary\"\r\n                  onClick={(e) => {\r\n                    this.onSubmit();\r\n                  }}\r\n                >\r\n                  submit\r\n                </Button>\r\n              </Space>\r\n            </Col>\r\n          </Row>\r\n        </ConfigProvider>\r\n      )\r\n    );\r\n  }\r\n}\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport { Table, Input, Button, Popconfirm, Form } from \"antd\";\r\nimport { Col, DataTable, InputNumber, Modal, Row, Typography } from \"dmsui\";\r\nimport {\r\n  BarcodeOutlined,\r\n  CodeSandboxOutlined,\r\n  DeleteOutlined,\r\n} from \"@ant-design/icons\";\r\nimport LogistiqueDrawer from \"./LogistiqueDrawer\";\r\nimport UnitéLogistiqueTable from \"./UnitéLogistiqueTable\";\r\nimport TitleCustomize from \"./TitleCustomize\";\r\nconst expandable = {\r\n  expandedRowRender: (record) => <p>{record.description}</p>,\r\n};\r\nconst pagination = { position: \"bottom\" };\r\nconst vueSysteme = [];\r\nfor (let i = 1; i <= 1; i++) {\r\n  vueSysteme.push({\r\n    titre: \"Vue systéme \" + i,\r\n    check: true,\r\n  });\r\n}\r\nconst vuesPersonnalises = [];\r\nfor (let i = 1; i <= 3; i++) {\r\n  vuesPersonnalises.push({\r\n    titre: \"Vues personnalisés \" + i,\r\n    check: false,\r\n  });\r\n}\r\n\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(\r\n      `selectedRowKeys: ${selectedRowKeys}`,\r\n      \"selectedRows: \",\r\n      selectedRows\r\n    );\r\n  },\r\n  onSelect: (record, selected, selectedRows) => {\r\n    console.log(record, selected, selectedRows);\r\n  },\r\n  onSelectAll: (selected, selectedRows, changeRows) => {\r\n    console.log(selected, selectedRows, changeRows);\r\n  },\r\n};\r\n//befor\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  pattern,\r\n  max,\r\n  required,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  setUpdateVL,\r\n  disabled,\r\n  type,\r\n  update,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n  useEffect(() => {\r\n    // console.log(\"tinane voila la\", max, \"record\", record);\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      console.log(\"variante logistique update => \", values, \"recorde\", record);\r\n\r\n      toggleEdit();\r\n      setUpdateVL(record, values);\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log(\"Save failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        // rules={[\r\n        //   {\r\n        //     required: required,\r\n        //     max: max,\r\n        //     pattern: pattern,\r\n        //     // message: `${title} is required.`,\r\n        //   },\r\n        // ]}\r\n      >\r\n        {type == \"number\" ? (\r\n          <InputNumber\r\n            size=\"small\"\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n            // readOnly={!update}\r\n          />\r\n        ) : (\r\n          <Input\r\n            size=\"small\"\r\n            // readOnly={!update}\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n          />\r\n        )}\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{\r\n          paddingRight: 24,\r\n        }}\r\n        onClick={toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nexport default class LogistiqueTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: \"Code\",\r\n        // max: 10,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        disabled: this.props.update,\r\n        dataIndex: \"RPLLCEXT\",\r\n        width: \"10%\",\r\n        fixed: \"left\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n      {\r\n        title: \"Description\",\r\n        // max: 10,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RPLLDSC\",\r\n        width: \"35%\",\r\n        disabled: this.props.update,\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n      {\r\n        title: \"Etat du PL\",\r\n        // max: 10,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RPLLETAT\",\r\n        width: \"15%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        disabled: this.props.update,\r\n        type: \"number\",\r\n        showSorterTooltip: true,\r\n      },\r\n      {\r\n        title: \"Unité logistique\",\r\n        // max: 10,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"UL\",\r\n        width: \"15%\",\r\n        ellipsis: true,\r\n        showSorterTooltip: true,\r\n        render: (_, record) => (\r\n          <Button\r\n            type=\"text\"\r\n            icon={<CodeSandboxOutlined />}\r\n            onClick={() => {\r\n              console.log(\"record\", record);\r\n              // this.showModal(record.UL);\r\n              this.setState({\r\n                visible: true,\r\n                contenu: record.UL,\r\n                VL_Id: record.ID_ROWID,\r\n                VL_key: record.key,\r\n                // <UnitéLogistiqueTable datas={record.UL} />,\r\n              });\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        title: \"nombre de piece\",\r\n        // max: 10,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"nbrpience\",\r\n        width: \"20%\",\r\n        ellipsis: true,\r\n        type: \"number\",\r\n        disabled: this.props.update,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n\r\n      {\r\n        title: \"\",\r\n        fixed: \"right\",\r\n\r\n        width: \"5%\",\r\n        dataIndex: \"operation\",\r\n        render: (_, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              {/* <a>Delete</a> */}\r\n              <DeleteOutlined style={{ color: \"#f44336\" }} />\r\n            </Popconfirm>\r\n          ) : null,\r\n      },\r\n    ];\r\n    this.state = {\r\n      // after\r\n      contenu: [],\r\n      bordered: false,\r\n      loading: false,\r\n      pagination,\r\n\r\n      expandable,\r\n      showHeader: true,\r\n      rowSelection: {},\r\n      scroll: undefined,\r\n      hasData: true,\r\n      tableLayout: undefined,\r\n      top: \"none\",\r\n      bottom: \"bottomRight\",\r\n\r\n      //before\r\n      dataSource: [],\r\n      count: 2,\r\n    };\r\n  }\r\n  ULRef = React.createRef();\r\n  // componentDidUpdate(prevProps) {\r\n  //   if (prevProps.updateAdress !== this.props.updateAdress) {\r\n  //     this.\r\n  //   }\r\n  // }\r\n  getDataSource() {\r\n    return this.state.dataSource;\r\n  }\r\n  handleDelete = (keyy) => {\r\n    const dataSource = [...this.state.dataSource];\r\n    const result = dataSource.findIndex(({ key }) => key == keyy);\r\n    console.log(dataSource, result);\r\n    this.props.setDeleteVL(dataSource[result]);\r\n    this.setState({\r\n      dataSource: dataSource.filter((item) => item.key !== keyy),\r\n    });\r\n  };\r\n  handleAdd = (datas) => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = datas;\r\n    newData.key = dataSource.length;\r\n\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n  handleSave = (row) => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, { ...item, ...row });\r\n    this.setState({\r\n      dataSource: newData,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    console.log(\"datas\", this.props.datasource);\r\n    this.props.datasource != null &&\r\n      this.props.datasource.map((data, index) => {\r\n        Object.assign(data, {\r\n          key: index,\r\n        });\r\n      });\r\n    this.setState({\r\n      dataSource: this.props.datasource != null ? this.props.datasource : [],\r\n    });\r\n  }\r\n  // showModal = (ULs) => {\r\n  //   this.setState({\r\n  //     visible: true,\r\n  //     contenu: <UnitéLogistiqueTable datas={ULs} />,\r\n  //   });\r\n  // };\r\n  handleOk = () => {\r\n    this.setState({\r\n      modalText: \"The modal will be closed after two seconds\",\r\n      confirmLoading: true,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({ visible: false, confirmLoading: false });\r\n    }, 2000);\r\n  };\r\n  handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    this.setState({ visible: false, contenu: [] });\r\n  };\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable || !this.props.update) {\r\n        return col;\r\n      }\r\n\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          max: col.max,\r\n          required: col.required,\r\n          pattern: col.pattern,\r\n          type: col.type,\r\n          update: this.props.update,\r\n          handleSave: this.handleSave,\r\n          setUpdateVL: this.props.setUpdateVL,\r\n        }),\r\n      };\r\n    });\r\n\r\n    // ajouter de datatable\r\n    const { xScroll, yScroll, ...state } = this.state;\r\n    const scroll = {};\r\n    if (yScroll) {\r\n      scroll.y = 240;\r\n    }\r\n    if (xScroll) {\r\n      scroll.x = \"100vw\";\r\n    }\r\n\r\n    // const tableColumns = this.state.columns.map((item) => ({\r\n    //   ...item,\r\n    //   ellipsis: state.ellipsis,\r\n    // }));\r\n    // if (xScroll === \"fixed\") {\r\n    //   tableColumns[0].fixed = true;\r\n    //   tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n    // }\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <Table\r\n          className=\"template-dms\"\r\n          title={() => (\r\n            <TitleCustomize\r\n              vues={{\r\n                vueSysteme: vueSysteme,\r\n                vuesPersonnalises: vuesPersonnalises,\r\n              }}\r\n              title={\"PLan de palitisation\"}\r\n              enAdd={(e) => {\r\n                this.props.showDrawer(e);\r\n                this.props.setSiseForm(1435 - 500 + \"px\");\r\n                this.props.setDrawerState(\r\n                  \"\",\r\n                  <LogistiqueDrawer\r\n                    setNewVL={(VL) => this.props.setNewVL(VL)}\r\n                    setListeAllUl={(Uls) => this.props.setListeAllUl(Uls)}\r\n                    closeDrawer={() => this.props.closeDrawer()}\r\n                    addVL={(datas) => this.handleAdd(datas)}\r\n                    isLoading={this.props.isLoading}\r\n                    changecome={this.props.changecome}\r\n                    updateCtc={this.props.updateCtc}\r\n                    onFormulaireChange={(value) =>\r\n                      this.props.onFormulaireChange(value)\r\n                    }\r\n                    token={this.props.token}\r\n                    hostStorage={this.props.hostStorage}\r\n                    goTo={(link) => this.props.goTo(link)}\r\n                    handleInputChange={this.props.handleInputChange}\r\n                    user_id={this.props.user_id}\r\n                    service={this.props.service}\r\n                  />,\r\n                  500,\r\n                  () => {\r\n                    console.log(\"en close drawer\");\r\n                    this.props.setSiseForm(\"\");\r\n                  }\r\n                );\r\n              }}\r\n              // {this.showModal}\r\n              // {this.handleAdd}\r\n              type=\"primary\"\r\n              style={{\r\n                marginBottom: 16,\r\n              }}\r\n            />\r\n          )}\r\n          // {...this.state}\r\n          // vues={{\r\n          //   vueSysteme: vueSysteme,\r\n          //   vuesPersonnalises: vuesPersonnalises,\r\n          // }}\r\n          size=\"small\"\r\n          pagination={{ position: [this.state.top, this.state.bottom] }}\r\n          // columns={tableColumns}\r\n          // dataSource={state.hasData ? this.state.data : null}\r\n          // scroll={scroll}\r\n          scroll={{ x: 500 }}\r\n          components={components}\r\n          rowSelection={{ ...rowSelection }}\r\n          rowClassName={() => \"editable-row\"}\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n        />{\" \"}\r\n        <Modal\r\n          // title=\"Unité logistique\"\r\n          // style={{ display: \"flex\" }}\r\n          // centered\r\n          width={700}\r\n          visible={this.state.visible}\r\n          onOk={() => this.ULRef.current.onSubmit()}\r\n          confirmLoading={this.state.confirmLoading}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          {/* <p>{this.state.modalText}</p> */}\r\n          <Row\r\n            gutter={[5, 5]}\r\n            // align=\"top\"\r\n            style={{\r\n              minHeight: \"200px\",\r\n              height: \"auto\",\r\n              maxHeight: \"500px\",\r\n              // margin: \"10px\",\r\n              // overflowY: \"auto\",\r\n            }}\r\n          >\r\n            <Col\r\n              span={24}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <UnitéLogistiqueTable\r\n                datas={this.state.contenu}\r\n                setNewUL={(UL) => this.props.setNewUL(UL)}\r\n                setUpdateUL={(UL) => this.props.setUpdateUL(UL)}\r\n                setDeleteUL={(UL) => this.props.setDeleteUL(UL)}\r\n                VL_Id={this.state.VL_Id}\r\n                VL_key={this.state.VL_key}\r\n                ref={this.ULRef}\r\n              />\r\n              {/* {record.UL} */}\r\n            </Col>\r\n            <Col span={24} style={{ height: \"200px\" }}></Col>\r\n          </Row>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Row, message } from \"antd\";\r\nimport { Button, Form, InputNumber, Select, Space, Typography } from \"dmsui\";\r\n\r\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\r\n\r\nexport default class UnitéLogistiqueTable extends Component {\r\n  static propTypes = {\r\n    prop: PropTypes,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ToUpdate: [],\r\n      ToDelete: [],\r\n      typeUniteL: [\r\n        { value: 0, titel: \"uvc\", active: true },\r\n        { value: 1, titel: \"sub-carton\", active: true },\r\n        { value: 2, titel: \"carton\", active: true },\r\n\r\n        { value: 3, titel: \"couche\", active: true },\r\n        { value: 4, titel: \"palette\", active: true },\r\n      ],\r\n      Uls: [],\r\n      //new\r\n      loading: true,\r\n      form: {},\r\n      update: true,\r\n      // null,\r\n\r\n      datas: { US_EMAIL: \"\", US_NOMUSR: \"\", US_PRNUSR: \"\", US_TYPUSR: \"\" },\r\n    };\r\n  }\r\n  formRef = React.createRef();\r\n  onTypeChange = (value, keyy, name) => {\r\n    // console.log(\"eeee\", value, key, name);\r\n    const update = this.state;\r\n    let existDeja = update.ToUpdate.findIndex(({ key }) => key === keyy);\r\n    console.log(update.ToUpdate, \"  =>existDeja => \", existDeja);\r\n    existDeja == -1 && update.ToUpdate.push({ key: keyy, name });\r\n    const { typeUniteL } = this.state;\r\n    typeUniteL[value].active = false;\r\n  };\r\n  onChange = (keyy, name) => {\r\n    const update = this.state;\r\n    let existDeja = update.ToUpdate.findIndex(({ key }) => key === keyy);\r\n    console.log(\r\n      update.ToUpdate,\r\n      \"  =>key \" + keyy + \" ,existDeja => \",\r\n      existDeja\r\n    );\r\n    existDeja == -1 && update.ToUpdate.push({ key: keyy, name });\r\n  };\r\n  onDelete = (key, name) => {\r\n    const state = this.state;\r\n    console.log(\"Uls => \", this.state.Uls, \"keu : \", key);\r\n    state.ToDelete.push({\r\n      key,\r\n      name,\r\n      ID_ROWID:\r\n        this.state.Uls[key] != null ? this.state.Uls[key].ID_ROWID : null,\r\n    });\r\n  };\r\n  onFinish = async (values) => {\r\n    console.log(\r\n      \"------------------debut-Submit-NewPlanPalitisation------------------\"\r\n    );\r\n    var loadingOnsubmit = true;\r\n    message.loading(\"Loading..\", loadingOnsubmit);\r\n    try {\r\n      console.log(\"tout\", values);\r\n      console.log(\"update\", this.state.ToUpdate);\r\n      let deleteUL = [];\r\n      this.state.ToDelete.map((data, index) => {\r\n        // values.UL[data.key].key = data.key;\r\n        // values.UL[data.key].VL_key = this.props.VL_key;\r\n        deleteUL.push({\r\n          key: data.key,\r\n          VL_key: this.props.VL_key,\r\n          ID_ROWID: data.ID_ROWID,\r\n        });\r\n      });\r\n      let UpdateUL = [];\r\n      this.state.ToUpdate.map((data, index) => {\r\n        values.UL[data.key].key = data.key;\r\n        values.UL[data.key].VL_key = this.props.VL_key;\r\n        UpdateUL.push(values.UL[data.key]);\r\n      });\r\n      let NewUL = values.UL.filter(({ New }) => New === true);\r\n      console.log(\"New\", NewUL);\r\n      console.log(\"update\", UpdateUL);\r\n      console.log(\"delete\", deleteUL);\r\n      NewUL.map((data, index) => this.props.setNewUL(data));\r\n      UpdateUL.map((data, index) => this.props.setUpdateUL(data));\r\n      deleteUL.map((data, index) => this.props.setDeleteUL(data));\r\n      this.setState({ ToUpdate: [], deleteUL: [] });\r\n      // this.props.setNewVL(values);\r\n      // this.props.closeDrawer();\r\n      // this.props.addVL(values);\r\n      // this.onReset();\r\n      console.log(\r\n        \"------------------fin-Submit-NewPlanPalitisation------------------\"\r\n      );\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      console.log(\r\n        \"------------------fin-Submit-NewPlanPalitisation------------------\"\r\n      );\r\n    }\r\n  };\r\n  onSubmit = () => {\r\n    this.formRef.current.submit();\r\n    console.log(this.formRef.current);\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n    // console.log(this.formRef.current);\r\n  };\r\n\r\n  labelComposant = (label, Icon) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100px\",\r\n            fontSize: \"14px\",\r\n            fontWeight: \"600\",\r\n          }}\r\n        >\r\n          {label}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.datas !== this.props.datas) {\r\n      this.formRef.current.setFieldsValue({ UL: this.props.datas });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"Uls => :\", this.props.datas);\r\n    this.setState({ Uls: this.props.datas, loading: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      !this.state.loading && (\r\n        <Row\r\n          gutter={[20, 20]}\r\n          justify=\"center\"\r\n          align=\"stretch\"\r\n          style={{\r\n            overflowY: \"auto\",\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          {/* {this.state.Uls[0].ID_ROWID + \"\"} initialValue={this.state.Uls}*/}\r\n          <Col span={24}>\r\n            <Form\r\n              ref={this.formRef}\r\n              initialValues={{ UL: this.state.Uls }}\r\n              onFinish={this.onFinish}\r\n              // onFieldsChange={(_, allFields) => {\r\n              //   console.log(\"field change : \", _);\r\n              //   const update = this.state;\r\n              //   update.ToUpdate.push(_);\r\n              // }}\r\n            >\r\n              <Form.List name=\"UL\">\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"baseline\",\r\n                        marginBottom: \"20px\",\r\n                      }}\r\n                    >\r\n                      <Typography.Title\r\n                        level={5}\r\n                        style={{\r\n                          fontSize: \"16px\",\r\n                          fontWeight: \"400px\",\r\n                        }}\r\n                      >\r\n                        Unité logistique\r\n                      </Typography.Title>\r\n                      {/* <Button\r\n                        type=\"dashed\"\r\n                        onClick={() => add()}\r\n                        style={{ width: \"6%\" }}\r\n                        icon={<PlusOutlined />}\r\n                      >\r\n                        \r\n                      </Button> */}\r\n                    </div>{\" \"}\r\n                    <Row\r\n                      gutter={[10, 10]}\r\n                      justify=\"space-between\"\r\n                      align=\"stretch\"\r\n                      style={{ marginBottom: \"20px\" }}\r\n                      // lets get it started\r\n                    >\r\n                      <Col span={7} style={{ display: \"flex\" }}>\r\n                        Type\r\n                      </Col>{\" \"}\r\n                      <Col span={3}>Coefition</Col> <Col span={3}>Poid</Col>\r\n                      <Col span={3}>Langeur</Col> <Col span={3}>Largeur</Col>\r\n                      <Col span={3}>Hauteur</Col>\r\n                      <Col span={2}></Col>\r\n                    </Row>\r\n                    {fields.map(({ key, name, fieldKey, ...restField }) => (\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          marginBottom: 8,\r\n                          width: \"100%\",\r\n                          justifyContent: \"space-between\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        <Space key={key} align=\"baseline\">\r\n                          {\" \"}\r\n                          <Row\r\n                            gutter={[10, 10]}\r\n                            justify=\"space-between\"\r\n                            align=\"top\"\r\n                            // wrap={false}\r\n                          >\r\n                            <Col span={7}>\r\n                              {\" \"}\r\n                              <Form.Item\r\n                                {...restField}\r\n                                name={[name, \"RPULTYPUL\"]}\r\n                                fieldKey={[fieldKey, \"RPULTYPUL\"]}\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                  },\r\n                                ]}\r\n                                shouldUpdate={(prevValues, curValues) =>\r\n                                  prevValues.RPULTYPUL !== curValues.RPULTYPUL\r\n                                }\r\n                                messageVariables={{ another: \"good\" }}\r\n                                // getValueFromEvent={(_args) =>\r\n                                //   console.log(\"khera  =>  \", _args)\r\n                                // }\r\n                              >\r\n                                <Select\r\n                                  onChange={(e) =>\r\n                                    this.onTypeChange(e, key, \"RPULTYPUL\")\r\n                                  }\r\n                                  showSearch\r\n                                >\r\n                                  {this.state.typeUniteL.map((data, index) => (\r\n                                    <Select.Option\r\n                                      value={data.value}\r\n                                      disabled={!data.active}\r\n                                    >\r\n                                      {data.titel}\r\n                                    </Select.Option>\r\n                                  ))}\r\n                                </Select>\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={3}>\r\n                              <Form.Item\r\n                                {...restField}\r\n                                name={[name, \"RPULCOEF\"]}\r\n                                fieldKey={[fieldKey, \"RPULCOEF\"]}\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <InputNumber\r\n                                  style={{ width: \"100%\" }}\r\n                                  onChange={(e) =>\r\n                                    this.onChange(key, \"RPULCOEF\")\r\n                                  }\r\n                                />\r\n                              </Form.Item>{\" \"}\r\n                            </Col>\r\n                            <Col span={3}>\r\n                              <Form.Item\r\n                                {...restField}\r\n                                name={[name, \"RPULPOID\"]}\r\n                                fieldKey={[fieldKey, \"RPULPOID\"]}\r\n                                rules={[\r\n                                  {\r\n                                    required: false,\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <InputNumber\r\n                                  style={{ width: \"100%\" }}\r\n                                  onChange={(e) =>\r\n                                    this.onChange(key, \"RPULPOID\")\r\n                                  }\r\n                                />\r\n                              </Form.Item>{\" \"}\r\n                            </Col>\r\n                            <Col span={3}>\r\n                              {\" \"}\r\n                              <Form.Item\r\n                                {...restField}\r\n                                name={[name, \"RPULLANG\"]}\r\n                                fieldKey={[fieldKey, \"RPULLANG\"]}\r\n                                rules={[\r\n                                  {\r\n                                    required: false,\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <InputNumber\r\n                                  style={{ width: \"100%\" }}\r\n                                  onChange={(e) =>\r\n                                    this.onChange(key, \"RPULLANG\")\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>{\" \"}\r\n                            <Col span={3}>\r\n                              <Form.Item\r\n                                {...restField}\r\n                                name={[name, \"RPULLARG\"]}\r\n                                fieldKey={[fieldKey, \"RPULLARG\"]}\r\n                                rules={[\r\n                                  {\r\n                                    required: false,\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <InputNumber\r\n                                  style={{ width: \"100%\" }}\r\n                                  onChange={(e) =>\r\n                                    this.onChange(key, \"RPULLARG\")\r\n                                  }\r\n                                />\r\n                              </Form.Item>{\" \"}\r\n                            </Col>\r\n                            <Col span={3}>\r\n                              {\" \"}\r\n                              <Form.Item\r\n                                {...restField}\r\n                                name={[name, \"RPULHAUT\"]}\r\n                                fieldKey={[fieldKey, \"RPULHAUT\"]}\r\n                                rules={[\r\n                                  {\r\n                                    required: false,\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <InputNumber\r\n                                  style={{ width: \"100%\" }}\r\n                                  onChange={(e) =>\r\n                                    this.onChange(key, \"RPULHAUT\")\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={2}>\r\n                              <MinusCircleOutlined\r\n                                onClick={() => {\r\n                                  remove(name);\r\n                                  this.onDelete(key);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                        </Space>{\" \"}\r\n                      </div>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button\r\n                        type=\"dashed\"\r\n                        onClick={() =>\r\n                          add({\r\n                            New: true,\r\n                            RPULCINVL: this.props.VL_Id,\r\n                            VL_key: this.props.VL_key,\r\n                            VV: [],\r\n                          })\r\n                        }\r\n                        block\r\n                        icon={<PlusOutlined />}\r\n                      >\r\n                        Add field\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form>{\" \"}\r\n          </Col>\r\n        </Row>\r\n      )\r\n    );\r\n  }\r\n}\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  Button,\r\n  Popconfirm,\r\n  Form,\r\n  ConfigProvider,\r\n  DatePicker,\r\n  message,\r\n  Tooltip,\r\n} from \"antd\";\r\nimport { Col, InputNumber, Modal, Row, Select, Typography } from \"dmsui\";\r\nimport moment from \"moment\";\r\nimport {\r\n  BarcodeOutlined,\r\n  CheckCircleTwoTone,\r\n  CloseCircleTwoTone,\r\n  CodeSandboxOutlined,\r\n  DeleteOutlined,\r\n} from \"@ant-design/icons\";\r\nimport LogistiqueDrawer from \"./LogistiqueDrawer\";\r\nimport UnitéLogistiqueTable from \"./UnitéLogistiqueTable\";\r\nimport TitleCustomize from \"./TitleCustomize\";\r\nimport { validateMessages } from \"../../../../Constante\";\r\nconst expandable = {\r\n  expandedRowRender: (record) => <p>{record.description}</p>,\r\n};\r\nconst pagination = { position: \"bottom\" };\r\nconst vueSysteme = [];\r\nfor (let i = 1; i <= 1; i++) {\r\n  vueSysteme.push({\r\n    titre: \"Vue systéme \" + i,\r\n    check: true,\r\n  });\r\n}\r\nconst vuesPersonnalises = [];\r\nfor (let i = 1; i <= 3; i++) {\r\n  vuesPersonnalises.push({\r\n    titre: \"Vues personnalisés \" + i,\r\n    check: false,\r\n  });\r\n}\r\n\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(\r\n      `selectedRowKeys: ${selectedRowKeys}`,\r\n      \"selectedRows: \",\r\n      selectedRows\r\n    );\r\n  },\r\n  onSelect: (record, selected, selectedRows) => {\r\n    console.log(record, selected, selectedRows);\r\n  },\r\n  onSelectAll: (selected, selectedRows, changeRows) => {\r\n    console.log(selected, selectedRows, changeRows);\r\n  },\r\n};\r\n//befor\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  pattern,\r\n  max,\r\n  required,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  setUpdateVL,\r\n  disabled,\r\n  Sites,\r\n  VV,\r\n  type,\r\n  update,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n  useEffect(() => {\r\n    // console.log(\"tinane voila la\", max, \"record\", record);\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      // values.site\r\n      console.log(\"Assortiment vendable update => \", values, \"recorde\", record);\r\n\r\n      toggleEdit();\r\n      setUpdateVL(record, values);\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log(\"Save failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        // rules={[\r\n        //   {\r\n        //     required: required,\r\n        //     max: max,\r\n        //     pattern: pattern,\r\n        //     // message: `${title} is required.`,\r\n        //   },\r\n        // ]}\r\n      >\r\n        {type == \"number\" ? (\r\n          <DatePicker\r\n            style={{ width: \"100%\" }}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n            bordered={false}\r\n            size=\"small\"\r\n          />\r\n        ) : type == \"site\" ? (\r\n          <Select\r\n            size=\"small\"\r\n            // style={{ width: \"100%\" }}\r\n            showSearch\r\n            // style={{ width: 200 }}\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n            optionFilterProp=\"children\"\r\n          >\r\n            {Sites != null &&\r\n              Sites.map((site, index) => (\r\n                <Select.Option value={site.ID_ROWID}>\r\n                  {site.RSSITE}\r\n                </Select.Option>\r\n              ))}\r\n          </Select>\r\n        ) : (\r\n          <Select\r\n            size=\"small\"\r\n            // style={{ width: \"100%\" }}\r\n            showSearch\r\n            // style={{ width: 200 }}\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n            optionFilterProp=\"children\"\r\n          >\r\n            {VV != null &&\r\n              VV.map((vv, index) => (\r\n                <Select.Option value={index}>{vv.RPVVCEXT}</Select.Option>\r\n              ))}\r\n          </Select>\r\n        )}\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{\r\n          paddingRight: 24,\r\n        }}\r\n        onClick={toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nexport default class AssortimentVendable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: \"Point de vente\",\r\n        // max: 10,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        disabled: this.props.update,\r\n        dataIndex: \"RAVSITE\",\r\n        type: \"site\",\r\n\r\n        width: \"25%\",\r\n        fixed: \"left\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n        render: (_, record) => (\r\n          <Tooltip placement=\"topLeft\" title={record.RAVETAT}>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n              {record.CEXTSITE != null ? record.CEXTSITE : record.site}\r\n              {/* {record.site != null ? record.site : record.RAVSITE} */}\r\n            </div>\r\n          </Tooltip>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Variante de Vente\",\r\n        // max: 10,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RAVCINVV\",\r\n        width: \"25%\",\r\n        disabled: this.props.update,\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n        render: (_, record) => (\r\n          <Tooltip placement=\"topLeft\" title={record.RAVETAT}>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n              {record.VV != null ? record.VV : record.RAVCINVV}\r\n            </div>\r\n          </Tooltip>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Etat\",\r\n        // max: 10,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RAVETAT\",\r\n        width: \"11%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        disabled: this.props.update,\r\n        type: \"number\",\r\n        showSorterTooltip: true,\r\n        render: (_, record) => (\r\n          <Tooltip placement=\"topLeft\" title={record.RAVETAT}>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n              {!record.RAVETAT ? (\r\n                <CloseCircleTwoTone\r\n                  twoToneColor=\"#ff4d4f\"\r\n                  style={{ fontSize: \"17px\" }}\r\n                />\r\n              ) : (\r\n                <CheckCircleTwoTone\r\n                  twoToneColor=\"#16f007\"\r\n                  style={{ fontSize: \"17px\" }}\r\n                />\r\n              )}\r\n            </div>\r\n          </Tooltip>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Date Debut\",\r\n        // max: 10,\r\n        type: \"number\",\r\n        editable: true,\r\n        disabled: this.props.update,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"dateDebut\",\r\n        width: \"17%\",\r\n        ellipsis: true,\r\n        showSorterTooltip: true,\r\n        render: (_, record) => (\r\n          <Tooltip placement=\"topLeft\" title={record.RAVDDEBUT}>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n              {record.RAVDDEBUT}\r\n            </div>\r\n          </Tooltip>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Date de fin\",\r\n        // max: 10,\r\n        type: \"number\",\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"dateFin\",\r\n        width: \"17%\",\r\n        ellipsis: true,\r\n        type: \"number\",\r\n        disabled: this.props.update,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n        render: (_, record) => (\r\n          <Tooltip placement=\"topLeft\" title={record.RAVDFIN}>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n              {record.RAVDFIN}\r\n            </div>\r\n          </Tooltip>\r\n        ),\r\n      },\r\n\r\n      {\r\n        title: \"\",\r\n        fixed: \"right\",\r\n\r\n        width: \"5%\",\r\n        dataIndex: \"operation\",\r\n        render: (_, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              {/* <a>Delete</a> */}\r\n              <DeleteOutlined style={{ color: \"#f44336\" }} />\r\n            </Popconfirm>\r\n          ) : null,\r\n      },\r\n    ];\r\n    this.state = {\r\n      // after\r\n      contenu: [],\r\n      bordered: false,\r\n      loading: false,\r\n      pagination,\r\n\r\n      expandable,\r\n      showHeader: true,\r\n      rowSelection: {},\r\n      scroll: undefined,\r\n      hasData: true,\r\n      tableLayout: undefined,\r\n      top: \"none\",\r\n      bottom: \"bottomRight\",\r\n\r\n      //before\r\n      dataSource: [],\r\n      count: 2,\r\n    };\r\n  }\r\n  ULRef = React.createRef();\r\n  formRef = React.createRef();\r\n  onFinish = async (values) => {\r\n    console.log(\r\n      \"------------------debut-Submit-Assortiment-vendable------------------\"\r\n    );\r\n    var loadingOnsubmit = true;\r\n    message.loading(\"Loading..\", loadingOnsubmit);\r\n    try {\r\n      console.log(values);\r\n      console.log(\"site :  =>\", this.props.AllSites[values.RAVSITE]);\r\n      console.log(\"vv :  =>\", this.props.AllVV[values.RAVCINVV]);\r\n      const rangeTimeValue = values[\"RAVDDEBUT\"];\r\n      const indexsite = values.RAVSITE;\r\n      const indexvv = values.RAVCINVV;\r\n      const tmp = {\r\n        key: this.state.dataSource.length - 1,\r\n        CEXTSITE: this.props.AllSites[indexsite].RSSITE,\r\n        CEXTVV: this.props.AllVV[indexvv].RPVVCEXT,\r\n        RAVSITE: this.props.AllSites[indexsite].RSSITE,\r\n        RAVCINVV: this.props.AllVV[indexvv].RPVVCEXT,\r\n        RAVETAT: true,\r\n        VL: this.props.AllVV[indexvv].RPVVCINUL.VL,\r\n        UL: this.props.AllVV[indexvv].RPVVCINUL.UL,\r\n        VV: this.props.AllVV[indexvv].id,\r\n        RAVDDEBUT: rangeTimeValue.format(\"YYYY-MM-DD HH:mm\"),\r\n      };\r\n      // tmp.RAVSITE = this.props.AllSites[indexsite].RSSITE;\r\n      // tmp.RAVCINVV = this.props.AllVV[indexvv].RPVVCEXT;\r\n      values.VL = this.props.AllVV[indexvv].RPVVCINUL.VL;\r\n      values.UL = this.props.AllVV[indexvv].RPVVCINUL.UL;\r\n      values.VV = this.props.AllVV[indexvv].id;\r\n      values.key = this.state.dataSource.length;\r\n      values.RAVCINVV = this.props.AllVV[indexvv].ID_ROWID;\r\n      // this.props.AllVV[values.RAVCINVV].RPVVCEXT;\r\n      values.RAVSITE = this.props.AllSites[indexsite].ID_ROWID;\r\n\r\n      values.RAVDDEBUT = rangeTimeValue.format(\"YYYY-MM-DD HH:mm\");\r\n      values.RAVETAT = true;\r\n      this.props.setNewASV(values);\r\n\r\n      this.setState({\r\n        modalText: \"The modal will be closed after two seconds\",\r\n        confirmLoading: true,\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({ visible: false, confirmLoading: false });\r\n        this.onReset();\r\n      }, 2000);\r\n\r\n      //  moment(Datas.data.MUTDDEB, \"YYYY-MM-DD HH:mm:ss\"),\r\n      this.handleAdd(tmp);\r\n      this.onReset();\r\n      this.handleCancel();\r\n      console.log(\r\n        \"------------------fin-Submit-Assortiment-vendable------------------\"\r\n      );\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      console.log(\r\n        \"------------------fin-Submit-Assortiment-vendable------------------\"\r\n      );\r\n    }\r\n  };\r\n  // componentDidUpdate(prevProps) {\r\n  //   if (prevProps.updateAdress !== this.props.updateAdress) {\r\n  //     this.\r\n  //   }\r\n  // }\r\n  getDataSource() {\r\n    return this.state.dataSource;\r\n  }\r\n  handleDelete = (keyy) => {\r\n    const dataSource = [...this.state.dataSource];\r\n    const result = dataSource.findIndex(({ key }) => key == keyy);\r\n    console.log(dataSource, result);\r\n    this.props.setDeleteVL(dataSource[result]);\r\n    this.setState({\r\n      dataSource: dataSource.filter((item) => item.key !== keyy),\r\n    });\r\n  };\r\n  handleAdd = (datas) => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = datas;\r\n    newData.key = dataSource.length;\r\n\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n  handleSave = (row) => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, { ...item, ...row });\r\n    this.setState({\r\n      dataSource: newData,\r\n    });\r\n  };\r\n  componentDidUpdate(prevProps) {\r\n    // console.log(\"-----vl => \", prevProps.AllVL.);\r\n    if (prevProps.AllVV !== this.props.AllVV) {\r\n      console.log(\"-----vl => \", this.props.AllVV);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"vl => \", this.props.AllVV);\r\n    console.log(\"datas\", this.props.datasource);\r\n    this.props.datasource != null &&\r\n      this.props.datasource.map((data, index) => {\r\n        Object.assign(data, {\r\n          key: index,\r\n          dateDebut: moment(data.RAVDDEBUT, \"YYYY-MM-DD\"),\r\n          dateFin: moment(data.RAVDFIN, \"YYYY-MM-DD\"),\r\n        });\r\n      });\r\n    this.setState({\r\n      dataSource: this.props.datasource != null ? this.props.datasource : [],\r\n    });\r\n  }\r\n  showModal = () => {\r\n    this.setState({ visible: true });\r\n  };\r\n  onSubmit = () => {\r\n    this.formRef.current.submit();\r\n    console.log(this.formRef.current);\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n  handleOk = () => {\r\n    this.onSubmit();\r\n  };\r\n  handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    this.setState({ visible: false, contenu: [] });\r\n  };\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable || !this.props.update) {\r\n        return col;\r\n      }\r\n\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          max: col.max,\r\n          required: col.required,\r\n          pattern: col.pattern,\r\n          type: col.type,\r\n          Sites: this.props.AllSites,\r\n          VV: this.props.AllVV,\r\n          update: this.props.update,\r\n          handleSave: this.handleSave,\r\n          setUpdateVL: this.props.setUpdateVL,\r\n        }),\r\n      };\r\n    });\r\n\r\n    // ajouter de datatable\r\n    const { xScroll, yScroll, ...state } = this.state;\r\n    const scroll = {};\r\n    if (yScroll) {\r\n      scroll.y = 240;\r\n    }\r\n    if (xScroll) {\r\n      scroll.x = \"100vw\";\r\n    }\r\n\r\n    // const tableColumns = this.state.columns.map((item) => ({\r\n    //   ...item,\r\n    //   ellipsis: state.ellipsis,\r\n    // }));\r\n    // if (xScroll === \"fixed\") {\r\n    //   tableColumns[0].fixed = true;\r\n    //   tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n    // }\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <Table\r\n          className=\"template-dms\"\r\n          title={() => (\r\n            <TitleCustomize\r\n              vues={{\r\n                vueSysteme: vueSysteme,\r\n                vuesPersonnalises: vuesPersonnalises,\r\n              }}\r\n              title={\"Assortiment Vendable\"}\r\n              enAdd={this.showModal}\r\n              // {this.showModal}\r\n              // {this.handleAdd}\r\n              type=\"primary\"\r\n              style={{\r\n                marginBottom: 16,\r\n              }}\r\n            />\r\n          )}\r\n          // {...this.state}\r\n          // vues={{\r\n          //   vueSysteme: vueSysteme,\r\n          //   vuesPersonnalises: vuesPersonnalises,\r\n          // }}\r\n          size=\"small\"\r\n          pagination={{ position: [this.state.top, this.state.bottom] }}\r\n          // columns={tableColumns}\r\n          // dataSource={state.hasData ? this.state.data : null}\r\n          // scroll={scroll}\r\n          scroll={{ x: 500 }}\r\n          components={components}\r\n          rowSelection={{ ...rowSelection }}\r\n          rowClassName={() => \"editable-row\"}\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n        />{\" \"}\r\n        <Modal\r\n          title=\"New\"\r\n          style={{ display: \"flex\" }}\r\n          // centered\r\n          width={500}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          confirmLoading={this.state.confirmLoading}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <ConfigProvider form={{ validateMessages: validateMessages.fr }}>\r\n            {/* <p>{this.state.modalText}</p> */}\r\n            <Form\r\n              ref={this.formRef}\r\n              layout=\"vertical\"\r\n              name=\"control-ref\"\r\n              initialValues={{ ...this.state.defaultValue }}\r\n              onFinish={this.onFinish}\r\n            >\r\n              {\" \"}\r\n              <Row\r\n                gutter={[5, 5]}\r\n                // align=\"top\"\r\n                style={{\r\n                  minHeight: \"250px\",\r\n                  maxHeight: \"400px\",\r\n                  overflowY: \"auto\",\r\n                }}\r\n              >\r\n                <Col span={24}>\r\n                  <Form.Item\r\n                    label=\"Point de vente\"\r\n                    name={\"RAVSITE\"}\r\n                    hasFeedback\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Select style={{ width: \"100%\" }}>\r\n                      {this.props.AllSites.map((data, index) => (\r\n                        <Select.Option value={index}>\r\n                          {data.RSSITE}\r\n                        </Select.Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <Form.Item\r\n                    label=\"variante de vente\"\r\n                    name={\"RAVCINVV\"}\r\n                    hasFeedback\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Select style={{ width: \"100%\" }}>\r\n                      {this.props.AllVV.map((data, index) => (\r\n                        <Select.Option value={index}>\r\n                          {data.RPVVLIBL}\r\n                        </Select.Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={24} style={{ width: \"100%\" }}>\r\n                  <Form.Item\r\n                    label=\"Date de debut\"\r\n                    name={\"RAVDDEBUT\"}\r\n                    hasFeedback\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <DatePicker style={{ width: \"100%\" }} />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </ConfigProvider>{\" \"}\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\r\n\r\nexport default class Calendrierfournisseur extends React.Component {\r\n  render() {\r\n    return (\r\n      <FullCalendar plugins={[dayGridPlugin]} initialView=\"dayGridMonth\" />\r\n    );\r\n  }\r\n}\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport { Table, Input, Popconfirm, Form } from \"antd\";\r\nimport { Col, DatePicker, InputNumber, Modal, Row, Typography } from \"dmsui\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport TitleCustomize from \"./TitleCustomize\";\r\nimport moment from \"moment\";\r\nimport ContactDrawer from \"./ContactDrawer\";\r\nconst expandable = {\r\n  expandedRowRender: (record) => <p>{record.description}</p>,\r\n};\r\nconst pagination = { position: \"bottom\" };\r\nconst vueSysteme = [];\r\nfor (let i = 1; i <= 1; i++) {\r\n  vueSysteme.push({\r\n    titre: \"Vue systéme \" + i,\r\n    check: true,\r\n  });\r\n}\r\nconst vuesPersonnalises = [];\r\nfor (let i = 1; i <= 3; i++) {\r\n  vuesPersonnalises.push({\r\n    titre: \"Vues personnalisés \" + i,\r\n    check: false,\r\n  });\r\n}\r\n\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(\r\n      `selectedRowKeys: ${selectedRowKeys}`,\r\n      \"selectedRows: \",\r\n      selectedRows\r\n    );\r\n  },\r\n  onSelect: (record, selected, selectedRows) => {\r\n    console.log(record, selected, selectedRows);\r\n  },\r\n  onSelectAll: (selected, selectedRows, changeRows) => {\r\n    console.log(selected, selectedRows, changeRows);\r\n  },\r\n};\r\n//befor\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  pattern,\r\n  max,\r\n  required,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  setUpdateContact,\r\n  Uls,\r\n  disabled,\r\n  type,\r\n  update,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n  useEffect(() => {\r\n    // console.log(\"tinane voila la\", max, \"record\", record, \"update => \", update);\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      console.log(\"variante vente update => \", values, \"recorde\", record);\r\n\r\n      toggleEdit();\r\n      setUpdateContact(record, values);\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log(\"Save failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        // rules={[\r\n        //   {\r\n        //     // required: required,\r\n        //     // max: max,\r\n        //     // pattern: pattern,\r\n        //     // message: `${title} is required.`,\r\n        //   },\r\n        // ]}\r\n      >\r\n        {type == \"number\" ? (\r\n          <InputNumber\r\n            size=\"small\"\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n            // readOnly={!update}\r\n          />\r\n        ) : (\r\n          <Input\r\n            size=\"small\"\r\n            // readOnly={!update}\r\n            bordered={false}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n          />\r\n        )}\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{\r\n          paddingRight: 24,\r\n        }}\r\n        onClick={toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\nconst DescriptionItem = ({ title, content }) => (\r\n  <div style={{ display: \"flex\" }}>\r\n    <p style={{ marginRight: \"10px\" }}>{title}:</p>\r\n    <Typography.Paragraph type=\"secondary\">\r\n      {content}\r\n      {/* editable={{ onChange: null }} */}\r\n    </Typography.Paragraph>{\" \"}\r\n  </div>\r\n);\r\nexport default class ContactTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: \"Tel-personnel\",\r\n        max: 30,\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        disabled: this.props.update,\r\n        dataIndex: \"RFCPER\",\r\n        width: \"15%\",\r\n        // type: \"\",\r\n        fixed: \"left\",\r\n        ellipsis: true,\r\n        editable: true,\r\n        showSorterTooltip: true,\r\n      },\r\n\r\n      {\r\n        title: \"Tel-telecopie\",\r\n        max: 10,\r\n        pattern: \"^[a-zA-Z0-9_-]+$\",\r\n        required: false,\r\n        // type: \"\",\r\n        disabled: this.props.update,\r\n        dataIndex: \"RFCTELCOP\",\r\n        width: \"15%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n      },\r\n\r\n      {\r\n        title: \"Tel-portable\",\r\n        max: 4,\r\n        pattern: \"^[0-9]*$\",\r\n        required: false,\r\n        dataIndex: \"RFCMOB\",\r\n        width: \"15%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n      },\r\n\r\n      {\r\n        title: \"Tel-professionnel\",\r\n        max: 15,\r\n        // type: \"select\",\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RFCPROF\",\r\n        // render: (_, record) => (\r\n        //   <Button\r\n        //     type=\"text\"\r\n        //     icon={<CodeSandboxOutlined />}\r\n        //     onClick={() => {\r\n        //       console.log(record);\r\n        //       this.showModalUL(record.RPVVCINUL);\r\n        //     }}\r\n        //   />\r\n        // ),\r\n        width: \"15%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Fax\",\r\n        max: 5,\r\n        // type: \"number\",\r\n        required: false,\r\n        dataIndex: \"RFCFAX\",\r\n        width: \"15%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Email\",\r\n        max: 15,\r\n        // type: \"number\",\r\n        pattern: \"^[a-zA-Z]*$\",\r\n        required: false,\r\n        dataIndex: \"RFCEMAIL\",\r\n\r\n        width: \"20%\",\r\n        ellipsis: true,\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"\",\r\n        fixed: \"right\",\r\n\r\n        width: \"5%\",\r\n        dataIndex: \"operation\",\r\n        render: (_, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              {/* <a>Delete</a> */}\r\n              {this.props.update && (\r\n                <DeleteOutlined style={{ color: \"#f44336\" }} />\r\n              )}\r\n            </Popconfirm>\r\n          ) : null,\r\n      },\r\n    ];\r\n    this.state = {\r\n      // after\r\n      VLUL: [],\r\n      visible: false,\r\n      confirmLoading: false,\r\n      modalText: \"Content of the modal\",\r\n      bordered: false,\r\n      loading: false,\r\n      pagination,\r\n\r\n      expandable,\r\n      showHeader: true,\r\n      rowSelection: {},\r\n      scroll: undefined,\r\n      hasData: true,\r\n      tableLayout: undefined,\r\n      top: \"none\",\r\n      bottom: \"bottomRight\",\r\n\r\n      //before\r\n      dataSource: [],\r\n      count: 2,\r\n    };\r\n  }\r\n\r\n  getDataSource() {\r\n    return this.state.dataSource;\r\n  }\r\n  handleDelete = (keyy) => {\r\n    const dataSource = [...this.state.dataSource];\r\n\r\n    const result = dataSource.findIndex(({ key }) => key == keyy);\r\n    console.log(dataSource, result);\r\n    this.props.setDeleteContact(dataSource[result]);\r\n    this.setState({\r\n      dataSource: dataSource.filter((item) => item.key !== keyy),\r\n    });\r\n  };\r\n  handleAdd = (datas) => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = datas;\r\n    newData.key = dataSource.length;\r\n\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n  handleSave = (row) => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, { ...item, ...row });\r\n    this.setState({\r\n      dataSource: newData,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    console.log(\"datas\", this.props.datasource);\r\n    this.props.datasource != null &&\r\n      this.props.datasource.map((data, index) => {\r\n        Object.assign(data, {\r\n          key: index,\r\n        });\r\n      });\r\n    this.setState({\r\n      dataSource: this.props.datasource != null ? this.props.datasource : [],\r\n    });\r\n\r\n    this.setState({\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  showModal = (data) => {\r\n    console.log(data);\r\n    this.setState({\r\n      visible: true,\r\n      width: 380,\r\n      contenu: (\r\n        <Row\r\n          gutter={[5, 5]}\r\n          // align=\"top\"\r\n          style={{\r\n            minHeight: \"180px\",\r\n            maxHeight: \"180px\",\r\n            // overflowY: \"auto\",\r\n          }}\r\n        >\r\n          {!!data && (\r\n            <Col\r\n              span={24}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <DatePicker.RangePicker\r\n                showTime\r\n                bordered={false}\r\n                defaultValue={[\r\n                  moment(data[0].PRCDDEB, \"YYYY-MM-DD HH:mm:ss\"),\r\n                  moment(data[0].PRCDFIN, \"YYYY-MM-DD HH:mm:ss\"),\r\n                ]}\r\n              />\r\n              {/* <DatePicker.RangePicker showTime /> */}\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/codeBarre.png\"}\r\n                style={{ width: \"300px\" }}\r\n              />{\" \"}\r\n              <Typography style={{ fontSize: \"17px\" }}>\r\n                {data[0].PRCCODE + \"\"}\r\n              </Typography>{\" \"}\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      ),\r\n      title: \"Code Bare\",\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      modalText: \"The modal will be closed after two seconds\",\r\n      confirmLoading: true,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({ visible: false, confirmLoading: false });\r\n    }, 2000);\r\n  };\r\n  handleCancel = () => {\r\n    console.log(\"Clicked cancel button\", this.state.VLUL);\r\n\r\n    this.setState({ visible: false });\r\n  };\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable || !this.props.update) {\r\n        return col;\r\n      }\r\n      console.log(\"boom ka => \", this.props.update);\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          max: col.max,\r\n          required: col.required,\r\n          disabled: col.disabled,\r\n          pattern: col.pattern,\r\n          type: col.type,\r\n          update: this.props.update,\r\n          handleSave: this.handleSave,\r\n          Uls: this.state.VLUL,\r\n          setUpdateContact: this.props.setUpdateContact,\r\n        }),\r\n      };\r\n    });\r\n\r\n    const { xScroll, yScroll, ...state } = this.state;\r\n    const scroll = {};\r\n    if (yScroll) {\r\n      scroll.y = 240;\r\n    }\r\n    if (xScroll) {\r\n      scroll.x = \"100vw\";\r\n    }\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <Table\r\n          className=\"template-dms\"\r\n          title={() => (\r\n            <TitleCustomize\r\n              vues={{\r\n                vueSysteme: vueSysteme,\r\n                vuesPersonnalises: vuesPersonnalises,\r\n              }}\r\n              title={\"Contact\"}\r\n              enAdd={(e) => {\r\n                this.props.showDrawer(e);\r\n                this.props.setSiseForm(1435 - 500 + \"px\");\r\n                this.props.setDrawerState(\r\n                  \"\",\r\n                  <ContactDrawer\r\n                    ListAllUL={this.props.ListAllUL}\r\n                    ListUL={this.props.ListUL}\r\n                    setNewContact={(Contact) =>\r\n                      this.props.setNewContact(Contact)\r\n                    }\r\n                    closeDrawer={() => this.props.closeDrawer()}\r\n                    addVV={(datas) => this.handleAdd(datas)}\r\n                    isLoading={this.props.isLoading}\r\n                    changecome={this.props.changecome}\r\n                    updateCtc={this.props.updateCtc}\r\n                    onFormulaireChange={(value) =>\r\n                      this.props.onFormulaireChange(value)\r\n                    }\r\n                    token={this.props.token}\r\n                    hostStorage={this.props.hostStorage}\r\n                    goTo={(link) => this.props.goTo(link)}\r\n                    handleInputChange={this.props.handleInputChange}\r\n                    user_id={this.props.user_id}\r\n                    service={this.props.service}\r\n                  />,\r\n                  500,\r\n                  () => {\r\n                    console.log(\"en close drawer\");\r\n                    this.props.setSiseForm(\"\");\r\n                  }\r\n                );\r\n              }}\r\n              activeAdd={this.props.update}\r\n              type=\"primary\"\r\n              style={{\r\n                marginBottom: 16,\r\n              }}\r\n            />\r\n          )}\r\n          size=\"small\"\r\n          pagination={{ position: [this.state.top, this.state.bottom] }}\r\n          scroll={{ x: 500 }}\r\n          components={components}\r\n          rowSelection={{ ...rowSelection }}\r\n          rowClassName={() => \"editable-row\"}\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n        />{\" \"}\r\n        <Modal\r\n          title={this.state.title}\r\n          width={this.state.width}\r\n          visible={this.state.visible}\r\n          onOk={this.handleCancel}\r\n          confirmLoading={this.state.confirmLoading}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          {this.state.contenu}\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Divider, Input, Row, message, ConfigProvider } from \"antd\";\r\nimport { Button, Form, Space, Typography } from \"dmsui\";\r\n\r\nimport {\r\n  ClearOutlined,\r\n  LoadingOutlined,\r\n  MailOutlined,\r\n  PhoneOutlined,\r\n  PlusOutlined,\r\n  PrinterOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport { validateMessages } from \"../../../../Constante\";\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\nexport default class ContactDrawer extends Component {\r\n  static propTypes = {\r\n    prop: PropTypes,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      VLUL: [],\r\n      userData: [],\r\n      loadingPhoto: false,\r\n      changecome: false,\r\n      Profiles: [],\r\n      loading: true,\r\n      form: {},\r\n      photo: null,\r\n      targetKeys: [],\r\n      update: true,\r\n      defaultValue: this.props.contact != null ? this.props.contact[0] : null,\r\n\r\n      datas: { US_EMAIL: \"\", US_NOMUSR: \"\", US_PRNUSR: \"\", US_TYPUSR: \"\" },\r\n    };\r\n  }\r\n  formRef = React.createRef();\r\n\r\n  activerUpdate() {}\r\n  onChange = (keys) => {\r\n    this.setState({ targetKeys: keys });\r\n  };\r\n  getUlType(type) {\r\n    switch (type) {\r\n      case 0:\r\n        return \"uvc\";\r\n      case 1:\r\n        return \"sub-carton\";\r\n      case 2:\r\n        return \"carton\";\r\n      case 3:\r\n        return \"couche\";\r\n      case 3:\r\n        return \"palette\";\r\n      default:\r\n        return \"autre\";\r\n    }\r\n  }\r\n  onFinish = async (values) => {\r\n    console.log(\"------------------debut-Submit-NewContact------------------\");\r\n\r\n    var loadingOnsubmit = true;\r\n    message.loading(\"Loading..\", loadingOnsubmit);\r\n    try {\r\n      console.log(values);\r\n      this.props.setNewContact(values);\r\n      this.props.closeDrawer();\r\n      this.props.addVV(values);\r\n      this.onReset();\r\n      this.setState({ VLUL: [] });\r\n      console.log(\"------------------fin-Submit-NewContact------------------\");\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      console.log(\"------------------fin-Submit-NewContact------------------\");\r\n    }\r\n  };\r\n\r\n  onSubmit = () => {\r\n    this.formRef.current.submit();\r\n    console.log(this.formRef.current);\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n    this.setState({ changecome: false });\r\n    // console.log(this.formRef.current);\r\n  };\r\n  handleChange = (info) => {\r\n    getBase64(info.file.originFileObj, (imageUrl) =>\r\n      this.setState({\r\n        imageUrl,\r\n        loadingPhoto: false,\r\n      })\r\n    );\r\n    // }\r\n  };\r\n\r\n  labelComposant = (label, Icon) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100px\",\r\n            fontSize: \"14px\",\r\n            fontWeight: \"600\",\r\n          }}\r\n        >\r\n          {label}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  };\r\n  componentDidMount() {\r\n    console.log(\"all ul\", this.props.ListAllUL);\r\n    this.props.ListUL != null &&\r\n      this.props.ListUL.map((Vl, indexVl) => {\r\n        // console.log(\"ul nta3 vl => \", Vl);\r\n\r\n        Vl.UL != null &&\r\n          Vl.UL.map((Ul, indexUl) => {\r\n            const { VLUL } = this.state;\r\n            VLUL.push({\r\n              VL: indexVl,\r\n              UL: indexUl,\r\n              titre: Vl.RPLLCEXT + \" \" + Ul.RPULTYPUL,\r\n            });\r\n          });\r\n      });\r\n    this.setState({\r\n      loading: false,\r\n      VLUL: this.props.ListAllUL.concat(this.state.VLUL),\r\n    });\r\n    console.log(\"all ul finale\", this.state.VLUL);\r\n  }\r\n  render() {\r\n    const { isLoading, handleInputChange } = this.props;\r\n    const { loadingPhoto, imageUrl } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        {loadingPhoto ? <LoadingOutlined /> : <PlusOutlined />}\r\n        <div style={{ marginTop: 8 }}>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      !this.state.loading && (\r\n        <ConfigProvider form={{ validateMessages: validateMessages.fr }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"baseline\",\r\n            }}\r\n          >\r\n            <Typography\r\n              style={{\r\n                display: \"flex\",\r\n                fontSize: \"15px\",\r\n                fontWeight: \"600\",\r\n                marginBottom: \"15px\",\r\n              }}\r\n            >\r\n              New contact\r\n            </Typography>\r\n            <Button\r\n              type=\"text\"\r\n              icon={<ClearOutlined />}\r\n              onClick={() => this.onReset()}\r\n            />\r\n          </div>\r\n          <Form\r\n            ref={this.formRef}\r\n            layout=\"vertical\"\r\n            name=\"control-ref\"\r\n            initialValues={{ ...this.state.defaultValue }}\r\n            onFinish={this.onFinish}\r\n          >\r\n            <Row gutter={[20, 20]} justify=\"center\" align=\"stretch\">\r\n              <Col span={24}>\r\n                <Row gutter={[16, 0]} align=\"stretch\" justify=\"space-between\">\r\n                  <Col span={12}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          label=\"Tel-personnel\"\r\n                          name={\"RFCPER\"}\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                              pattern: \"^[0-9]{10}$\",\r\n                            },\r\n                          ]}\r\n                          hasFeedback\r\n                        >\r\n                          <Input\r\n                            placeholder=\"+123 (00)0000-0000\"\r\n                            suffix={<PhoneOutlined />}\r\n                          />\r\n                        </Form.Item>{\" \"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                  <Col span={12}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          label=\"Tel-telecopie\"\r\n                          name={\"RFCTELCOP\"}\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                              pattern: \"^[0-9]{10}$\",\r\n                            },\r\n                          ]}\r\n                          hasFeedback\r\n                        >\r\n                          <Input\r\n                            placeholder=\"+123 (00)0000-0000\"\r\n                            suffix={<PhoneOutlined />}\r\n                          />\r\n                        </Form.Item>{\" \"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                  <Col span={24}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          label=\"Tel-portable\"\r\n                          name={\"RFCMOB\"}\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                              pattern: \"^[0-9]{10}$\",\r\n                            },\r\n                          ]}\r\n                          hasFeedback\r\n                        >\r\n                          <Input\r\n                            placeholder=\"+123 (00)0000-0000\"\r\n                            suffix={<PhoneOutlined />}\r\n                          />\r\n                        </Form.Item>{\" \"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          label=\"Tel-professionnel\"\r\n                          name={\"RFCPROF\"}\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                              max: 35,\r\n                              pattern: \"^[0-9]{10}$\",\r\n                            },\r\n                          ]}\r\n                          hasFeedback\r\n                        >\r\n                          <Input\r\n                            placeholder=\"+123 (00)0000-0000\"\r\n                            suffix={<PhoneOutlined />}\r\n                          />\r\n                        </Form.Item>{\" \"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          label=\"Fax\"\r\n                          name={\"RFCFAX\"}\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                              // max: 35,\r\n                              pattern: \"^[0-9]{10}$\",\r\n                            },\r\n                          ]}\r\n                          hasFeedback\r\n                        >\r\n                          <Input\r\n                            placeholder=\"+123 (00)0000-0000\"\r\n                            suffix={<PrinterOutlined />}\r\n                          />\r\n                        </Form.Item>{\" \"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                  <Col span={24}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col flex=\"auto\">\r\n                        <Form.Item\r\n                          label=\"E-mail\"\r\n                          name={\"RFCEMAIL\"}\r\n                          rules={[\r\n                            {\r\n                              required: false,\r\n                              max: 35,\r\n                              type: \"email\",\r\n                            },\r\n                          ]}\r\n                          hasFeedback\r\n                        >\r\n                          <Input\r\n                            placeholder=\"e-mail@gmail.com\"\r\n                            suffix={<MailOutlined />}\r\n                          />\r\n                        </Form.Item>{\" \"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Divider style={{ margin: \"0px\", marginTop: \"40px\" }} />\r\n                  <Col span={24}>\r\n                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                      <Col\r\n                        flex=\"auto\"\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"flex-end\",\r\n                          marginTop: \"10px\",\r\n                        }}\r\n                      >\r\n                        <Space>\r\n                          <Button\r\n                            onClick={(e) => {\r\n                              this.props.closeDrawer();\r\n                              this.onReset();\r\n                            }}\r\n                          >\r\n                            close\r\n                          </Button>\r\n                          <Button\r\n                            type=\"primary\"\r\n                            onClick={(e) => {\r\n                              this.onSubmit();\r\n                            }}\r\n                          >\r\n                            submit\r\n                          </Button>\r\n                        </Space>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>{\" \"}\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ConfigProvider>\r\n      )\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Modal,\r\n  notification,\r\n  Row,\r\n  Space,\r\n  Tag,\r\n  Tooltip,\r\n  Avatar,\r\n} from \"antd\";\r\nimport { DatePicker, Table } from \"dmsui\";\r\nimport \"./style.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport {\r\n  CheckOutlined,\r\n  InfoOutlined,\r\n  UserOutlined,\r\n  DeleteOutlined,\r\n  PhoneOutlined,\r\n  EnvironmentOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  ActiveDesactiveUser,\r\n  // getAllUsers,\r\n} from \"../../../DjangoService/userService\";\r\nimport { authApp, userUpdatePath } from \"../../../config\";\r\nimport { connexion } from \"../../../DjangoService/authnService\";\r\nimport TitleCustomize from \"./formulaireComponents/TitleCustomize\";\r\nimport { getAllProduits } from \"../../../DjangoService/ProduitService\";\r\nimport ContactTable from \"./formulaireComponents/ContactTable\";\r\nimport AdresseTable from \"./formulaireComponents/AdresseTable\";\r\nimport { Pays } from \"../../../Constante\";\r\nimport { getAllfournissuers } from \"../../../DjangoService/FournisseurService\";\r\n\r\n// const pagination = { position: \"bottom\" };\r\nconst vueSysteme = [];\r\nfor (let i = 1; i <= 1; i++) {\r\n  vueSysteme.push({\r\n    titre: \"Vue systéme \" + i,\r\n    check: true,\r\n  });\r\n}\r\nconst vuesPersonnalises = [];\r\nfor (let i = 1; i <= 3; i++) {\r\n  vuesPersonnalises.push({\r\n    titre: \"Vues personnalisés \" + i,\r\n    check: false,\r\n  });\r\n}\r\nconst DescriptionItem = ({ title, content }) => (\r\n  <div className=\"site-description-item-profile-wrapper\">\r\n    <p className=\"site-description-item-profile-p-label\">{title}:</p>\r\n    {content}\r\n  </div>\r\n);\r\nclass Results extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: \"\",\r\n      token: null,\r\n      bordered: false,\r\n      loading: false,\r\n      // pagination,\r\n      model: {\r\n        title: \"\",\r\n        Content: \"\",\r\n        width: 300,\r\n        onOk: console.log(\"ok\"),\r\n        visible: false,\r\n      },\r\n      dateFinDesactiver: \"20202-28-06 11:34:00\",\r\n      columns: [\r\n        {\r\n          title: \"\",\r\n          dataIndex: \"RFRLOGO\",\r\n          width: \"5%\",\r\n          ellipsis: true,\r\n          fixed: \"left\",\r\n          render: (_, record) => {\r\n            return (\r\n              !this.state.loading && (\r\n                <Avatar\r\n                  src={\r\n                    !!record.RFRLOGO && record.RFRLOGO\r\n                    // : process.env.PUBLIC_URL + \"/photo.png\"\r\n                  }\r\n                  // tag ? tag : process.env.PUBLIC_URL + \"/photo.png\"}\r\n                  size={40}\r\n                  shape=\"circle\"\r\n                  icon={<UserOutlined />}\r\n                >\r\n                  .\r\n                </Avatar>\r\n              )\r\n            );\r\n          },\r\n        },\r\n\r\n        {\r\n          title: \"Code\",\r\n          dataIndex: \"RFRCEXT\",\r\n          ellipsis: true,\r\n          width: \"18%\",\r\n          fixed: \"left\",\r\n          // sorter: (a, b) => a.age - b.age,\r\n          render: (_, record) => (\r\n            <Tooltip placement=\"topLeft\" title={record.RFRCEXT}>\r\n              <div\r\n                style={\r\n                  !record.MUTETAT\r\n                    ? { cursor: \"not-allowed\", color: \"#7a7a7a\" }\r\n                    : {}\r\n                }\r\n              >\r\n                {record.RFRCEXT}\r\n              </div>\r\n            </Tooltip>\r\n          ),\r\n        },\r\n\r\n        {\r\n          title: \"Acronyme\",\r\n          dataIndex: \"RFRLIBC\",\r\n          ellipsis: true,\r\n          width: \"10%\",\r\n          ellipsis: {\r\n            showTitle: false,\r\n          },\r\n          render: (_, record) => (\r\n            <Tooltip placement=\"topLeft\" title={record.RFRLIBC}>\r\n              <div\r\n                style={\r\n                  !record.MUTETAT\r\n                    ? { cursor: \"not-allowed\", color: \"#7a7a7a\" }\r\n                    : {}\r\n                }\r\n              >\r\n                {record.RFRLIBC}\r\n              </div>\r\n            </Tooltip>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Libelle\",\r\n          ellipsis: true,\r\n          width: \"14%\",\r\n          dataIndex: \"RFRLIBL\",\r\n          render: (_, record) => (\r\n            <Tooltip placement=\"topLeft\" title={record.RFRLIBL}>\r\n              <div\r\n                style={\r\n                  !record.MUTETAT\r\n                    ? { cursor: \"not-allowed\", color: \"#7a7a7a\" }\r\n                    : {}\r\n                }\r\n              >\r\n                {record.RFRLIBL}\r\n              </div>\r\n            </Tooltip>\r\n          ),\r\n        },\r\n\r\n        {\r\n          title: \"Pays\",\r\n          ellipsis: true,\r\n          width: \"10%\",\r\n          dataIndex: \"RFRPAYS\",\r\n          render: (_, record) => (\r\n            <Tooltip placement=\"topLeft\" title={record.RFRPAYS}>\r\n              <div\r\n                style={\r\n                  !record.MUTETAT\r\n                    ? { cursor: \"not-allowed\", color: \"#7a7a7a\" }\r\n                    : {}\r\n                }\r\n              >\r\n                {/* <Link> */}\r\n                {Pays[record.RFRPAYS]}\r\n                {/* </Link>{\" \"} */}\r\n              </div>\r\n            </Tooltip>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Adresse\",\r\n          ellipsis: true,\r\n          width: \"10%\",\r\n          dataIndex: \"RPRUSTOCK\",\r\n          render: (_, record) => (\r\n            <div style={{ display: \"flex\" }}>\r\n              {\" \"}\r\n              <Link\r\n                style={{ whiteSpace: \"nowrap\" }}\r\n                onClick={() => {\r\n                  console.log(\"delete\", record.id);\r\n                  this.setState({\r\n                    model: {\r\n                      Content: (\r\n                        <AdresseTable\r\n                          update={false}\r\n                          datasource={record.Adresse}\r\n                        />\r\n                      ),\r\n                      onOk: async () => {\r\n                        console.log(\"ok\", this.state.dateFinDesactiver);\r\n                      },\r\n\r\n                      width: 800,\r\n                      visible: true,\r\n                    },\r\n                  });\r\n                }}\r\n              >\r\n                <EnvironmentOutlined /> Adresse{\" \"}\r\n              </Link>\r\n            </div>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Devise\",\r\n          ellipsis: true,\r\n          width: \"6%\",\r\n          dataIndex: \"RFRDEVISE\",\r\n          render: (_, record) => (\r\n            <span\r\n              style={{\r\n                display: \"flex\",\r\n                // justifyContent: \"center\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              {this.getDevise(record.RFRDEVISE, record.RFRDEVISE)}\r\n            </span>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Type\",\r\n          ellipsis: true,\r\n          width: \"9%\",\r\n          dataIndex: \"RFRTYPE\",\r\n          render: (_, record) => (\r\n            <span\r\n              style={\r\n                {\r\n                  // display: \"flex\",\r\n                  // justifyContent: \"center\",\r\n                  // width: \"100%\",\r\n                }\r\n              }\r\n            >\r\n              {this.getTypefour(record.RFRTYPE, record.RFRTYPE)}\r\n            </span>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Contact\",\r\n          ellipsis: true,\r\n          width: \"10%\",\r\n          dataIndex: \"RPRUSTOCK\",\r\n          render: (_, record) => (\r\n            <div style={{ display: \"flex\" }}>\r\n              {\" \"}\r\n              <Link\r\n                style={{ whiteSpace: \"nowrap\" }}\r\n                onClick={() => {\r\n                  console.log(\"delete\", record);\r\n                  this.setState({\r\n                    model: {\r\n                      Content: (\r\n                        <ContactTable\r\n                          update={false}\r\n                          datasource={record.Contact}\r\n                        />\r\n                      ),\r\n                      onOk: async () => {\r\n                        console.log(\"ok\", this.state.dateFinDesactiver);\r\n                      },\r\n\r\n                      width: 800,\r\n                      visible: true,\r\n                    },\r\n                  });\r\n                }}\r\n              >\r\n                <PhoneOutlined /> Contact\r\n              </Link>\r\n            </div>\r\n          ),\r\n        },\r\n\r\n        {\r\n          title: \" \",\r\n          key: \"action\",\r\n          width: \"8%\",\r\n          fixed: \"right\",\r\n          width: 170,\r\n          // sorter: true,\r\n          render: (_, record) => {\r\n            // console.log(\"hhhh\", record);\r\n            return (\r\n              <Space\r\n                size=\"middle\"\r\n                style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n              >\r\n                <Button\r\n                  className={\"dms-button-info dms-button dms\"}\r\n                  // onClick={() => console.log(\"see\", record.ID_ROWID)}\r\n                  shape=\"circle\"\r\n                  disabled={!record.MUTETAT}\r\n                  onClick={() =>\r\n                    this.props.goTo(userUpdatePath + record.ID_ROWID)\r\n                  }\r\n                  icon={<InfoOutlined />}\r\n                  size=\"small\"\r\n                />\r\n\r\n                <Button\r\n                  className={\"dms-button-error dms-button dms\"}\r\n                  shape=\"circle\"\r\n                  // disabled={!record.MUTETAT}\r\n                  icon={\r\n                    !record.MUTETAT ? <CheckOutlined /> : <DeleteOutlined />\r\n                  }\r\n                  // {}<MinusOutlined />\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    console.log(\"delete\", record.id);\r\n                    this.setState({\r\n                      model: {\r\n                        title: \"Delete user\",\r\n                        width: 300,\r\n                        Content: (\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"center\",\r\n                            }}\r\n                          >\r\n                            <Space direction=\"vertical\" size={5} align=\"center\">\r\n                              <p>\r\n                                {record.MUTETAT\r\n                                  ? \"Do you want to disable user \" +\r\n                                    record.username +\r\n                                    \"?\"\r\n                                  : \"Do you want to enable user \" +\r\n                                    record.username +\r\n                                    \"?\"}\r\n                              </p>\r\n                              {record.MUTETAT && (\r\n                                <DatePicker\r\n                                  style={{ width: \"100%\" }}\r\n                                  showTime\r\n                                  onChange={this.onChange}\r\n                                  onOk={this.onOk}\r\n                                />\r\n                              )}\r\n                            </Space>\r\n                          </div>\r\n                        ),\r\n                        onOk: async () => {\r\n                          console.log(\"ok\", this.state.dateFinDesactiver);\r\n                          try {\r\n                            await ActiveDesactiveUser(\r\n                              this.props.service,\r\n\r\n                              {\r\n                                activate: !record.MUTETAT,\r\n                                MUTDFIN: this.state.dateFinDesactiver,\r\n                                pk: record.id,\r\n                              }\r\n                            );\r\n                            this.getData();\r\n                            // await deleteUser(this.props.service, record.id);\r\n                            // this.handleDelete(record.key);\r\n                            notification.open({\r\n                              message: \"Success\",\r\n                              description: record.MUTETAT\r\n                                ? record.username + \" is disabled successfully\"\r\n                                : record.username + \" is enabled successfully\",\r\n                              className: \"custom-class\",\r\n                              type: \"success\",\r\n                              placement: \"bottomRight\",\r\n                              style: {\r\n                                width: 400,\r\n                              },\r\n                            });\r\n                          } catch (error) {\r\n                            console.log(error);\r\n                            notification.open({\r\n                              message: \"Error\",\r\n                              placement: \"bottomRight\",\r\n                              type: \"error\",\r\n                              description: record.MUTETAT\r\n                                ? record.username + \" could not be disabled.\"\r\n                                : record.username + \" could not be enabled.\",\r\n                              className: \"custom-class\",\r\n                              style: {\r\n                                width: 400,\r\n                              },\r\n                            });\r\n                          }\r\n                        },\r\n                        visible: true,\r\n                      },\r\n                    });\r\n                    // deleteUser(this.props.service, record.id);\r\n                  }}\r\n                />\r\n              </Space>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      publier: false,\r\n      datass: [],\r\n      loading: true,\r\n      // expandable,\r\n      showHeader: true,\r\n      rowSelection: {},\r\n      scroll: undefined,\r\n      hasData: true,\r\n      tableLayout: undefined,\r\n      top: \"none\",\r\n      bottom: \"bottomRight\",\r\n    };\r\n    this.getToken = this.getToken.bind(this);\r\n    this.getRefrechToken = this.getRefrechToken.bind(this);\r\n  }\r\n\r\n  getTypefour(value, etat) {\r\n    switch (value) {\r\n      case 1:\r\n        return (\r\n          <Tag\r\n            style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n            color={!etat ? \"default\" : \"purple\"}\r\n            key={value}\r\n          >\r\n            type1\r\n          </Tag>\r\n        );\r\n      case 2:\r\n        return (\r\n          <Tag\r\n            style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n            color={!etat ? \"default\" : \"magenta\"}\r\n            key={value}\r\n          >\r\n            type2\r\n          </Tag>\r\n        );\r\n      default:\r\n        return (\r\n          <Tag\r\n            style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n            color={!etat ? \"default\" : \"red\"}\r\n            key={value}\r\n          >\r\n            autre\r\n          </Tag>\r\n        );\r\n    }\r\n  }\r\n  getDevise(value, etat) {\r\n    switch (value) {\r\n      case 0:\r\n        return (\r\n          <Tag\r\n            //!etat ? \"default\" : style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n            color={\"cyan\"}\r\n            key={value}\r\n          >\r\n            EUR\r\n          </Tag>\r\n        );\r\n      case 2:\r\n        return (\r\n          <Tag\r\n            style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n            color={!etat ? \"default\" : \"blue\"}\r\n            key={value}\r\n          >\r\n            DZD\r\n          </Tag>\r\n        );\r\n      case 1:\r\n        return (\r\n          <Tag\r\n            style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n            color={!etat ? \"default\" : \"geekblue\"}\r\n            key={value}\r\n          >\r\n            USD\r\n          </Tag>\r\n        );\r\n      case 4:\r\n        return (\r\n          <Tag\r\n            style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n            color={!etat ? \"default\" : \"green\"}\r\n            key={value}\r\n          >\r\n            GBP\r\n          </Tag>\r\n        );\r\n      default:\r\n        return (\r\n          <Tag\r\n            style={!etat ? { cursor: \"not-allowed\" } : {}}\r\n            color={!etat ? \"default\" : \"lime\"}\r\n            key={value}\r\n          >\r\n            LBP\r\n          </Tag>\r\n        );\r\n    }\r\n  }\r\n  getToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    if (value == null) {\r\n      //  window.location.href = authApp;\r\n      console.log(\"tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ token: value });\r\n    console.log(\"tokne from host => :\", this.state.token);\r\n    console.log(\"-------------------fin-GetToken-------------------\");\r\n    await this.getData();\r\n  };\r\n  getRefrechToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetRefrechToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"403\");\r\n    }\r\n    if (value == null) {\r\n      //  window.location.href = authApp;\r\n      console.log(\"Refech tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ Refrech: value });\r\n    console.log(\"Refech tokne from host => :\", this.state.Refrech);\r\n    console.log(\"-------------------fin-GetRefrechToken-------------------\");\r\n  };\r\n  async componentDidMount() {\r\n    console.log(\"------------------debut-ResultaDeRecherche------------------\");\r\n    const { location } = this.props.history;\r\n\r\n    var search = \"\";\r\n    var filter = \"\";\r\n    console.log(\"location.search  =>  :\", location.search);\r\n    if (location.search != \"\") {\r\n      search = location.search.slice(1).split(\"?\")[0].split(\"search=\")[1];\r\n      if (search == null) {\r\n        filter = location.search.slice(1).split(\"?\")[0];\r\n      }\r\n    }\r\n    this.setState({ search: search, filter });\r\n    console.log(\"Valeur de recherche => :\", search);\r\n    console.log(\"Valeur de filtrage => :\", filter);\r\n    console.log(\"-------------------fin-ResultaDeRecherche-------------------\");\r\n    this.props.hostStorage.get(\"refresh_token\", await this.getRefrechToken);\r\n    this.props.hostStorage.get(\"access_token\", await this.getToken);\r\n  }\r\n  onChange = (value, dateString) => {\r\n    console.log(\"Selected Time: \", value);\r\n    console.log(\r\n      \"Formatted Selected Time: \",\r\n      dateString,\r\n      this.state.dateFinDesactiver\r\n    );\r\n    this.setState({ dateFinDesactiver: dateString });\r\n  };\r\n  refrechpage() {\r\n    // this.props.history.replace(\"app\");\r\n    window.location.reload();\r\n  }\r\n  onOk(value) {\r\n    console.log(\"onOk: \", value);\r\n  }\r\n  handleDelete = (key) => {\r\n    const dataSource = [...this.state.datass];\r\n    this.setState({\r\n      datass: dataSource.filter((item) => item.key !== key),\r\n    });\r\n  };\r\n  async getData() {\r\n    console.log(\"------------------debut-GetProduits------------------\");\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n      // () => this.getData()\r\n    );\r\n    try {\r\n      const res = await getAllfournissuers(\r\n        this.props.service,\r\n        this.state.search,\r\n\r\n        !!verifyToken ? verifyToken : this.state.token,\r\n        this.state.filter\r\n      );\r\n      console.log(\"succes from api : user (getAll()) => :\", res);\r\n\r\n      res.data != null &&\r\n        res.data.map((data, index) => {\r\n          Object.assign(data, {\r\n            key: index,\r\n            MUTETAT: true,\r\n          });\r\n        });\r\n      this.setState({\r\n        datass: res.data != null ? res.data : null,\r\n        loading: false,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error  :  GetUsers  => : \", error);\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"500\");\r\n      }\r\n    }\r\n    console.log(\"-------------------fin-GetUser-------------------\");\r\n  }\r\n  render() {\r\n    const { xScroll, yScroll, ...state } = this.state;\r\n    const scroll = {};\r\n    if (yScroll) {\r\n      scroll.y = 240;\r\n    }\r\n    if (xScroll) {\r\n      scroll.x = \"100vw\";\r\n    }\r\n\r\n    const tableColumns = this.state.columns.map((item) => ({\r\n      ...item,\r\n      ellipsis: state.ellipsis,\r\n    }));\r\n    if (xScroll === \"fixed\") {\r\n      tableColumns[0].fixed = true;\r\n      tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n    }\r\n    return (\r\n      <div style={{ height: \"100%\", width: \"100%\" }}>\r\n        {/* <Button\r\n          onClick={() => {\r\n            document.body.style.setProperty(\"--header\", \"#eee\");\r\n            document.body.style.setProperty(\"--link-color\", \"#eee\");\r\n          }}\r\n        >\r\n          kkk\r\n        </Button> */}\r\n        <Row justify=\"center\">\r\n          <Col span={24} style={{ height: \"587px\", backgroundColor: \"#fff\" }}>\r\n            <Modal\r\n              title={this.state.model.title}\r\n              centered\r\n              visible={this.state.model.visible}\r\n              closable={false}\r\n              destroyOnClose={true}\r\n              footer={[\r\n                <Button\r\n                  key=\"back\"\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      model: {\r\n                        title: \"\",\r\n                        Content: \"\",\r\n                        width: 400,\r\n                        onOk: console.log(\"ok\"),\r\n                        visible: false,\r\n                      },\r\n                    })\r\n                  }\r\n                >\r\n                  Return\r\n                </Button>,\r\n              ]}\r\n              width={this.state.model.width}\r\n            >\r\n              {this.state.model.Content}\r\n            </Modal>\r\n            <Table\r\n              className=\"template-dms\"\r\n              title={() => (\r\n                <TitleCustomize\r\n                  vues={{\r\n                    vueSysteme: vueSysteme,\r\n                    vuesPersonnalises: vuesPersonnalises,\r\n                  }}\r\n                  title={\"\"}\r\n                  enAdd={this.handleAdd}\r\n                  type=\"primary\"\r\n                  style={{\r\n                    marginBottom: 16,\r\n                  }}\r\n                />\r\n              )}\r\n              size=\"small\"\r\n              pagination={{\r\n                position: [\"none\", \"bottomRight\"],\r\n              }}\r\n              scroll={{ x: 2245 }}\r\n              {...this.state}\r\n              vues={{\r\n                vueSysteme: vueSysteme,\r\n                vuesPersonnalises: vuesPersonnalises,\r\n              }}\r\n              size=\"small\"\r\n              columns={tableColumns}\r\n              dataSource={state.hasData ? this.state.datass : null}\r\n              scroll={scroll}\r\n              scroll={{ y: 435 }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Results);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport { Col, Divider, Input, Row, message, ConfigProvider } from \"antd\";\r\nimport {\r\n  Checkbox,\r\n  Form,\r\n  notification,\r\n  Select,\r\n  Spin,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"dmsui\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { GlobalOutlined, MailOutlined, UserOutlined } from \"@ant-design/icons\";\r\n\r\nimport AvatarUpdate from \"./formulaireComponents/AvatarUpdate\";\r\nimport TabInput from \"./formulaireComponents/TabInput\";\r\nimport AdresseTable from \"./formulaireComponents/AdresseTable\";\r\nimport {\r\n  ActiveDesactiveUser,\r\n  getUserByID,\r\n} from \"../../../DjangoService/userService\";\r\nimport { authApp, userAdvancedSearchPath } from \"../../../config\";\r\nimport { FileUpload } from \"./formulaireComponents/FileUpload\";\r\nimport LogistiqueTable from \"./formulaireComponents/LogistiqueTable\";\r\nimport { validateMessages } from \"../../../Constante\";\r\nimport { connexion } from \"../../../DjangoService/authnService\";\r\nimport {\r\n  getAllSM,\r\n  getProduitByID,\r\n  getUlByPrd,\r\n  insertProduit,\r\n  updateProduit,\r\n} from \"../../../DjangoService/ProduitService\";\r\nimport AssortimentVendable from \"./formulaireComponents/AssortimentVendable\";\r\nimport { getAllSites } from \"../../../DjangoService/SiteService\";\r\nimport Calendrierfournisseur from \"./formulaireComponents/Calendrierfournisseur\";\r\nimport ContactTable from \"./formulaireComponents/ContactTable\";\r\nimport {\r\n  insertFournisseur,\r\n  updateFournisseur,\r\n} from \"../../../DjangoService/FournisseurService\";\r\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\r\nconst withRouterAndRef = (WrappedComponent) => {\r\n  class InnerComponentWithRef extends React.Component {\r\n    render() {\r\n      const { forwardRef, ...rest } = this.props;\r\n      return <WrappedComponent {...rest} ref={forwardRef} />;\r\n    }\r\n  }\r\n  const ComponentWithRouter = withRouter(InnerComponentWithRef, {\r\n    withRef: true,\r\n  });\r\n  return React.forwardRef((props, ref) => {\r\n    return <ComponentWithRouter {...props} forwardRef={ref} />;\r\n  });\r\n};\r\n\r\nclass Formulaire extends Component {\r\n  static propTypes = {\r\n    prop: PropTypes,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataToSend: {\r\n        Adresse: {\r\n          New: [],\r\n          update: [],\r\n          delete: [],\r\n        },\r\n        Contact: {\r\n          New: [],\r\n          update: [],\r\n          delete: [],\r\n        },\r\n        UL: {\r\n          New: [],\r\n          update: [],\r\n          delete: [],\r\n        },\r\n        SM: { New: [], update: null, delete: null },\r\n        VL: {\r\n          New: [],\r\n          update: [],\r\n          delete: [],\r\n        },\r\n        ASV: {\r\n          New: [],\r\n          update: [],\r\n          delete: [],\r\n        },\r\n        VV: { New: [], update: [], delete: [] },\r\n        files: { New: [], update: [], delete: [] },\r\n        PRD: null,\r\n      },\r\n      AllSM: [],\r\n      AllSites: [],\r\n      AllVV: [],\r\n      produit: null,\r\n      token: null,\r\n      ListAllUL: [],\r\n      drawerVisible: \"\",\r\n      token: null,\r\n      tabPointDeVente: false,\r\n      changecome: false,\r\n      Profiles: [],\r\n      loading: false,\r\n      form: {},\r\n      isLoading: this.props.match.params.id != null ? true : false,\r\n      image: null,\r\n      targetKeys: [],\r\n      update: this.props.match.params.id != null ? false : true,\r\n      defaultValue: null,\r\n\r\n      datas: { US_EMAIL: \"\", US_NOMUSR: \"\", US_PRNUSR: \"\", US_TYPUSR: \"\" },\r\n    };\r\n    this.getRefrechToken = this.getRefrechToken.bind(this);\r\n    this.getToken = this.getToken.bind(this);\r\n  }\r\n\r\n  formRef = React.createRef();\r\n  formContactRef = React.createRef();\r\n  adressRef = React.createRef();\r\n  setImage(img) {\r\n    this.setState({ image: img });\r\n  }\r\n  activerUpdate() {\r\n    if (this.props.match.params.id != null) {\r\n      this.setState({ update: !this.state.update });\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  onChange = (keys) => {\r\n    this.setState({ targetKeys: keys });\r\n  };\r\n\r\n  onFinish = async (values) => {\r\n    console.log(\"------------------debut-postProduit------------------\");\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n    );\r\n    var loadingOnsubmit = true;\r\n    message.loading(\"Loading..\", loadingOnsubmit);\r\n    try {\r\n      // const rangeTimeValue = values[\"date\"];\r\n\r\n      if (this.props.match.params.id != null) {\r\n        console.log(\"------------------debut-putFournisseur------------------\");\r\n        console.log(\"update fournisseur => : \", values);\r\n        console.log(\"add+update complext data => : \", this.state.dataToSend);\r\n        values.RFRLOGO = this.state.image;\r\n\r\n        const res = await updateFournisseur(\r\n          this.props.service,\r\n          this.props.match.params.id,\r\n          !!verifyToken ? verifyToken : this.state.token,\r\n          values,\r\n          this.state.dataToSend.Adresse,\r\n          this.state.dataToSend.Contact\r\n          // this.state.dataToSend.VL,\r\n          // this.state.dataToSend.files,\r\n          // this.state.dataToSend.VV,\r\n          // this.state.dataToSend.UL,\r\n          // this.state.dataToSend.ASV\r\n        );\r\n        loadingOnsubmit = false;\r\n        notification.open({\r\n          message: \"Success\",\r\n          description: \"Le fournisseur a été modifier avec succès.\",\r\n          className: \"custom-class\",\r\n          type: \"success\",\r\n          placement: \"bottomRight\",\r\n          style: {\r\n            width: 400,\r\n          },\r\n        });\r\n        this.props.onFormulaireChange(true);\r\n        this.props.goTo(\"../\" + userAdvancedSearchPath);\r\n      } else {\r\n        let photos = new FormData();\r\n        photos.append(\r\n          \"RFRLOGO\",\r\n          !!this.state.image ? this.state.image.originFileObj : null\r\n        );\r\n\r\n        console.log(\"add produit => : \", values);\r\n        console.log(\"add SM => : \", this.state.dataToSend);\r\n        const res = await insertFournisseur(\r\n          this.props.service,\r\n\r\n          !!verifyToken ? verifyToken : this.state.token,\r\n          values,\r\n          photos,\r\n          this.state.dataToSend.Adresse,\r\n          this.state.dataToSend.Contact\r\n        );\r\n        loadingOnsubmit = false;\r\n        notification.open({\r\n          message: \"Success\",\r\n          description: \"Le produit a été créé avec succès.\",\r\n          className: \"custom-class\",\r\n          type: \"success\",\r\n          placement: \"bottomRight\",\r\n          style: {\r\n            width: 400,\r\n          },\r\n        });\r\n        this.props.onFormulaireChange(true);\r\n        this.props.goTo(userAdvancedSearchPath);\r\n      }\r\n      console.log(\"------------------debut-postProduit------------------\");\r\n    } catch (error) {\r\n      console.log(\"error2 :\", error);\r\n      this.props.onFormulaireChange(false);\r\n      notification.open({\r\n        message: \"Error\",\r\n        description: \"Le produit n'a pas pu être créé.Veuillez réessayer.\",\r\n        className: \"custom-class\",\r\n        type: \"error\",\r\n        placement: \"bottomRight\",\r\n        style: {\r\n          width: 400,\r\n        },\r\n      });\r\n    }\r\n  };\r\n  getToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    if (value == null) {\r\n      //  window.location.href = authApp;\r\n      console.log(\"tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ token: value });\r\n    console.log(\"tokne from host => :\", this.state.token);\r\n    console.log(\"-------------------fin-GetToken-------------------\");\r\n    await this.getSM();\r\n    await this.getSites();\r\n    this.props.match.params.id != null && (await this.getDatas());\r\n    this.props.match.params.id != null && (await this.getUL()); // await this.getDataById();\r\n  };\r\n  getRefrechToken = async (error, value) => {\r\n    console.log(\"------------------debut-GetRefrechToken------------------\");\r\n    if (!!error) {\r\n      console.log(\"error => :\", error);\r\n      this.props.goTo(\"403\");\r\n    }\r\n    if (value == null) {\r\n      //  window.location.href = authApp;\r\n      console.log(\"Refech tokne is null => : \", value);\r\n      this.props.goTo(\"../403\");\r\n    }\r\n    this.setState({ Refrech: value });\r\n    console.log(\"Refech tokne from host => :\", this.state.Refrech);\r\n    console.log(\"-------------------fin-GetRefrechToken-------------------\");\r\n    this.props.hostStorage.get(\"access_token\", await this.getToken);\r\n  };\r\n  async getSites() {\r\n    console.log(\"------------------debut-GetSite------------------\");\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n    );\r\n    try {\r\n      const res = await getAllSites(\r\n        \"http://localhost:8000/DMERP/v1/Referentiel/Sites/\",\r\n        \"\",\r\n        !!verifyToken ? verifyToken : this.state.token\r\n      );\r\n      console.log(\"succes from api : Produit =>  (getSites()) => :\", res);\r\n      this.setState({\r\n        AllSites: res.data != null ? res.data : null,\r\n      });\r\n      console.log(\"-------------------fin-GetSites-------------------\");\r\n    } catch (error) {\r\n      console.log(\"Error from api : Produit =>  getSites  => : \", error);\r\n\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"500\");\r\n      }\r\n      console.log(\"-------------------fin-GetSites-------------------\");\r\n    }\r\n  }\r\n  async getSM() {\r\n    console.log(\r\n      \"------------------debut-GetStructures-Marchandise------------------\"\r\n    );\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n    );\r\n    try {\r\n      const res = await getAllSM(\r\n        this.props.service,\r\n        \"\",\r\n        !!verifyToken ? verifyToken : this.state.token\r\n      );\r\n      console.log(\r\n        \"succes from api : Produit =>  (getStructures-Marchandise()) => :\",\r\n        res\r\n      );\r\n      this.setState({\r\n        AllSM: res.data != null ? res.data : null,\r\n      });\r\n      console.log(\r\n        \"-------------------fin-GetStructures-Marchandise-------------------\"\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"Error from api : Produit =>  getStructures-Marchandise  => : \",\r\n        error\r\n      );\r\n\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"500\");\r\n      }\r\n      console.log(\r\n        \"-------------------fin-GetStructures-Marchandise-------------------\"\r\n      );\r\n    }\r\n  }\r\n  async getUL() {\r\n    console.log(\r\n      \"------------------debut-GetUnité-Logistique------------------\"\r\n    );\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n    );\r\n    try {\r\n      const res = await getUlByPrd(\r\n        this.props.service,\r\n        this.props.match.params.id,\r\n        !!verifyToken ? verifyToken : this.state.token\r\n      );\r\n      console.log(\r\n        \"succes from api : Produit =>  (getUnité-Logistique()) => :\",\r\n        res\r\n      );\r\n      this.setState({\r\n        ListAllUL: res.data != null ? res.data : null,\r\n      });\r\n      console.log(\"ul from formulaire \", this.state.ListAllUL);\r\n      console.log(\"-------------------fin--------------------\");\r\n    } catch (error) {\r\n      console.log(\r\n        \"Error from api : Produit =>  getUnité-Logistique  => : \",\r\n        error\r\n      );\r\n\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"500\");\r\n      }\r\n      console.log(\r\n        \"-------------------fin-GetUnité-Logistique-------------------\"\r\n      );\r\n    }\r\n  }\r\n  async getDatas() {\r\n    console.log(\r\n      \"------------------debut-GetProduit-\" +\r\n        this.props.match.params.id +\r\n        \"------------------\"\r\n    );\r\n    var verifyToken = await connexion(\r\n      this.state.token,\r\n      this.state.Refrech,\r\n      () => (window.location.href = authApp),\r\n\r\n      this.props.hostStorage\r\n    );\r\n    try {\r\n      const res = await getProduitByID(\r\n        this.props.service,\r\n        this.props.match.params.id,\r\n        !!verifyToken ? verifyToken : this.state.token\r\n      );\r\n      !!res.data.VV &&\r\n        res.data.VV.map(\r\n          (data, index) =>\r\n            (data.RPVVPHOTO = \"http://localhost:8000\" + data.RPVVPHOTO)\r\n        );\r\n      console.log(\r\n        \"succes from api : Produit =>  (getProduit(\" +\r\n          this.props.match.params.id +\r\n          \")) => :\",\r\n        res\r\n      );\r\n      res.data.ASSVEN != null\r\n        ? (res.data.vendable = true)\r\n        : (res.data.vendable = false);\r\n\r\n      this.setState({\r\n        tabPointDeVente: res.data.vendable,\r\n        defaultValue: res.data != null ? res.data : null,\r\n        AllVV: res.data.VV != null ? res.data.VV : [],\r\n\r\n        isLoading: false,\r\n      });\r\n      console.log(\r\n        \"-------------------fin-GetProduit-\" +\r\n          this.props.match.params.id +\r\n          \"-------------------\"\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"Error from api : Produit =>  (getProduit(\" +\r\n          this.props.match.params.id +\r\n          \"))  => : \",\r\n        error\r\n      );\r\n\r\n      if (error == \"Error: Request failed with status code 401\") {\r\n        this.props.goTo(\"403\");\r\n      } else if (error == \"Error: Network Error\") {\r\n        this.props.goTo(\"500\");\r\n      }\r\n      console.log(\r\n        \"-------------------fin-GetProduit-\" +\r\n          this.props.match.params.id +\r\n          \"-------------------\"\r\n      );\r\n    }\r\n  }\r\n  onSubmit = () => {\r\n    // console.log(\"adress =>\", this.adressRef.current.getDataSource());\r\n    this.formRef.current.submit();\r\n  };\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n    this.formContactRef.current.onReset();\r\n    this.setState({ changecome: false });\r\n    // console.log(this.formRef.current);\r\n  };\r\n  onFill = () => {\r\n    this.formRef.current.setFieldsValue({\r\n      note: \"Hello world!\",\r\n      gender: \"male\",\r\n    });\r\n  };\r\n  async removeElem(dateFin) {\r\n    console.log(\"date fin => \", dateFin);\r\n    try {\r\n      await ActiveDesactiveUser(\r\n        this.props.service,\r\n\r\n        {\r\n          activate: false,\r\n          MUTDFIN: dateFin,\r\n          pk: this.props.match.params.id,\r\n        }\r\n      );\r\n      // deleteUser(this.props.service, this.props.match.params.id);\r\n      this.props.onFormulaireChange(true);\r\n      notification.open({\r\n        message: \"Info\",\r\n        description: \"This user is deleted successfully\",\r\n        className: \"custom-class\",\r\n        type: \"info\",\r\n        placement: \"bottomRight\",\r\n        style: {\r\n          width: 400,\r\n        },\r\n      });\r\n      message\r\n        .loading(\"Loading...\", 0.5)\r\n        .then(() => message.success(\"Finished\", 0.5));\r\n      await delay(750);\r\n\r\n      this.props.goTo(\"../\" + userAdvancedSearchPath);\r\n    } catch (error) {\r\n      console.log(error);\r\n      notification.open({\r\n        message: \"Error\",\r\n        description: \"This user could not be deleted\",\r\n        className: \"custom-class\",\r\n        type: \"error\",\r\n        placement: \"bottomRight\",\r\n        style: {\r\n          width: 400,\r\n        },\r\n      });\r\n    }\r\n  }\r\n  loading(value) {\r\n    this.setState({ loading: value });\r\n  }\r\n  async componentDidMount() {\r\n    this.props.match.params.id != null\r\n      ? this.props.disabelEditButton(false)\r\n      : this.props.disabelEditButton(true);\r\n\r\n    this.props.hostStorage.get(\"refresh_token\", await this.getRefrechToken);\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    if (!this.state.changecome) {\r\n      this.props.onFormulaireChange(false);\r\n      this.setState({ changecome: true });\r\n    }\r\n  };\r\n  enCheckVenduCahnge = (event) => {\r\n    console.log(\"------------------debut-enCheckVenduCahnge------------------\");\r\n    this.setState({ tabPointDeVente: event.target.checked });\r\n    console.log(`tabs point de vente is : ${event.target.checked}`);\r\n    console.log(\"-------------------fin-enCheckVenduCahnge-------------------\");\r\n  };\r\n  labelSelectComposant = (label, Icon, width) => {\r\n    return (\r\n      <div\r\n        className={\"ant-input-group-addon\"}\r\n        style={{\r\n          border: \"1px solid #dcdcdc\",\r\n          display: \"inline-flex\",\r\n          width: \"128px\",\r\n          // backgroundColor: \"#fafafa\",\r\n          paddingLeft: \"10px\",\r\n          height: \"32px\",\r\n          width: width,\r\n          // \"25%\",\r\n        }}\r\n      >\r\n        <div\r\n          //\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          <Typography\r\n            className={\"text-input-group\"}\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"120px\",\r\n              // color: \"#fff\",\r\n              fontSize: \"14px\",\r\n              fontWeight: \"600\",\r\n            }}\r\n          >\r\n            {label}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  labelComposant = (label, Icon) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          // backgroundColor: \"#555\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {/* <Icon\r\n          className=\"site-form-item-icon\"\r\n          style={{\r\n            marginRight: \"10px\",\r\n          }}\r\n        />{\" \"} */}\r\n        <Typography\r\n          className={\"text-input-group\"}\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"80px\",\r\n            // color: \"#fff\",\r\n            fontSize: \"14px\",\r\n            fontWeight: \"600\",\r\n          }}\r\n        >\r\n          {label}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div style={{ height: \"100%\", width: \"100%\" }}>\r\n        {!this.state.isLoading && (\r\n          <Spin spinning={this.state.loading} delay={500}>\r\n            <Row\r\n              gutter={(16, 0)}\r\n              justify=\"center\"\r\n              style={{ width: this.state.drawerVisible }}\r\n            >\r\n              {/* 1435px */}\r\n              {/* <Button onClick={() => this.onSubmit()}>add</Button> */}\r\n              <Col span={this.state.drawerVisible == \"\" ? 18 : 24}>\r\n                <Row\r\n                  gutter={(16, 0)}\r\n                  justify=\"center\"\r\n                  align=\"stretch\"\r\n                  wrap={false}\r\n                >\r\n                  <Col\r\n                    // flex=\"auto\"\r\n                    span={24}\r\n                    style={{\r\n                      padding: \"0px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                  >\r\n                    <Divider\r\n                      className={\"border-main-content\"}\r\n                      orientation=\"left\"\r\n                      style={{\r\n                        margin: \"-12px  -2px -12px 0px\",\r\n                      }}\r\n                    >\r\n                      Information\r\n                    </Divider>{\" \"}\r\n                    <Row\r\n                      // gutter={[20, 20]}\r\n                      align=\"stretch\"\r\n                      justify=\"space-between\"\r\n                      className={\"border-main-content-2\"}\r\n                      style={{\r\n                        marginRight: \"0px\",\r\n                        marginLeft: \"0px\",\r\n                        padding: \"22px 22px\",\r\n                        borderRadius: \"3px\",\r\n                        borderWidth: \"0px 1px 1px 1px\",\r\n                        borderStyle: \"solid\",\r\n                      }}\r\n                    >\r\n                      <Col span={24}>\r\n                        <ConfigProvider\r\n                          form={{ validateMessages: validateMessages.fr }}\r\n                        >\r\n                          <Form\r\n                            ref={this.formRef}\r\n                            name=\"control-ref\"\r\n                            initialValues={{ ...this.state.defaultValue }}\r\n                            onFinish={this.onFinish}\r\n                            // encType=\"multipart/form-data\"\r\n                          >\r\n                            <Row\r\n                              gutter={[20, 20]}\r\n                              justify=\"center\"\r\n                              align=\"stretch\"\r\n                              wrap={false}\r\n                            >\r\n                              <Col flex={\"auto\"}>\r\n                                <Row\r\n                                  gutter={[10, 0]}\r\n                                  align=\"stretch\"\r\n                                  justify=\"space-between\"\r\n                                >\r\n                                  <Col span={14}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Form.Item\r\n                                          name={\"RFRCEXT\"}\r\n                                          hasFeedback\r\n                                          rules={[\r\n                                            {\r\n                                              required: true,\r\n                                              max: 50,\r\n                                            },\r\n                                          ]}\r\n                                        >\r\n                                          {/* {this.state.update ? ( */}\r\n                                          <Input\r\n                                            addonBefore={this.labelComposant(\r\n                                              \"Code\",\r\n                                              UserOutlined\r\n                                            )}\r\n                                            placeholder=\"Entrer le code...\"\r\n                                            readOnly={\r\n                                              this.state.update ? false : true\r\n                                            }\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        </Form.Item>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>\r\n                                  <Col span={10}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Form.Item\r\n                                          name={\"RFRLIBC\"}\r\n                                          hasFeedback\r\n                                          rules={[\r\n                                            {\r\n                                              required: false,\r\n                                              max: 50,\r\n                                            },\r\n                                          ]}\r\n                                        >\r\n                                          <Input\r\n                                            addonBefore={this.labelComposant(\r\n                                              \"Acronyme\",\r\n                                              MailOutlined\r\n                                            )}\r\n                                            placeholder=\"Entrer l'acronyme...\"\r\n                                            readOnly={\r\n                                              this.state.update ? false : true\r\n                                            }\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        </Form.Item>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>{\" \"}\r\n                                  <Col span={18}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Form.Item\r\n                                          name={\"RFRLIBL\"}\r\n                                          hasFeedback\r\n                                          rules={[\r\n                                            {\r\n                                              required: false,\r\n                                              max: 50,\r\n                                            },\r\n                                          ]}\r\n                                        >\r\n                                          <Input\r\n                                            addonBefore={this.labelComposant(\r\n                                              \"Libellé\",\r\n                                              MailOutlined\r\n                                            )}\r\n                                            placeholder=\"Entrer le libellé...\"\r\n                                            readOnly={\r\n                                              this.state.update ? false : true\r\n                                            }\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        </Form.Item>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>\r\n                                  <Col\r\n                                    span={6}\r\n                                    style={{\r\n                                      display: \"flex\",\r\n                                      alignContent: \"start\",\r\n                                      flexWrap: \"wrap\",\r\n                                    }}\r\n                                  >\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Input.Group compact>\r\n                                          {this.labelSelectComposant(\r\n                                            \"Devise\",\r\n                                            GlobalOutlined,\r\n                                            \"37%\"\r\n                                          )}\r\n                                          <Form.Item\r\n                                            name={\"RFRDEVISE\"}\r\n                                            style={{\r\n                                              marginBottom: \"15px\",\r\n                                              width: \"63%\",\r\n                                            }}\r\n                                            hasFeedback\r\n                                            rules={[\r\n                                              {\r\n                                                required: false,\r\n                                              },\r\n                                            ]}\r\n                                          >\r\n                                            <Select\r\n                                              onChange={this.handleInputChange}\r\n                                              allowClear\r\n                                              placeholder=\"Selectionner la devise...\"\r\n                                              disabled={\r\n                                                this.state.update ? false : true\r\n                                              }\r\n                                            >\r\n                                              <Select.Option value={0}>\r\n                                                URO\r\n                                              </Select.Option>\r\n                                              <Select.Option value={1}>\r\n                                                USD\r\n                                              </Select.Option>\r\n                                              <Select.Option value={2}>\r\n                                                DZ\r\n                                              </Select.Option>\r\n                                            </Select>\r\n                                          </Form.Item>\r\n                                        </Input.Group>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>\r\n                                  <Col span={12}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Input.Group compact>\r\n                                          {this.labelSelectComposant(\r\n                                            \"Type\",\r\n                                            GlobalOutlined,\r\n                                            \"25%\"\r\n                                          )}\r\n                                          <Form.Item\r\n                                            name={\"RFRTYPE\"}\r\n                                            style={{\r\n                                              marginBottom: \"15px\",\r\n                                              width: \"75%\",\r\n                                            }}\r\n                                            hasFeedback\r\n                                            rules={[\r\n                                              {\r\n                                                required: false,\r\n                                              },\r\n                                            ]}\r\n                                          >\r\n                                            <Select\r\n                                              onChange={this.handleInputChange}\r\n                                              allowClear\r\n                                              placeholder=\"Selectionner le pays...\"\r\n                                              disabled={\r\n                                                this.state.update ? false : true\r\n                                              }\r\n                                            >\r\n                                              <Select.Option value={0}>\r\n                                                URO\r\n                                              </Select.Option>\r\n                                              <Select.Option value={1}>\r\n                                                USD\r\n                                              </Select.Option>\r\n                                              <Select.Option value={2}>\r\n                                                DZ\r\n                                              </Select.Option>\r\n                                            </Select>\r\n                                          </Form.Item>\r\n                                        </Input.Group>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>{\" \"}\r\n                                  <Col span={12}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Input.Group compact>\r\n                                          {this.labelSelectComposant(\r\n                                            \"Pays\",\r\n                                            GlobalOutlined,\r\n                                            \"25%\"\r\n                                          )}\r\n                                          <Form.Item\r\n                                            name={\"RFRPAYS\"}\r\n                                            style={{\r\n                                              marginBottom: \"15px\",\r\n                                              width: \"75%\",\r\n                                            }}\r\n                                            hasFeedback\r\n                                            rules={[\r\n                                              {\r\n                                                required: false,\r\n                                              },\r\n                                            ]}\r\n                                          >\r\n                                            <Select\r\n                                              onChange={this.handleInputChange}\r\n                                              allowClear\r\n                                              placeholder=\"Selectionner le pays...\"\r\n                                              disabled={\r\n                                                this.state.update ? false : true\r\n                                              }\r\n                                            >\r\n                                              <Select.Option value={0}>\r\n                                                URO\r\n                                              </Select.Option>\r\n                                              <Select.Option value={1}>\r\n                                                USD\r\n                                              </Select.Option>\r\n                                              <Select.Option value={2}>\r\n                                                DZ\r\n                                              </Select.Option>\r\n                                            </Select>\r\n                                          </Form.Item>\r\n                                        </Input.Group>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>\r\n                                  <Col span={24}>\r\n                                    <Row gutter={[0, 0]} align=\"stretch\">\r\n                                      <Col flex=\"auto\">\r\n                                        <Form.Item\r\n                                          name={\"RPRDSC\"}\r\n                                          hasFeedback\r\n                                          rules={[\r\n                                            {\r\n                                              required: false,\r\n                                              max: 2024,\r\n                                            },\r\n                                          ]}\r\n                                        >\r\n                                          <Input.TextArea\r\n                                            addonBefore={this.labelComposant(\r\n                                              \"Description\",\r\n                                              UserOutlined\r\n                                            )}\r\n                                            placeholder=\"Entrer le description...\"\r\n                                            rows={3}\r\n                                            readOnly={\r\n                                              this.state.update ? false : true\r\n                                            }\r\n                                            onChange={this.handleInputChange}\r\n                                          />\r\n                                        </Form.Item>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>{\" \"}\r\n                              <Col flex={\"200px\"}>\r\n                                <Row gutter={[0, 0]} align=\"stretch\">\r\n                                  <Col flex=\"auto\">\r\n                                    <AvatarUpdate\r\n                                      setImage={(img) => this.setImage(img)}\r\n                                      defaultValue={\r\n                                        this.state.defaultValue != null\r\n                                          ? this.state.defaultValue.RFRLOGO\r\n                                          : null\r\n                                      }\r\n                                      readOnly={\r\n                                        this.state.update ? false : true\r\n                                      }\r\n                                    />\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>{\" \"}\r\n                            </Row>\r\n                            <div>\r\n                              <Tabs\r\n                                type=\"card\"\r\n                                className=\"tabs-formulaire dms-tabs\"\r\n                              >\r\n                                {\" \"}\r\n                                <Tabs.TabPane\r\n                                  tab={<Tab title={\"Adresse\"} />}\r\n                                  key=\"1\"\r\n                                >\r\n                                  <div\r\n                                    className={\"template-tabs-panel\"}\r\n                                    style={{\r\n                                      height: \"100%\",\r\n                                      border: \"1px solid #eee\",\r\n                                      borderTop: \"0px\",\r\n                                    }}\r\n                                  >\r\n                                    <AdresseTable\r\n                                      ListAllUL={this.state.ListAllUL}\r\n                                      ListUL={this.state.dataToSend.VL.New}\r\n                                      setNewAdresse={(Adresse) => {\r\n                                        const { New } =\r\n                                          this.state.dataToSend.Adresse;\r\n                                        New.push(Adresse);\r\n\r\n                                        console.log(\r\n                                          \"data a envoyer a l'api => \",\r\n                                          this.state.dataToSend\r\n                                        );\r\n                                      }}\r\n                                      setDeleteAdresse={(data) => {\r\n                                        if (data.ID_ROWID != null) {\r\n                                          const deleteAdresse =\r\n                                            this.state.dataToSend.Adresse\r\n                                              .delete;\r\n                                          deleteAdresse.push(data);\r\n                                          const deleteNewAdresse =\r\n                                            this.state.dataToSend.Adresse;\r\n\r\n                                          deleteNewAdresse.update =\r\n                                            deleteNewAdresse.update.filter(\r\n                                              (item) => item.key !== data.key\r\n                                            );\r\n                                          console.log(\r\n                                            \"data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        } else {\r\n                                          const deleteNewAdresse =\r\n                                            this.state.dataToSend.Adresse;\r\n\r\n                                          deleteNewAdresse.New =\r\n                                            deleteNewAdresse.New.filter(\r\n                                              (item) => item.key !== data.key\r\n                                            );\r\n\r\n                                          console.log(\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        }\r\n                                      }}\r\n                                      setUpdateAdresse={(data, values) => {\r\n                                        if (data.ID_ROWID != null) {\r\n                                          const updateAdresse =\r\n                                            this.state.dataToSend.Adresse\r\n                                              .update;\r\n                                          let result = updateAdresse.findIndex(\r\n                                            ({ ID_ROWID }) =>\r\n                                              ID_ROWID === data.ID_ROWID\r\n                                          );\r\n                                          if (result == -1) {\r\n                                            updateAdresse.push({\r\n                                              ...data,\r\n                                              ...values,\r\n                                            });\r\n                                          } else {\r\n                                            updateAdresse[result] = {\r\n                                              ...data,\r\n                                              ...values,\r\n                                            };\r\n                                          }\r\n                                          console.log(\r\n                                            result,\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        } else {\r\n                                          const updateNewAdresse =\r\n                                            this.state.dataToSend.Adresse.New;\r\n                                          var result =\r\n                                            updateNewAdresse.findIndex(\r\n                                              ({ key }) => key === data.key\r\n                                            );\r\n                                          if (result != -1) {\r\n                                            updateNewAdresse[result] = {\r\n                                              ...data,\r\n                                              ...values,\r\n                                            };\r\n                                          }\r\n                                          console.log(\r\n                                            result,\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        }\r\n                                      }}\r\n                                      showDrawer={this.props.showDrawer}\r\n                                      closeDrawer={() =>\r\n                                        this.props.closeDrawer()\r\n                                      }\r\n                                      setSiseForm={(width) =>\r\n                                        this.setState({ drawerVisible: width })\r\n                                      }\r\n                                      setDrawerState={(\r\n                                        titre,\r\n                                        content,\r\n                                        width,\r\n                                        enClose\r\n                                      ) =>\r\n                                        this.props.setDrawerState(\r\n                                          titre,\r\n                                          content,\r\n                                          width,\r\n                                          () => enClose()\r\n                                        )\r\n                                      }\r\n                                      ref={this.adressRef}\r\n                                      updateAdress={this.state.update}\r\n                                      update={this.state.update}\r\n                                      datasource={\r\n                                        this.state.defaultValue != null\r\n                                          ? this.state.defaultValue.Adresse\r\n                                          : null\r\n                                      }\r\n                                    />\r\n                                  </div>\r\n                                </Tabs.TabPane>\r\n                                <Tabs.TabPane\r\n                                  tab={<Tab title={\"Contact\"} />}\r\n                                  key=\"2\"\r\n                                >\r\n                                  <div\r\n                                    className={\"template-tabs-panel\"}\r\n                                    style={{\r\n                                      height: \"100%\",\r\n                                      border: \"1px solid #eee\",\r\n                                      borderTop: \"0px\",\r\n                                    }}\r\n                                  >\r\n                                    <ContactTable\r\n                                      ListAllUL={this.state.ListAllUL}\r\n                                      ListUL={this.state.dataToSend.VL.New}\r\n                                      setNewContact={(Contact) => {\r\n                                        const { New } =\r\n                                          this.state.dataToSend.Contact;\r\n                                        New.push(Contact);\r\n\r\n                                        console.log(\r\n                                          \"data a envoyer a l'api => \",\r\n                                          this.state.dataToSend\r\n                                        );\r\n                                      }}\r\n                                      setDeleteContact={(data) => {\r\n                                        if (data.ID_ROWID != null) {\r\n                                          const deleteVV =\r\n                                            this.state.dataToSend.Contact\r\n                                              .delete;\r\n                                          const deleteNewAdresse =\r\n                                            this.state.dataToSend.Contact;\r\n\r\n                                          deleteNewAdresse.update =\r\n                                            deleteNewAdresse.update.filter(\r\n                                              (item) => item.key !== data.key\r\n                                            );\r\n                                          deleteVV.push(data);\r\n                                          console.log(\r\n                                            \"data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        } else {\r\n                                          const deleteNewVV =\r\n                                            this.state.dataToSend.Contact;\r\n\r\n                                          deleteNewVV.New =\r\n                                            deleteNewVV.New.filter(\r\n                                              (item) => item.key !== data.key\r\n                                            );\r\n\r\n                                          console.log(\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        }\r\n                                      }}\r\n                                      setUpdateContact={(data, values) => {\r\n                                        if (data.ID_ROWID != null) {\r\n                                          const updateVV =\r\n                                            this.state.dataToSend.Contact\r\n                                              .update;\r\n                                          let result = updateVV.findIndex(\r\n                                            ({ ID_ROWID }) =>\r\n                                              ID_ROWID === data.ID_ROWID\r\n                                          );\r\n                                          if (result == -1) {\r\n                                            updateVV.push({\r\n                                              ...data,\r\n                                              ...values,\r\n                                            });\r\n                                          } else {\r\n                                            updateVV[result] = {\r\n                                              ...data,\r\n                                              ...values,\r\n                                            };\r\n                                          }\r\n                                          console.log(\r\n                                            result,\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        } else {\r\n                                          const updateNewVV =\r\n                                            this.state.dataToSend.Contact.New;\r\n                                          var result = updateNewVV.findIndex(\r\n                                            ({ key }) => key === data.key\r\n                                          );\r\n                                          if (result != -1) {\r\n                                            updateNewVV[result] = {\r\n                                              ...data,\r\n                                              ...values,\r\n                                            };\r\n                                          }\r\n                                          console.log(\r\n                                            result,\r\n                                            \", data to send => :\",\r\n                                            this.state.dataToSend\r\n                                          );\r\n                                        }\r\n                                      }}\r\n                                      showDrawer={this.props.showDrawer}\r\n                                      closeDrawer={() =>\r\n                                        this.props.closeDrawer()\r\n                                      }\r\n                                      setSiseForm={(width) =>\r\n                                        this.setState({ drawerVisible: width })\r\n                                      }\r\n                                      setDrawerState={(\r\n                                        titre,\r\n                                        content,\r\n                                        width,\r\n                                        enClose\r\n                                      ) =>\r\n                                        this.props.setDrawerState(\r\n                                          titre,\r\n                                          content,\r\n                                          width,\r\n                                          () => enClose()\r\n                                        )\r\n                                      }\r\n                                      ref={this.adressRef}\r\n                                      updateAdress={this.state.update}\r\n                                      update={this.state.update}\r\n                                      datasource={\r\n                                        this.state.defaultValue != null\r\n                                          ? this.state.defaultValue.Contact\r\n                                          : null\r\n                                      }\r\n                                    />\r\n                                  </div>\r\n                                </Tabs.TabPane>\r\n                                <Tabs.TabPane\r\n                                  tab={<Tab title={\"Calendrier \"} />}\r\n                                  key=\"3\"\r\n                                  style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"space-between\",\r\n                                  }}\r\n                                >\r\n                                  <div\r\n                                    style={{\r\n                                      width: \"700px\",\r\n                                      // display: \"flex\",\r\n                                      // alignItems: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    <Calendrierfournisseur />\r\n                                  </div>\r\n                                </Tabs.TabPane>\r\n                              </Tabs>\r\n                            </div>{\" \"}\r\n                          </Form>\r\n                        </ConfigProvider>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col span={18}></Col>\r\n            </Row>\r\n          </Spin>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouterAndRef(Formulaire);\r\n","import React, { useImperativeHandle } from \"react\";\r\nimport {\r\n  MemoryRouter,\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n  Redirect,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport DMSProfileHomeSearch from \"./pages/Searche\";\r\nimport DMSProfileInserting from \"./pages/Formulaire\";\r\nimport DMSProfileAdvancedSearch from \"./pages/Results\";\r\nimport Error404 from \"../../templates/template1/Pages/Error404\";\r\nimport {\r\n  userCreationPath,\r\n  userAdvancedSearchPath,\r\n  userHomeSearchPath,\r\n  userUpdatePath,\r\n} from \"../../config\";\r\nconst DMSRoute = React.forwardRef((props, ref) => {\r\n  const history = useHistory();\r\n  const refFormulaire = React.createRef();\r\n  const refHistory = React.createRef();\r\n  useImperativeHandle(ref, () => ({\r\n    Route: {\r\n      search: userHomeSearchPath,\r\n      create: userCreationPath,\r\n      update: userUpdatePath,\r\n      result: userAdvancedSearchPath,\r\n    },\r\n    removeElem: (datefin) => {\r\n      refFormulaire.current.removeElem(datefin);\r\n    },\r\n    activerUpdate: () => {\r\n      refFormulaire.current.activerUpdate();\r\n    },\r\n    history: () => {\r\n      return refHistory.current.history;\r\n    },\r\n    onReset: () => {\r\n      refFormulaire.current.onReset();\r\n    },\r\n    onSubmit: () => {\r\n      refFormulaire.current.onSubmit();\r\n    },\r\n    loadingFormulaire: (value) => {\r\n      refFormulaire.current.loading(value);\r\n      // refFormulaire\r\n    },\r\n    CleanInputChange: (value) => {\r\n      refFormulaire.current.CleanInputChange();\r\n    },\r\n\r\n    history: refHistory.current.history,\r\n    goBack: () => {\r\n      refHistory.current.history.goBack();\r\n    },\r\n    goForward: () => {\r\n      refHistory.current.history.goForward();\r\n    },\r\n  }));\r\n  // history.push(profileHomeSearchPath);\r\n  return (\r\n    <MemoryRouter\r\n      ref={refHistory}\r\n      initialEntries={[userHomeSearchPath]}\r\n      initialIndex={0}\r\n    >\r\n      <Switch>\r\n        {/*  */}\r\n        <Route exact path={userHomeSearchPath}>\r\n          <DMSProfileHomeSearch\r\n            showDrawer={props.showDrawer}\r\n            closeDrawer={() => props.closeDrawer()}\r\n            setDrawerState={(titre, content, width, enClose) =>\r\n              props.setDrawerState(titre, content, width, () => enClose())\r\n            }\r\n            history={history}\r\n            hostStorage={props.hostStorage}\r\n            service={props.service}\r\n            goTo={(link) => props.goTo(link)}\r\n          />\r\n        </Route>\r\n        <Route exact path={userCreationPath}>\r\n          <DMSProfileInserting\r\n            showDrawer={props.showDrawer}\r\n            closeDrawer={() => props.closeDrawer()}\r\n            setDrawerState={(titre, content, width, enClose) =>\r\n              props.setDrawerState(titre, content, width, () => enClose())\r\n            }\r\n            history={history}\r\n            hostStorage={props.hostStorage}\r\n            icon={props.icon}\r\n            disabelEditButton={(value) => props.disabelEditButton(value)}\r\n            service={props.service}\r\n            services={props.services.formulaire}\r\n            ref={refFormulaire}\r\n            goTo={(link) => props.goTo(link)}\r\n            // wrappedComponentRef={(c) => (refFormulaire = c)}\r\n            onFormulaireChange={(value) => props.onFormulaireChange(value)}\r\n          />\r\n        </Route>\r\n        <Route exact path={userAdvancedSearchPath}>\r\n          <DMSProfileAdvancedSearch\r\n            showDrawer={props.showDrawer}\r\n            closeDrawer={() => props.closeDrawer()}\r\n            setDrawerState={(titre, content, width, enClose) =>\r\n              props.setDrawerState(titre, content, width, () => enClose())\r\n            }\r\n            history={history}\r\n            hostStorage={props.hostStorage}\r\n            service={props.service}\r\n            services={props.services.result}\r\n            goTo={(link) => props.goTo(link)}\r\n          />\r\n        </Route>\r\n        <Route exact path={userUpdatePath + \":id\"}>\r\n          <DMSProfileInserting\r\n            showDrawer={props.showDrawer}\r\n            closeDrawer={() => props.closeDrawer()}\r\n            setDrawerState={(titre, content, width, enClose) =>\r\n              props.setDrawerState(titre, content, width, () => enClose())\r\n            }\r\n            history={history}\r\n            hostStorage={props.hostStorage}\r\n            icon={props.icon}\r\n            ref={refFormulaire}\r\n            disabelEditButton={(value) => props.disabelEditButton(value)}\r\n            service={props.service}\r\n            services={props.services.formulaire}\r\n            onFormulaireChange={(value) => props.onFormulaireChange(value)}\r\n            goTo={(link) => props.goTo(link)}\r\n          />\r\n        </Route>\r\n        <Route path=\"404\">\r\n          <Error404 />\r\n        </Route>\r\n        <Redirect from=\"*\" to=\"404\" />\r\n      </Switch>\r\n    </MemoryRouter>\r\n  );\r\n});\r\n\r\nexport default DMSRoute;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"antd/lib/style/themes/default.less\";\nimport \"antd/dist/antd.less\";\nimport { serviceProfile } from \"./metiers/Profile/Profiles\";\nimport DMSLayout from \"./templates/template1/component/Layout/Layout\";\nimport {\n  UserOutlined,\n  TeamOutlined,\n  SettingOutlined,\n  RotateLeftOutlined,\n  ShoppingCartOutlined,\n  ShopOutlined,\n} from \"@ant-design/icons\";\nimport { authApp, domaine } from \"./config\";\nimport { MemoryRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport DMSProfileRoute from \"./metiers/Profile/Route\";\nimport DMSUserRoute from \"./metiers/User/Route\";\nimport DMSProduitRoute from \"./metiers/Produit/Route\";\nimport DMSSiteRoute from \"./metiers/Site/Route\";\nimport DMSFournisseurRoute from \"./metiers/Fournisseur/Route\";\nimport axiosInstance from \"./DjangoService/AuthService\";\nimport { Button, Spin } from \"dmsui\";\nimport Error404 from \"./templates/template1/Pages/Error404\";\nimport Error403 from \"./templates/template1/Pages/Error403\";\nimport Error500 from \"./templates/template1/Pages/Error500\";\nimport { GetMenus } from \"./DjangoService/profileService\";\nimport { GetUserAuth } from \"./DjangoService/authnService\";\nvar createGuest = require(\"cross-domain-storage/guest\");\nvar hostStorage = createGuest(authApp);\nconst App = () => {\n  const refHistory = React.createRef();\n  const [menus, setMenus] = useState([]);\n  const [user, setUser] = useState(null);\n  const [loading, setloading] = useState(true);\n  const getObjectMenu = (link) => {\n    switch (link) {\n      case \"DMERP/v1/Referentiel/Sites/\":\n        return { constent: DMSSiteRoute, icon: ShopOutlined };\n        break;\n      case \"DMERP/v1/Referentiel/Client\":\n        return { constent: DMSProfileRoute, icon: UserOutlined };\n        break;\n      case \"DMERP/v1/Referentiel/Produits/\":\n        return { constent: DMSProduitRoute, icon: ShoppingCartOutlined };\n        break;\n      case \"DMERP/v1/Referentiel/Fournisseurs/\":\n        return { constent: DMSFournisseurRoute, icon: TeamOutlined };\n        break;\n      default:\n        return { constent: DMSUserRoute, icon: SettingOutlined };\n    }\n  };\n\n  const onFocus = () => {\n    hostStorage.get(\"access_token\", async function (error, value) {\n      if (value === null) {\n        console.log(\n          \"-------------------------------Logout-------------------------------\"\n        );\n        window.location.href = authApp;\n      }\n    });\n  };\n  useEffect(() => {\n    console.log(\"------------------debut-AlerteApplication------------------\");\n    window.addEventListener(\"focus\", onFocus);\n\n    hostStorage.get(\"access_token\", async function (error, value) {\n      console.log(\"------------------debut-getMenubyApp------------------\");\n      if (value == null) {\n        window.location.href = authApp;\n      }\n      try {\n        if (window.location.search != \"\") {\n          var App_id = window.location.search\n            .slice(1)\n            .split(\"?\")[0]\n            .split(\"App_id=\")[1];\n          localStorage.setItem(\"app_id\", App_id);\n          // window.location.replace(\"http://localhost:3001/\");\n        }\n        console.log(\n          \"succes  : Get id application Alerte from auth application.\"\n        );\n        const res = await GetMenus(localStorage.getItem(\"app_id\"), value);\n        console.log(\"succes from api : Menu => :\", res);\n        const userAuth = await GetUserAuth(value);\n        console.log(\"succes from api : User Auth => :\", userAuth);\n        const Menus = [];\n\n        res.data.Menus_per_applications.map((menu) => {\n          if (menu.AMNMENUID === null) {\n            Menus.push({\n              title: menu.AMNLIB,\n              services: serviceProfile,\n              composant: getObjectMenu(menu.AMNURL).constent,\n              service: domaine + menu.AMNURL,\n              key: menu.ID_ROWID,\n              icon: getObjectMenu(menu.AMNURL).icon,\n            });\n          } else {\n            var MenuGetByKey = Menus.find(function (obj) {\n              return obj.key === menu.AMNMENUID;\n            });\n            MenuGetByKey.subMenu != null\n              ? MenuGetByKey.subMenu.push({\n                  title: menu.AMNLIB,\n                  services: serviceProfile,\n                  composant: getObjectMenu(menu.AMNURL).constent,\n                  service: domaine + menu.AMNURL,\n                  key: menu.ID_ROWID,\n                  icon: getObjectMenu(menu.AMNURL).icon,\n                })\n              : (MenuGetByKey.subMenu = [\n                  {\n                    title: menu.AMNLIB,\n                    services: serviceProfile,\n                    composant: getObjectMenu(menu.AMNURL).constent,\n                    service: domaine + menu.AMNURL,\n                    key: menu.ID_ROWID,\n                    icon: getObjectMenu(menu.AMNURL).icon,\n                  },\n                ]);\n          }\n        });\n\n        setMenus(Menus);\n        setUser(userAuth.data);\n        console.log(\"succes  : chargement du menu => :\", Menus);\n      } catch (error) {\n        console.log(\"error2 :\", error);\n        if (error == \"Error: Network Error\") {\n          goto(\"500\");\n        }\n        // else {\n        //   goto(\"403\");\n        // }\n      }\n      setloading(false);\n      console.log(\"-------------------fin-GetMenuByApp-------------------\");\n    });\n  }, []);\n  const goto = (link) => {\n    refHistory.current.history.push(link);\n  };\n  return (\n    <MemoryRouter ref={refHistory} initialEntries={[\"layout\"]} initialIndex={0}>\n      <Switch>\n        <Route exact path={\"layout\"}>\n          {/* {logout ? (\n              <Redirect to=\"403\" />\n            ) : ( */}{\" \"}\n          <div style={{ backgroundColor: \"#f0f2f5\", height: \"100%\" }}>\n            {loading ? (\n              <Spin\n                spinning={loading}\n                size=\"large\"\n                delay={100}\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              ></Spin>\n            ) : (\n              <DMSLayout\n                goto={(link) => goto(link)}\n                logo={process.env.PUBLIC_URL + \"/logo.png\"}\n                userPhoto={process.env.PUBLIC_URL + \"/photo.png\"}\n                menu={menus}\n                user={user}\n                hostStorage={hostStorage}\n                minLogo={process.env.PUBLIC_URL + \"/minLogo.png\"}\n              />\n            )}\n          </div>{\" \"}\n          {/* )} */}\n        </Route>\n\n        <Route path=\"403\">\n          {/* {logout ? */}\n          <Error403 />\n          {/* : <Redirect to=\"layout\" />} */}\n        </Route>\n        <Route path=\"500\">\n          <Error500 />\n        </Route>\n        <Route path=\"404\">\n          <Error404 />\n        </Route>\n        <Redirect from=\"*\" to=\"404\" />\n      </Switch>\n    </MemoryRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}